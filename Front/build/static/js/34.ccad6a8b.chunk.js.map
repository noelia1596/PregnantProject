{"version":3,"sources":["components/ContainerHeader/index.js","components/CardBox/index.js","app/routes/extensions/routes/dropzone/FullScreen/index.js","app/routes/extensions/routes/dropzone/Accept/index.js","app/routes/extensions/routes/dropzone/BrowserLimitations/index.js","app/routes/extensions/routes/dropzone/Dialog/index.js","app/routes/extensions/routes/dropzone/index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","getUrlString","path","sub","index","split","ContainerHeader","_ref","title","match","substr","subPath","a","createElement","className","tag","map","active","length","key","href","arr","charAt","toUpperCase","slice","getDisplayString","CardBox","heading","children","styleName","cardStyle","childrenStyle","headerOutside","headingStyle","concat","defaultProps","FullScreen","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","accept","files","dropzoneActive","setState","event","target","value","_this$state","react_default","es","disableClick","style","position","onDrop","bind","onDragEnter","onDragLeave","top","right","bottom","left","padding","background","textAlign","color","htmlFor","type","id","onChange","applyMimeTypes","f","name","size","React","Component","Accept","accepted","rejected","_this2","BrowserLimitations","isDragActive","isDragReject","Dialog","dropzoneRef","ref","node","alert","reactstrap_es","onClick","open","DragNDrop","IntlMessages","props","dropzone_Accept","dropzone_BrowserLimitations","dropzone_Dialog","dropzone_FullScreen"],"mappings":"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","file":"static/js/34.ccad6a8b.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Breadcrumb, BreadcrumbItem} from 'reactstrap';\r\n\r\nconst getDisplayString = (sub) => {\r\n  const arr = sub.split(\"-\");\r\n  if (arr.length > 1) {\r\n    return arr[0].charAt(0).toUpperCase() + arr[0].slice(1) + \" \" + arr[1].charAt(0).toUpperCase() + arr[1].slice(1)\r\n  } else {\r\n    return sub.charAt(0).toUpperCase() + sub.slice(1)\r\n  }\r\n\r\n};\r\nconst getUrlString = (path, sub, index) => {\r\n  if (index === 0) {\r\n    return '#/';\r\n  } else {\r\n    return '#/' + path.split(sub)[0] + sub;\r\n  }\r\n};\r\n\r\nconst ContainerHeader = ({title, match}) => {\r\n  const path = match.path.substr(1);\r\n  const subPath = path.split('/');\r\n  return (\r\n    <div className=\"page-heading d-sm-flex justify-content-sm-between align-items-sm-center\">\r\n      <h2 className=\"title mb-3 mb-sm-0\">{title}</h2>\r\n\r\n      <Breadcrumb className=\"mb-0\" tag=\"nav\">\r\n        {subPath.map((sub, index) => {\r\n            return <BreadcrumbItem active={subPath.length === index + 1}\r\n                                   tag={subPath.length === index + 1 ? \"span\" : \"a\"} key={index}\r\n                                   href={getUrlString(path, sub, index)}>{getDisplayString(sub)}</BreadcrumbItem>\r\n          }\r\n        )}\r\n      </Breadcrumb>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ContainerHeader;\r\n\r\n","import React from 'react';\r\n\r\nconst CardBox = ({heading, children, styleName, cardStyle, childrenStyle, headerOutside,headingStyle}) => {\r\n\r\n  return (\r\n    <div className={`${styleName}`}>\r\n      {headerOutside &&\r\n      <div className=\"jr-entry-header\">\r\n        <h3 className=\"entry-heading\">{heading}</h3>\r\n        {children.length > 1 && <div className=\"entry-description\">{children[0]}</div>}\r\n      </div>\r\n      }\r\n\r\n      <div className={`jr-card ${cardStyle}`}>\r\n        {!headerOutside &&\r\n        ( heading &&\r\n          <div className={`jr-card-header ${headingStyle}`}>\r\n            <h3 className=\"card-heading\">{heading}</h3>\r\n            {children.length > 1 && <div className=\"sub-heading\">{children[0]}</div>}\r\n          </div>\r\n        )}\r\n        <div className={`jr-card-body ${childrenStyle}`}>\r\n          {children.length > 1 ? children[1] : children}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default CardBox;\r\n\r\nCardBox.defaultProps = {\r\n  cardStyle: '',\r\n  headingStyle:'',\r\n  childrenStyle: '',\r\n  styleName: 'col-lg-6 col-sm-12'\r\n};","import React from 'react';\r\nimport Dropzone from 'react-dropzone';\r\n\r\nclass FullScreen extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      accept: '',\r\n      files: [],\r\n      dropzoneActive: false\r\n    }\r\n  }\r\n\r\n  onDragEnter() {\r\n    this.setState({\r\n      dropzoneActive: true\r\n    });\r\n  }\r\n\r\n  onDragLeave() {\r\n    this.setState({\r\n      dropzoneActive: false\r\n    });\r\n  }\r\n\r\n  onDrop(files) {\r\n    this.setState({\r\n      files,\r\n      dropzoneActive: false\r\n    });\r\n  }\r\n\r\n  applyMimeTypes(event) {\r\n    this.setState({\r\n      accept: event.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {accept, files, dropzoneActive} = this.state;\r\n    const overlayStyle = {\r\n      position: 'absolute',\r\n      top: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      left: 0,\r\n      padding: '2.5em 0',\r\n      background: 'rgba(0,0,0,0.5)',\r\n      textAlign: 'center',\r\n      color: '#fff'\r\n    };\r\n    return (\r\n      <Dropzone\r\n        disableClick\r\n        style={{position: 'relative'}}\r\n        accept={accept}\r\n        onDrop={this.onDrop.bind(this)}\r\n        onDragEnter={this.onDragEnter.bind(this)}\r\n        onDragLeave={this.onDragLeave.bind(this)}\r\n      >\r\n        {dropzoneActive && <div style={overlayStyle}>Drop files...</div>}\r\n        <div className=\"dropzone-card\">\r\n          <h1>My awesome app</h1>\r\n          <div className=\"form-group form-group-dropzone\">\r\n            <label htmlFor=\"mimetypes\">Enter mime types you want to accept: </label>\r\n            <input className=\"form-control\"\r\n                   type=\"text\"\r\n                   id=\"mimetypes\"\r\n                   onChange={this.applyMimeTypes.bind(this)}/>​\r\n          </div>\r\n          <h2>Dropped files</h2>\r\n          <ul className=\"upload-file-list\">\r\n            {\r\n              files.map(f => <li>{f.name} - {f.size} bytes</li>)\r\n            }\r\n          </ul>\r\n          ​\r\n        </div>\r\n      </Dropzone>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FullScreen;","import React from 'react';\r\nimport Dropzone from 'react-dropzone';\r\n\r\nclass Accept extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      accepted: [],\r\n      rejected: []\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"dropzone-card\">\r\n        <div className=\"dropzone\">\r\n          <Dropzone\r\n            accept=\"image/jpeg, image/png\"\r\n            onDrop={(accepted, rejected) => {\r\n              this.setState({accepted, rejected});\r\n            }}\r\n          >\r\n            <p>Try dropping some files here, or click to select files to upload.</p>\r\n            <p className=\"mb-0\">Only *.jpeg and *.png images will be accepted</p>\r\n          </Dropzone>\r\n        </div>\r\n        <div className=\"dropzone-content\">\r\n          <h2>Accepted files</h2>\r\n          {this.state.accepted.length > 0 && <ul className=\"upload-file-list\">\r\n            {\r\n              this.state.accepted.map(f => <li key={f.name}>{f.name} - {f.size} bytes</li>)\r\n            }\r\n          </ul>\r\n          }\r\n          <h2>Rejected files</h2>\r\n          {this.state.rejected.length > 0 && <ul className=\"upload-file-list\">\r\n            {\r\n              this.state.rejected.map(f => <li key={f.name}>{f.name} - {f.size} bytes</li>)\r\n            }\r\n          </ul>\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Accept;","import React from 'react';\r\nimport Dropzone from 'react-dropzone';\r\n\r\nclass BrowserLimitations extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      accepted: [],\r\n      rejected: []\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"dropzone-card\">\r\n        <div className=\"dropzone\">\r\n          <Dropzone\r\n            accept=\".jpeg,.png\"\r\n            onDrop={(accepted, rejected) => {\r\n              this.setState({accepted, rejected});\r\n            }}\r\n          >\r\n            {({isDragActive, isDragReject}) => {\r\n              if (isDragActive) {\r\n                return 'All files will be accepted';\r\n              }\r\n              if (isDragReject) {\r\n                return 'Some files will be rejected';\r\n              }\r\n              return 'Dropping some files here...';\r\n            }}\r\n          </Dropzone>\r\n        </div>\r\n        <div className=\"dropzone-content\">\r\n          <h2>Accepted files</h2>\r\n          {this.state.accepted.length > 0 && <ul className=\"upload-file-list\">\r\n            {\r\n              this.state.accepted.map(f => <li key={f.name}>{f.name} - {f.size} bytes</li>)\r\n            }\r\n          </ul>\r\n          }\r\n          <h2>Rejected files</h2>\r\n          {this.state.rejected.length > 0 && <ul className=\"upload-file-list\">\r\n            {\r\n              this.state.rejected.map(f => <li key={f.name}>{f.name} - {f.size} bytes</li>)\r\n            }\r\n          </ul>\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BrowserLimitations;","import React from 'react';\r\nimport {Button} from 'reactstrap';\r\nimport Dropzone from 'react-dropzone';\r\n\r\nclass Dialog extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      accepted: [],\r\n      rejected: []\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let dropzoneRef;\r\n    return (\r\n      <div className=\"dropzone-card\">\r\n        <div className=\"dropzone\">\r\n          <Dropzone ref={(node) => {\r\n            dropzoneRef = node;\r\n          }} onDrop={(accepted, rejected) => {\r\n            alert(accepted)\r\n          }}>\r\n            <p>Drop files here.</p>\r\n          </Dropzone>\r\n          <Button color=\"primary\" onClick={() => {\r\n            dropzoneRef.open()\r\n          }}>\r\n            Open File Dialog\r\n          </Button>\r\n        </div>\r\n        <div className=\"dropzone-content\">\r\n          <h2>Accepted files</h2>\r\n          {this.state.accepted.length > 0 && <ul className=\"upload-file-list\">\r\n            {\r\n              this.state.accepted.map(f => <li key={f.name}>{f.name} - {f.size} bytes</li>)\r\n            }\r\n          </ul>\r\n          }\r\n          <h2>Rejected files</h2>\r\n          {this.state.rejected.length > 0 && <ul className=\"upload-file-list\">\r\n            {\r\n              this.state.rejected.map(f => <li key={f.name}>{f.name} - {f.size} bytes</li>)\r\n            }\r\n          </ul>\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dialog;","import React, {Component} from 'react';\r\n\r\nimport ContainerHeader from 'components/ContainerHeader/index';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport FullScreen from './FullScreen/index';\r\nimport CardBox from 'components/CardBox/index';\r\nimport Accept from './Accept/index';\r\nimport BrowserLimitations from './BrowserLimitations/index';\r\nimport Dialog from './Dialog/index';\r\n\r\n\r\nclass DragNDrop extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ContainerHeader title={<IntlMessages id=\"sidebar.extensions.dropzone\"/>} match={this.props.match}/>\r\n        <div className=\"row\">\r\n          <CardBox styleName=\"col-sm-6\" cardStyle=\"\" childrenStyle=\"text-center\">\r\n            <Accept/>\r\n          </CardBox>\r\n          <CardBox styleName=\"col-sm-6\" cardStyle=\"\" childrenStyle=\"text-center\">\r\n            <BrowserLimitations/>\r\n          </CardBox>\r\n          <CardBox styleName=\"col-sm-6\" cardStyle=\"\" childrenStyle=\"text-center\">\r\n            <Dialog/>\r\n          </CardBox>\r\n          <CardBox styleName=\"col-sm-6\" cardStyle=\"\" childrenStyle=\"text-center\">\r\n            <FullScreen/>\r\n          </CardBox>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DragNDrop\r\n"],"sourceRoot":""}