{"version":3,"sources":["app/routes/chatPanel/basic/index.js","components/chatPanel/Conversation/ReceivedMessageCell/index.js","components/chatPanel/Conversation/SentMessageCell/index.js","components/chatPanel/Conversation/index.js","components/chatPanel/ContactList/UserCell/index.js","components/chatPanel/ContactList/index.js","components/chatPanel/ChatUserList/UserCell/index.js","components/chatPanel/ChatUserList/index.js"],"names":["ChatPanel","_this","Object","C_Users_Noelia_Desktop_Plantillas_source_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","C_Users_Noelia_Desktop_Plantillas_source_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","C_Users_Noelia_Desktop_Plantillas_source_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","filterContact","userName","users","filter","user","recent","name","toLowerCase","indexOf","filterUsers","Communication","_this$state","state","message","selectedUser","conversationData","conversation","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","className","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_16___default","aria-label","onClick","onToggleDrawer","bind","C_Users_Noelia_Desktop_Plantillas_source_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","src","thumb","alt","concat","status","util_CustomScrollbars__WEBPACK_IMPORTED_MODULE_26__","style","height","props","width","components_chatPanel_Conversation_index__WEBPACK_IMPORTED_MODULE_21__","maxHeight","id","onKeyUp","_handleKeyPress","onChange","updateMessageValue","value","placeholder","submitComment","AppUsersInfo","setState","userState","_material_ui_core_Input__WEBPACK_IMPORTED_MODULE_17___default","fullWidth","multiline","rows","defaultValue","margin","ChatUsers","components_SearchBox_index__WEBPACK_IMPORTED_MODULE_24__","updateSearchChatUser","searchChatUser","_material_ui_core_AppBar__WEBPACK_IMPORTED_MODULE_12___default","position","_material_ui_core_Tabs__WEBPACK_IMPORTED_MODULE_13___default","selectedTabIndex","handleChange","indicatorColor","textColor","variant","_material_ui_core_Tab__WEBPACK_IMPORTED_MODULE_14___default","label","util_IntlMessages__WEBPACK_IMPORTED_MODULE_25__","react_swipeable_views__WEBPACK_IMPORTED_MODULE_11___default","index","onChangeIndex","handleChangeIndex","chatUsers","length","userNotFound","components_chatPanel_ChatUserList__WEBPACK_IMPORTED_MODULE_19__","selectedSectionId","onSelectUser","contactList","components_chatPanel_ContactList_index__WEBPACK_IMPORTED_MODULE_23__","e","key","event","loader","drawerState","conversationList","find","data","setTimeout","showCommunication","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_8___default","color","_this2","updatedConversation","type","sentAt","Moment","format","C_Users_Noelia_Desktop_Plantillas_source_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","map","evt","target","_this$state2","_material_ui_core_Drawer__WEBPACK_IMPORTED_MODULE_9___default","open","onClose","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_15___default","Component","connect","_ref","settings","ReceivedMessageCell","react_default","SentMessageCell","Conversation","Conversation_SentMessageCell","Conversation_ReceivedMessageCell","UserCell","mood","substring","ContactList","ContactList_UserCell","chat","lastMessage","lastMessageTime","unreadMessage","ChatUserList","ChatUserList_UserCell"],"mappings":"8aAqBMA,cA2PJ,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QA3PFI,cAAgB,SAACC,GACf,MAAiB,KAAbA,EACKC,IAAMC,OAAO,SAAAC,GAAI,OAAKA,EAAKC,SAE7BH,IAAMC,OAAO,SAACC,GAAD,OACjBA,EAAKC,QAAUD,EAAKE,KAAKC,cAAcC,QAAQP,EAASM,gBAAkB,KAqPjEd,EAlPdgB,YAAc,SAACR,GACb,MAAiB,KAAbA,EACKC,IAAMC,OAAO,SAAAC,GAAI,OAAIA,EAAKC,SAE5BH,IAAMC,OAAO,SAACC,GAAD,OAClBA,EAAKC,QAAUD,EAAKE,KAAKC,cAAcC,QAAQP,EAASM,gBAAkB,KA6OhEd,EA1OdiB,cAAgB,WAAM,IAAAC,EAC0BlB,EAAKmB,MAA5CC,EADaF,EACbE,QAASC,EADIH,EACJG,aACTC,EAFaJ,EACUK,aACvBD,iBACP,OAAOE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAYE,UAAU,6BAA6BE,aAAW,OAClDC,QAAS9B,EAAK+B,eAAeC,KAApB/B,OAAAgC,EAAA,EAAAhC,QAAAgC,EAAA,EAAAhC,CAAAD,MACnBwB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,4BAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKQ,IAAKb,EAAac,MAClBR,UAAU,yBACVS,IAAI,KAETZ,EAAAC,EAAAC,cAAA,QAAMC,UAAS,aAAAU,OAAehB,EAAaiB,YAI/Cd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACZN,EAAaR,QAMpBW,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAkBZ,UAAU,6BACVa,MAAO,CAACC,OAAQzC,EAAK0C,MAAMC,OAAS,KAAO,sBAAwB,wBACnFnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAActB,iBAAkBA,EAClBD,aAAcA,KAG9BG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCAAqCa,MAAO,CAACK,UAAW,KACrErB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACCH,EAAAC,EAAAC,cAAA,YACEoB,GAAG,WAAWnB,UAAU,sCACxBoB,QAAS/C,EAAKgD,gBAAgBhB,KAArB/B,OAAAgC,EAAA,EAAAhC,QAAAgC,EAAA,EAAAhC,CAAAD,KACTiD,SAAUjD,EAAKkD,mBAAmBlB,KAAxB/B,OAAAgC,EAAA,EAAAhC,QAAAgC,EAAA,EAAAhC,CAAAD,KACVmD,MAAO/B,EACPgC,YAAY,yCAIhC5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CACEK,QAAS9B,EAAKqD,cAAcrB,KAAnB/B,OAAAgC,EAAA,EAAAhC,QAAAgC,EAAA,EAAAhC,CAAAD,KACT6B,aAAW,gBACXL,EAAAC,EAAAC,cAAA,KAAGC,UAAU,+BAuLX3B,EA/KdsD,aAAe,WACb,OAAO9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAYE,UAAU,uBAAuBE,aAAW,cAC5CC,QAAS,WACP9B,EAAKuD,SAAS,CACZC,UAAW,MAGzBhC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BAGjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,OAAKQ,IAAI,sCACJP,UAAU,mDAAmDS,IAAI,cAGxEZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAf,oBAIJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAEbH,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAkBZ,UAAU,gCACVa,MAAO,CAACC,OAAQzC,EAAK0C,MAAMC,OAAS,KAAO,sBAAwB,wBACnFnB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,qBAEAF,EAAAC,EAAAC,cAAC+B,EAAAhC,EAAD,CACEiC,WAAW,EACXZ,GAAG,kBACHa,WAAS,EACTC,KAAM,EACNb,QAAS/C,EAAKgD,gBAAgBhB,KAArB/B,OAAAgC,EAAA,EAAAhC,QAAAgC,EAAA,EAAAhC,CAAAD,KACTiD,SAAUjD,EAAKkD,mBAAmBlB,KAAxB/B,OAAAgC,EAAA,EAAAhC,QAAAgC,EAAA,EAAAhC,CAAAD,KACV6D,aAAa,qCACbT,YAAY,SACZU,OAAO,eAsIP9D,EA7Hd+D,UAAY,WACV,OAAOvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAEpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBG,QAAS,WACzC9B,EAAKuD,SAAS,CACZC,UAAW,MAGbhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKoB,GAAG,qBAAqBZ,IAAI,sCAC5BP,UAAU,yBACVS,IAAI,KACTZ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uBAIpBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAd,mBAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBAAhB,yBAKNH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAEbH,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAWZ,YAAY,2BACZH,SAAUjD,EAAKiE,qBAAqBjC,KAA1B/B,OAAAgC,EAAA,EAAAhC,QAAAgC,EAAA,EAAAhC,CAAAD,KACVmD,MAAOnD,EAAKmB,MAAM+C,mBAKjC1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAACyC,EAAA1C,EAAD,CAAQ2C,SAAS,SAASzC,UAAU,8BAClCH,EAAAC,EAAAC,cAAC2C,EAAA5C,EAAD,CACEE,UAAU,YACVwB,MAAOnD,EAAKmB,MAAMmD,iBAClBrB,SAAUjD,EAAKuE,aACfC,eAAe,UACfC,UAAU,UACVC,QAAQ,aACRlD,EAAAC,EAAAC,cAACiD,EAAAlD,EAAD,CAAKmD,MAAOpD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAc/B,GAAG,oBAC7BtB,EAAAC,EAAAC,cAACiD,EAAAlD,EAAD,CAAKmD,MAAOpD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAc/B,GAAG,sBAGjCtB,EAAAC,EAAAC,cAACoD,EAAArD,EAAD,CACEsD,MAAO/E,EAAKmB,MAAMmD,iBAClBU,cAAehF,EAAKiF,mBAEpBzD,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAkBZ,UAAU,gCACVa,MAAO,CAACC,OAAQzC,EAAK0C,MAAMC,OAAS,KAAO,sBAAwB,wBAClD,IAAhC3C,EAAKmB,MAAM+D,UAAUC,OACpB3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO3B,EAAKmB,MAAMiE,cAEjC5D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAcH,UAAWlF,EAAKmB,MAAM+D,UACtBI,kBAAmBtF,EAAKmB,MAAMmE,kBAC9BC,aAAcvF,EAAKuF,aAAavD,KAAlB/B,OAAAgC,EAAA,EAAAhC,QAAAgC,EAAA,EAAAhC,CAAAD,QAIhCwB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAkBZ,UAAU,gCACVa,MAAO,CAACC,OAAQzC,EAAK0C,MAAMC,OAAS,KAAO,sBAAwB,wBAE/C,IAAlC3C,EAAKmB,MAAMqE,YAAYL,OACrB3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO3B,EAAKmB,MAAMiE,cAEjC5D,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAaD,YAAaxF,EAAKmB,MAAMqE,YACxBF,kBAAmBtF,EAAKmB,MAAMmE,kBAC9BC,aAAcvF,EAAKuF,aAAavD,KAAlB/B,OAAAgC,EAAA,EAAAhC,QAAAgC,EAAA,EAAAhC,CAAAD,YAkD3BA,EA1CdgD,gBAAkB,SAAC0C,GACH,UAAVA,EAAEC,KACJ3F,EAAKqD,iBAwCKrD,EApCduE,aAAe,SAACqB,EAAOzC,GACrBnD,EAAKuD,SAAS,CAACe,iBAAkBnB,KAmCrBnD,EAhCdiF,kBAAoB,SAAAF,GAClB/E,EAAKuD,SAAS,CAACe,iBAAkBS,KA+BrB/E,EA7BduF,aAAe,SAAC5E,GACdX,EAAKuD,SAAS,CACZsC,QAAQ,EACRP,kBAAmB3E,EAAKmC,GACxBgD,YAAa9F,EAAK0C,MAAMoD,YACxBzE,aAAcV,EACdY,aAAcvB,EAAKmB,MAAM4E,iBAAiBC,KAAK,SAACC,GAAD,OAAUA,EAAKnD,KAAOnC,EAAKmC,OAE5EoD,WAAW,WACTlG,EAAKuD,SAAS,CAACsC,QAAQ,KACtB,OAmBS7F,EAjBdmG,kBAAoB,WAClB,OACE3E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACe,OAA5B3B,EAAKmB,MAAME,aACTG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAca,MAAO,CAACC,OAAQ,wBAC3CjB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uCACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcH,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAc/B,GAAG,yBAC7CtB,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAQE,UAAU,oBAAoB0E,MAAM,UACpCvE,QAAS9B,EAAK+B,eAAeC,KAApB/B,OAAAgC,EAAA,EAAAhC,QAAAgC,EAAA,EAAAhC,CAAAD,MAAiCwB,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAChD/B,GAAG,6BAEL9C,EAAKiB,mBAOfjB,EAAKmB,MAAQ,CACX0E,QAAQ,EACRT,aAAc,gBACdU,aAAa,EACbR,kBAAmB,GACnBhB,iBAAkB,EAClBd,UAAW,EACXU,eAAgB,GAChBsB,YAAa/E,IAAMC,OAAO,SAACC,GAAD,OAAWA,EAAKC,SAC1CS,aAAc,KACdD,QAAS,GACT8D,UAAWzE,IAAMC,OAAO,SAACC,GAAD,OAAUA,EAAKC,SACvCmF,iBAAkBA,IAClBxE,aAAc,MAfJvB,+EAmBE,IAAAsG,EAAAnG,KACd,GAA2B,KAAvBA,KAAKgB,MAAMC,QAAgB,CAC7B,IAAMmF,EAAsBpG,KAAKgB,MAAMI,aAAaD,iBAAiBe,OAAO,CAC1EmE,KAAQ,OACRpF,QAAWjB,KAAKgB,MAAMC,QACtBqF,OAAUC,MAASC,OAAO,gBAE5BxG,KAAKoD,SAAS,CACZhC,aAAatB,OAAA2G,EAAA,EAAA3G,CAAA,GACRE,KAAKgB,MAAMI,aADJ,CACkBD,iBAAkBiF,IAEhDnF,QAAS,GACT2E,iBAAkB5F,KAAKgB,MAAM4E,iBAAiBc,IAAI,SAAAvF,GAChD,OAAIA,EAAiBwB,KAAOwD,EAAKnF,MAAMI,aAAauB,GAC3C7C,OAAA2G,EAAA,EAAA3G,CAAA,GAAIqG,EAAKnF,MAAMI,aAAtB,CAAoCD,iBAAkBiF,IAE/CjF,kDAOEwF,GACjB3G,KAAKoD,SAAS,CACZnC,QAAS0F,EAAIC,OAAO5D,qDAIH2D,GACnB3G,KAAKoD,SAAS,CACZW,eAAgB4C,EAAIC,OAAO5D,MAC3BqC,YAAarF,KAAKI,cAAcuG,EAAIC,OAAO5D,OAC3C+B,UAAW/E,KAAKa,YAAY8F,EAAIC,OAAO5D,kDAKzChD,KAAKoD,SAAS,CACZuC,aAAc3F,KAAKgB,MAAM2E,+CAIpB,IAAAkB,EACkC7G,KAAKgB,MAAvC0E,EADAmB,EACAnB,OAAQrC,EADRwD,EACQxD,UAAWsC,EADnBkB,EACmBlB,YAC1B,OACEtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sEACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAACuF,EAAAxF,EAAD,CAAQyF,KAAMpB,EACNqB,QAAShH,KAAK4B,eAAeC,KAAK7B,OACzB,IAAdqD,EAAkBrD,KAAK4D,YAAc5D,KAAKmD,iBAG/C9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACE,IAAd6B,EAAkBrD,KAAK4D,YAAc5D,KAAKmD,gBAE5CuC,EACCrE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACVa,MAAO,CAACC,OAAQ,wBACnBjB,EAAAC,EAAAC,cAAC0F,EAAA3F,EAAD,OACOtB,KAAKgG,8BA5UJkB,aA0VTC,sBALS,SAAAC,GAEtB,MAAO,CAAC5E,MAF8B4E,EAAdC,SACjB7E,QAIM2E,CAAyBvH,yDC7VzB0H,EAhBa,SAAAF,GAA0B,IAAxBhG,EAAwBgG,EAAxBhG,aAAcZ,EAAU4G,EAAV5G,KAC1C,OACE+G,EAAAjG,EAAAC,cAAA,OAAKC,UAAU,gCAEb+F,EAAAjG,EAAAC,cAAA,OAAKC,UAAU,+CAA+CO,IAAKvB,EAAKwB,MACnEC,IAAI,KAETsF,EAAAjG,EAAAC,cAAA,OAAKC,UAAU,UACb+F,EAAAjG,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAaH,SACvCsG,EAAAjG,EAAAC,cAAA,OAAKC,UAAU,mCAAmCJ,EAAakF,WCOxDkB,EAhBS,SAAAJ,GAAoB,IAAlBhG,EAAkBgG,EAAlBhG,aACxB,OACEmG,EAAAjG,EAAAC,cAAA,OAAKC,UAAU,iDAEb+F,EAAAjG,EAAAC,cAAA,OAAKC,UAAU,+CAA+CO,IAAI,sCAC7DE,IAAKb,EAAaV,OAEvB6G,EAAAjG,EAAAC,cAAA,OAAKC,UAAU,qBACb+F,EAAAjG,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAaH,SACvCsG,EAAAjG,EAAAC,cAAA,OAAKC,UAAU,mCAAmCJ,EAAakF,WCKxDmB,IAZM,SAAAL,GAAsC,IAApCjG,EAAoCiG,EAApCjG,iBAAkBD,EAAkBkG,EAAlBlG,aAEvC,OACEqG,EAAAjG,EAAAC,cAAA,OAAKC,UAAU,qBACZL,EAAiBuF,IAAI,SAACtF,EAAcwD,GAAf,MAA+C,SAAtBxD,EAAaiF,KAC1DkB,EAAAjG,EAAAC,cAACmG,EAAD,CAAiBlC,IAAKZ,EAAOxD,aAAcA,IAC3CmG,EAAAjG,EAAAC,cAACoG,EAAD,CAAqBnC,IAAKZ,EAAOxD,aAAcA,EAAcZ,KAAMU,8DCc5D0G,EAtBE,SAAAR,GAA6C,IAA3ChC,EAA2CgC,EAA3ChC,aAAcD,EAA6BiC,EAA7BjC,kBAAmB3E,EAAU4G,EAAV5G,KAClD,OACE+G,EAAAjG,EAAAC,cAAA,OAAKC,UAAS,kBAAAU,OAAoBiD,IAAsB3E,EAAKmC,GAAK,SAAW,IAAMhB,QAAS,WAC1FyD,EAAa5E,KAEb+G,EAAAjG,EAAAC,cAAA,OAAKC,UAAU,qBACb+F,EAAAjG,EAAAC,cAAA,OAAKC,UAAU,8BACb+F,EAAAjG,EAAAC,cAAA,OAAKC,UAAU,oBACb+F,EAAAjG,EAAAC,cAAA,OAAKQ,IAAKvB,EAAKwB,MAAOR,UAAU,yBAAyBS,IAAI,WAC7DsF,EAAAjG,EAAAC,cAAA,QAAMC,UAAS,sBAAAU,OAAwB1B,EAAK2B,YAIhDoF,EAAAjG,EAAAC,cAAA,OAAKC,UAAU,oCACb+F,EAAAjG,EAAAC,cAAA,OAAKC,UAAU,WAAWhB,EAAKE,MAC/B6G,EAAAjG,EAAAC,cAAA,OAAKC,UAAU,iBAAiBhB,EAAKqH,KAAKC,UAAU,EAAG,IAAM,WCJxDC,IAVK,SAAAX,GAAoD,IAAlDhC,EAAkDgC,EAAlDhC,aAAcD,EAAoCiC,EAApCjC,kBAAmBE,EAAiB+B,EAAjB/B,YACrD,OACEkC,EAAAjG,EAAAC,cAAA,OAAKC,UAAU,aACZ6D,EAAYqB,IAAI,SAAClG,EAAMoE,GAAP,OACf2C,EAAAjG,EAAAC,cAACyG,EAAD,CAAUxC,IAAKZ,EAAOpE,KAAMA,EAAM2E,kBAAmBA,EAAmBC,aAAcA,8DCsB/EwC,EA3BE,SAAAR,GAA6C,IAA3Ca,EAA2Cb,EAA3Ca,KAAM9C,EAAqCiC,EAArCjC,kBAAmBC,EAAkBgC,EAAlBhC,aAC1C,OACEmC,EAAAjG,EAAAC,cAAA,OAAKiE,IAAKyC,EAAKtF,GAAInB,UAAS,kBAAAU,OAAoBiD,IAAsB8C,EAAKtF,GAAK,SAAW,IAAMhB,QAAS,WACxGyD,EAAa6C,KAEbV,EAAAjG,EAAAC,cAAA,OAAKC,UAAU,qBACb+F,EAAAjG,EAAAC,cAAA,OAAKC,UAAU,8BACb+F,EAAAjG,EAAAC,cAAA,OAAKC,UAAU,oBACb+F,EAAAjG,EAAAC,cAAA,OAAKQ,IAAKkG,EAAKjG,MAAOR,UAAU,yBAAyBS,IAAKgG,EAAKvH,OACnE6G,EAAAjG,EAAAC,cAAA,QAAMC,UAAS,mBAAAU,OAAqB+F,EAAK9F,YAI7CoF,EAAAjG,EAAAC,cAAA,OAAKC,UAAU,4BACb+F,EAAAjG,EAAAC,cAAA,QAAMC,UAAU,WAAWyG,EAAKvH,MAChC6G,EAAAjG,EAAAC,cAAA,OAAKC,UAAU,iBAAiByG,EAAKC,YAAYJ,UAAU,EAAG,IAAM,OACpEP,EAAAjG,EAAAC,cAAA,OAAKC,UAAU,qBAAqByG,EAAKE,kBAG3CZ,EAAAjG,EAAAC,cAAA,OAAKC,UAAU,4BACb+F,EAAAjG,EAAAC,cAAA,OAAKC,UAAU,8CAA8CyG,EAAKG,mBCT7DC,IAVM,SAAAjB,GAAkD,IAAhDrC,EAAgDqC,EAAhDrC,UAAWI,EAAqCiC,EAArCjC,kBAAmBC,EAAkBgC,EAAlBhC,aACnD,OACEmC,EAAAjG,EAAAC,cAAA,OAAKC,UAAU,aACZuD,EAAU2B,IAAI,SAACuB,EAAMrD,GAAP,OACb2C,EAAAjG,EAAAC,cAAC+G,EAAD,CAAU9C,IAAKZ,EAAOqD,KAAMA,EAAM9C,kBAAmBA,EAAmBC,aAAcA","file":"static/js/10.3c92bd4d.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport {connect} from 'react-redux'\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Input from '@material-ui/core/Input'\r\nimport Moment from 'moment';\r\nimport ChatUserList from 'components/chatPanel/ChatUserList';\r\nimport conversationList from '../data/conversationList';\r\nimport Conversation from 'components/chatPanel/Conversation/index';\r\nimport users from '../data/chatUsers';\r\nimport ContactList from 'components/chatPanel/ContactList/index';\r\nimport SearchBox from 'components/SearchBox/index';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport CustomScrollbars from 'util/CustomScrollbars';\r\n\r\nclass ChatPanel extends Component {\r\n  filterContact = (userName) => {\r\n    if (userName === '') {\r\n      return users.filter(user => !user.recent);\r\n    }\r\n    return users.filter((user) =>\r\n      !user.recent && user.name.toLowerCase().indexOf(userName.toLowerCase()) > -1\r\n    );\r\n  };\r\n  filterUsers = (userName) => {\r\n    if (userName === '') {\r\n      return users.filter(user => user.recent);\r\n    }\r\n    return users.filter((user) =>\r\n      user.recent && user.name.toLowerCase().indexOf(userName.toLowerCase()) > -1\r\n    );\r\n  };\r\n  Communication = () => {\r\n    const {message, selectedUser, conversation} = this.state;\r\n    const {conversationData} = conversation;\r\n    return <div className=\"chat-main\">\r\n      <div className=\"chat-main-header\">\r\n        <IconButton className=\"d-block d-xl-none chat-btn\" aria-label=\"Menu\"\r\n                    onClick={this.onToggleDrawer.bind(this)}>\r\n          <i className=\"zmdi zmdi-comment-text\"/>\r\n        </IconButton>\r\n        <div className=\"chat-main-header-info\">\r\n\r\n          <div className=\"chat-avatar mr-2\">\r\n            <div className=\"chat-avatar-mode\">\r\n              <img src={selectedUser.thumb}\r\n                   className=\"rounded-circle size-60\"\r\n                   alt=\"\"/>\r\n\r\n              <span className={`chat-mode ${selectedUser.status}`}/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"chat-contact-name\">\r\n            {selectedUser.name}\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <CustomScrollbars className=\"chat-list-scroll scrollbar\"\r\n                        style={{height: this.props.width >= 1200 ? 'calc(100vh - 300px)' : 'calc(100vh - 255px)'}}>\r\n        <Conversation conversationData={conversationData}\r\n                      selectedUser={selectedUser}/>\r\n      </CustomScrollbars>\r\n\r\n      <div className=\"chat-main-footer\">\r\n        <div className=\"d-flex flex-row align-items-center\" style={{maxHeight: 51}}>\r\n          <div className=\"col\">\r\n            <div className=\"form-group\">\r\n                            <textarea\r\n                              id=\"required\" className=\"border-0 form-control chat-textarea\"\r\n                              onKeyUp={this._handleKeyPress.bind(this)}\r\n                              onChange={this.updateMessageValue.bind(this)}\r\n                              value={message}\r\n                              placeholder=\"Type and hit enter to send message\"\r\n                            />\r\n            </div>\r\n          </div>\r\n          <div className=\"chat-sent\">\r\n            <IconButton\r\n              onClick={this.submitComment.bind(this)}\r\n              aria-label=\"Send message\">\r\n              <i className=\"zmdi  zmdi-mail-send\"/>\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  };\r\n\r\n  AppUsersInfo = () => {\r\n    return <div className=\"chat-sidenav-main\">\r\n      <div className=\"bg-grey lighten-5 chat-sidenav-header\">\r\n\r\n        <div className=\"chat-user-hd mb-0\">\r\n          <IconButton className=\"back-to-chats-button\" aria-label=\"back button\"\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          userState: 1\r\n                        });\r\n                      }}>\r\n            <i className=\"zmdi zmdi-arrow-back\"/>\r\n          </IconButton>\r\n        </div>\r\n        <div className=\"chat-user chat-user-center\">\r\n          <div className=\"chat-avatar mx-auto\">\r\n            <img src=\"https://via.placeholder.com/150x150\"\r\n                 className=\"avatar avatar-shadow rounded-circle size-60 huge\" alt=\"John Doe\"/>\r\n          </div>\r\n\r\n          <div className=\"user-name h4 my-2\">Robert Johnson</div>\r\n\r\n        </div>\r\n      </div>\r\n      <div className=\"chat-sidenav-content\">\r\n\r\n        <CustomScrollbars className=\"chat-sidenav-scroll scrollbar\"\r\n                          style={{height: this.props.width >= 1200 ? 'calc(100vh - 328px)' : 'calc(100vh - 162px)'}}>\r\n          <form className=\"p-4\">\r\n            <div className=\"form-group mt-4\">\r\n              <label>Mood</label>\r\n\r\n              <Input\r\n                fullWidth={true}\r\n                id=\"exampleTextarea\"\r\n                multiline\r\n                rows={3}\r\n                onKeyUp={this._handleKeyPress.bind(this)}\r\n                onChange={this.updateMessageValue.bind(this)}\r\n                defaultValue=\"it's a status....not your diary...\"\r\n                placeholder=\"Status\"\r\n                margin=\"none\"/>\r\n\r\n            </div>\r\n          </form>\r\n        </CustomScrollbars>\r\n\r\n      </div>\r\n    </div>\r\n  };\r\n  ChatUsers = () => {\r\n    return <div className=\"chat-sidenav-main\">\r\n\r\n      <div className=\"chat-sidenav-header\">\r\n\r\n        <div className=\"chat-user-hd\">\r\n\r\n          <div className=\"chat-avatar mr-3\" onClick={() => {\r\n            this.setState({\r\n              userState: 2\r\n            });\r\n          }}>\r\n            <div className=\"chat-avatar-mode\">\r\n              <img id=\"user-avatar-button\" src=\"https://via.placeholder.com/150x150\"\r\n                   className=\"rounded-circle size-50\"\r\n                   alt=\"\"/>\r\n              <span className=\"chat-mode online\"/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"module-user-info d-flex flex-column justify-content-center\">\r\n            <div className=\"module-title\">\r\n              <h5 className=\"mb-0\">Robert Johnson</h5>\r\n            </div>\r\n            <div className=\"module-user-detail\">\r\n              <span className=\"jr-link text-grey\">robert@example.com</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"search-wrapper\">\r\n\r\n          <SearchBox placeholder=\"Search or start new chat\"\r\n                     onChange={this.updateSearchChatUser.bind(this)}\r\n                     value={this.state.searchChatUser}/>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chat-sidenav-content\">\r\n        <AppBar position=\"static\" className=\"no-shadow chat-tabs-header\">\r\n          <Tabs\r\n            className=\"chat-tabs\"\r\n            value={this.state.selectedTabIndex}\r\n            onChange={this.handleChange}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"fullWidth\">\r\n            <Tab label={<IntlMessages id=\"chat.chatUser\"/>}/>\r\n            <Tab label={<IntlMessages id=\"chat.contacts\"/>}/>\r\n          </Tabs>\r\n        </AppBar>\r\n        <SwipeableViews\r\n          index={this.state.selectedTabIndex}\r\n          onChangeIndex={this.handleChangeIndex}\r\n        >\r\n          <CustomScrollbars className=\"chat-sidenav-scroll scrollbar\"\r\n                            style={{height: this.props.width >= 1200 ? 'calc(100vh - 328px)' : 'calc(100vh - 202px)'}}>\r\n            {this.state.chatUsers.length === 0 ?\r\n              <div className=\"p-5\">{this.state.userNotFound}</div>\r\n              :\r\n              <ChatUserList chatUsers={this.state.chatUsers}\r\n                            selectedSectionId={this.state.selectedSectionId}\r\n                            onSelectUser={this.onSelectUser.bind(this)}/>\r\n            }\r\n          </CustomScrollbars>\r\n\r\n          <CustomScrollbars className=\"chat-sidenav-scroll scrollbar\"\r\n                            style={{height: this.props.width >= 1200 ? 'calc(100vh - 328px)' : 'calc(100vh - 202px)'}}>\r\n            {\r\n              this.state.contactList.length === 0 ?\r\n                <div className=\"p-5\">{this.state.userNotFound}</div>\r\n                :\r\n                <ContactList contactList={this.state.contactList}\r\n                             selectedSectionId={this.state.selectedSectionId}\r\n                             onSelectUser={this.onSelectUser.bind(this)}/>\r\n            }\r\n          </CustomScrollbars>\r\n        </SwipeableViews>\r\n\r\n      </div>\r\n    </div>\r\n  };\r\n  _handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.submitComment();\r\n    }\r\n  };\r\n\r\n  handleChange = (event, value) => {\r\n    this.setState({selectedTabIndex: value});\r\n  };\r\n\r\n  handleChangeIndex = index => {\r\n    this.setState({selectedTabIndex: index});\r\n  };\r\n  onSelectUser = (user) => {\r\n    this.setState({\r\n      loader: true,\r\n      selectedSectionId: user.id,\r\n      drawerState: this.props.drawerState,\r\n      selectedUser: user,\r\n      conversation: this.state.conversationList.find((data) => data.id === user.id)\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({loader: false});\r\n    }, 1500);\r\n  };\r\n  showCommunication = () => {\r\n    return (\r\n      <div className=\"chat-box\">\r\n        <div className=\"chat-box-main\">{\r\n          this.state.selectedUser === null ?\r\n            <div className=\"loader-view\" style={{height: 'calc(100vh - 120px)'}}>\r\n              <i className=\"zmdi zmdi-comment s-128 text-muted\"/>\r\n              <h1 className=\"text-muted\">{<IntlMessages id=\"chat.selectUserChat\"/>}</h1>\r\n              <Button className=\"d-block d-xl-none\" color=\"primary\"\r\n                      onClick={this.onToggleDrawer.bind(this)}>{<IntlMessages\r\n                id=\"chat.selectContactChat\"/>}</Button>\r\n            </div>\r\n            : this.Communication()}\r\n        </div>\r\n      </div>)\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loader: false,\r\n      userNotFound: 'No user found',\r\n      drawerState: false,\r\n      selectedSectionId: '',\r\n      selectedTabIndex: 0,\r\n      userState: 1,\r\n      searchChatUser: '',\r\n      contactList: users.filter((user) => !user.recent),\r\n      selectedUser: null,\r\n      message: '',\r\n      chatUsers: users.filter((user) => user.recent),\r\n      conversationList: conversationList,\r\n      conversation: null\r\n    }\r\n  }\r\n\r\n  submitComment() {\r\n    if (this.state.message !== '') {\r\n      const updatedConversation = this.state.conversation.conversationData.concat({\r\n        'type': 'sent',\r\n        'message': this.state.message,\r\n        'sentAt': Moment().format('hh:mm:ss A'),\r\n      });\r\n      this.setState({\r\n        conversation: {\r\n          ...this.state.conversation, conversationData: updatedConversation\r\n        },\r\n        message: '',\r\n        conversationList: this.state.conversationList.map(conversationData => {\r\n          if (conversationData.id === this.state.conversation.id) {\r\n            return {...this.state.conversation, conversationData: updatedConversation};\r\n          } else {\r\n            return conversationData;\r\n          }\r\n        })\r\n      });\r\n    }\r\n  }\r\n\r\n  updateMessageValue(evt) {\r\n    this.setState({\r\n      message: evt.target.value\r\n    });\r\n  }\r\n\r\n  updateSearchChatUser(evt) {\r\n    this.setState({\r\n      searchChatUser: evt.target.value,\r\n      contactList: this.filterContact(evt.target.value),\r\n      chatUsers: this.filterUsers(evt.target.value)\r\n    });\r\n  }\r\n\r\n  onToggleDrawer() {\r\n    this.setState({\r\n      drawerState: !this.state.drawerState\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {loader, userState, drawerState} = this.state;\r\n    return (\r\n      <div className=\"app-wrapper app-wrapper-module\">\r\n        <div className=\"app-module chat-module animated slideInUpTiny animation-duration-3\">\r\n          <div className=\"chat-module-box\">\r\n            <div className=\"d-block d-xl-none\">\r\n              <Drawer open={drawerState}\r\n                      onClose={this.onToggleDrawer.bind(this)}>\r\n                {userState === 1 ? this.ChatUsers() : this.AppUsersInfo()}\r\n              </Drawer>\r\n            </div>\r\n            <div className=\"chat-sidenav d-none d-xl-flex\">\r\n              {userState === 1 ? this.ChatUsers() : this.AppUsersInfo()}\r\n            </div>\r\n            {loader ?\r\n              <div className=\"loader-view w-100\"\r\n                   style={{height: 'calc(100vh - 120px)'}}>\r\n                <CircularProgress/>\r\n              </div> : this.showCommunication()\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({settings}) => {\r\n  const {width} = settings;\r\n  return {width}\r\n};\r\n\r\nexport default connect(mapStateToProps)(ChatPanel);","import React from 'react';\r\n\r\nconst ReceivedMessageCell = ({conversation, user}) => {\r\n  return (\r\n    <div className=\"d-flex flex-nowrap chat-item\">\r\n\r\n      <img className=\"rounded-circle avatar size-40 align-self-end\" src={user.thumb}\r\n           alt=\"\"/>\r\n\r\n      <div className=\"bubble\">\r\n        <div className=\"message\">{conversation.message}</div>\r\n        <div className=\"time text-muted text-right mt-2\">{conversation.sentAt}</div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ReceivedMessageCell;","import React from 'react';\r\n\r\nconst SentMessageCell = ({conversation}) => {\r\n  return (\r\n    <div className=\"d-flex flex-nowrap chat-item flex-row-reverse\">\r\n\r\n      <img className=\"rounded-circle avatar size-40 align-self-end\" src=\"https://via.placeholder.com/150x150\"\r\n           alt={conversation.name}/>\r\n\r\n      <div className=\"bubble jambo-card\">\r\n        <div className=\"message\">{conversation.message}</div>\r\n        <div className=\"time text-muted text-right mt-2\">{conversation.sentAt}</div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default SentMessageCell;","import React from 'react';\r\nimport ReceivedMessageCell from \"./ReceivedMessageCell/index\";\r\nimport SentMessageCell from \"./SentMessageCell/index\";\r\n\r\nconst Conversation = ({conversationData, selectedUser}) => {\r\n\r\n  return (\r\n    <div className=\"chat-main-content\">\r\n      {conversationData.map((conversation, index) => conversation.type === 'sent' ?\r\n        <SentMessageCell key={index} conversation={conversation}/> :\r\n        <ReceivedMessageCell key={index} conversation={conversation} user={selectedUser}/>\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Conversation;","import React from 'react';\r\n\r\nconst UserCell = ({onSelectUser, selectedSectionId, user}) => {\r\n  return (\r\n    <div className={`chat-user-item ${selectedSectionId === user.id ? 'active' : ''}`} onClick={() => {\r\n      onSelectUser(user);\r\n    }}>\r\n      <div className=\"chat-user-row row\">\r\n        <div className=\"chat-avatar col-xl-2 col-3\">\r\n          <div className=\"chat-avatar-mode\">\r\n            <img src={user.thumb} className=\"rounded-circle size-40\" alt=\"Abbott\"/>\r\n            <span className={`chat-mode smallcal ${user.status}`}/>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"chat-contact-col col-xl-10 col-9\">\r\n          <div className=\"h4 name\">{user.name}</div>\r\n          <div className=\"chat-info-des\">{user.mood.substring(0, 30) + \"...\"}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default UserCell;","import React from 'react';\r\nimport UserCell from \"./UserCell/index\";\r\n\r\nconst ContactList = ({onSelectUser, selectedSectionId, contactList}) => {\r\n  return (\r\n    <div className=\"chat-user\">\r\n      {contactList.map((user, index) =>\r\n        <UserCell key={index} user={user} selectedSectionId={selectedSectionId} onSelectUser={onSelectUser}/>\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ContactList;","import React from 'react';\r\n\r\nconst UserCell = ({chat, selectedSectionId, onSelectUser}) => {\r\n  return (\r\n    <div key={chat.id} className={`chat-user-item ${selectedSectionId === chat.id ? 'active' : ''}`} onClick={() => {\r\n      onSelectUser(chat);\r\n    }}>\r\n      <div className=\"chat-user-row row\">\r\n        <div className=\"chat-avatar col-xl-2 col-3\">\r\n          <div className=\"chat-avatar-mode\">\r\n            <img src={chat.thumb} className=\"rounded-circle size-40\" alt={chat.name}/>\r\n            <span className={`chat-mode small ${chat.status}`}/>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"chat-info col-xl-8 col-6\">\r\n          <span className=\"name h4\">{chat.name}</span>\r\n          <div className=\"chat-info-des\">{chat.lastMessage.substring(0, 25) + \"...\"}</div>\r\n          <div className=\"last-message-time\">{chat.lastMessageTime}</div>\r\n        </div>\r\n\r\n        <div className=\"chat-date col-xl-2 col-3\">\r\n          <div className=\"bg-primary rounded-circle badge text-white\">{chat.unreadMessage}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default UserCell;","import React from 'react';\r\nimport UserCell from \"./UserCell/index\";\r\n\r\nconst ChatUserList = ({chatUsers, selectedSectionId, onSelectUser}) => {\r\n  return (\r\n    <div className=\"chat-user\">\r\n      {chatUsers.map((chat, index) =>\r\n        <UserCell key={index} chat={chat} selectedSectionId={selectedSectionId} onSelectUser={onSelectUser}/>\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ChatUserList;"],"sourceRoot":""}