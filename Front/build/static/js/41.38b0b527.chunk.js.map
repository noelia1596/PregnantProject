{"version":3,"sources":["components/ContainerHeader/index.js","components/CardBox/index.js","app/routes/map/routes/mapOverlay/Components/MapOverlay.js","app/routes/map/routes/mapOverlay/index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","getUrlString","path","sub","index","split","ContainerHeader","_ref","title","match","substr","subPath","a","createElement","className","tag","map","active","length","key","href","arr","charAt","toUpperCase","slice","getDisplayString","CardBox","heading","children","styleName","cardStyle","childrenStyle","headerOutside","headingStyle","concat","defaultProps","STYLES","mapContainer","height","overlayView","background","border","padding","getPixelPositionOffset","width","x","y","OverlayViewExampleGoogleMap","withGoogleMap","props","react_default","lib","defaultZoom","defaultCenter","lat","lng","position","mapPaneName","OverlayView","OVERLAY_MOUSE_TARGET","style","Button_default","variant","color","onClick","count","MapOverlay","state","handleClick","_this","bind","Object","assertThisInitialized","this","setState","containerElement","mapElement","Component","Overlay","IntlMessages","id","MapOverlay_MapOverlay"],"mappings":"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","file":"static/js/41.38b0b527.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Breadcrumb, BreadcrumbItem} from 'reactstrap';\r\n\r\nconst getDisplayString = (sub) => {\r\n  const arr = sub.split(\"-\");\r\n  if (arr.length > 1) {\r\n    return arr[0].charAt(0).toUpperCase() + arr[0].slice(1) + \" \" + arr[1].charAt(0).toUpperCase() + arr[1].slice(1)\r\n  } else {\r\n    return sub.charAt(0).toUpperCase() + sub.slice(1)\r\n  }\r\n\r\n};\r\nconst getUrlString = (path, sub, index) => {\r\n  if (index === 0) {\r\n    return '#/';\r\n  } else {\r\n    return '#/' + path.split(sub)[0] + sub;\r\n  }\r\n};\r\n\r\nconst ContainerHeader = ({title, match}) => {\r\n  const path = match.path.substr(1);\r\n  const subPath = path.split('/');\r\n  return (\r\n    <div className=\"page-heading d-sm-flex justify-content-sm-between align-items-sm-center\">\r\n      <h2 className=\"title mb-3 mb-sm-0\">{title}</h2>\r\n\r\n      <Breadcrumb className=\"mb-0\" tag=\"nav\">\r\n        {subPath.map((sub, index) => {\r\n            return <BreadcrumbItem active={subPath.length === index + 1}\r\n                                   tag={subPath.length === index + 1 ? \"span\" : \"a\"} key={index}\r\n                                   href={getUrlString(path, sub, index)}>{getDisplayString(sub)}</BreadcrumbItem>\r\n          }\r\n        )}\r\n      </Breadcrumb>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ContainerHeader;\r\n\r\n","import React from 'react';\r\n\r\nconst CardBox = ({heading, children, styleName, cardStyle, childrenStyle, headerOutside,headingStyle}) => {\r\n\r\n  return (\r\n    <div className={`${styleName}`}>\r\n      {headerOutside &&\r\n      <div className=\"jr-entry-header\">\r\n        <h3 className=\"entry-heading\">{heading}</h3>\r\n        {children.length > 1 && <div className=\"entry-description\">{children[0]}</div>}\r\n      </div>\r\n      }\r\n\r\n      <div className={`jr-card ${cardStyle}`}>\r\n        {!headerOutside &&\r\n        ( heading &&\r\n          <div className={`jr-card-header ${headingStyle}`}>\r\n            <h3 className=\"card-heading\">{heading}</h3>\r\n            {children.length > 1 && <div className=\"sub-heading\">{children[0]}</div>}\r\n          </div>\r\n        )}\r\n        <div className={`jr-card-body ${childrenStyle}`}>\r\n          {children.length > 1 ? children[1] : children}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default CardBox;\r\n\r\nCardBox.defaultProps = {\r\n  cardStyle: '',\r\n  headingStyle:'',\r\n  childrenStyle: '',\r\n  styleName: 'col-lg-6 col-sm-12'\r\n};","import React, {Component} from 'react';\r\nimport Button from '@material-ui/core/Button'\r\nimport {GoogleMap, OverlayView, withGoogleMap} from 'react-google-maps';\r\n\r\nconst STYLES = {\r\n  mapContainer: {\r\n    height: 500,\r\n  },\r\n  overlayView: {\r\n    background: '#fff',\r\n    border: '1px solid #ccc',\r\n    padding: 15,\r\n  },\r\n};\r\n\r\nfunction getPixelPositionOffset(width, height) {\r\n  return {x: -(width / 2), y: -(height / 2)};\r\n}\r\n\r\nconst OverlayViewExampleGoogleMap = withGoogleMap(props => (\r\n  <GoogleMap\r\n    defaultZoom={15}\r\n    defaultCenter={{lat: 47.646935, lng: -122.303763}}\r\n  >\r\n    <OverlayView\r\n      position={{lat: 47.646935, lng: -122.303763}}\r\n      /*\r\n       * An alternative to specifying position is specifying bounds.\r\n       * bounds can either be an instance of google.maps.LatLngBounds\r\n       * or an object in the following format:\r\n       * bounds={{\r\n       *    ne: { lat: 62.400471, lng: -150.005608 },\r\n       *    sw: { lat: 62.281819, lng: -150.287132 }\r\n       * }}\r\n       */\r\n      /*\r\n       * 1. Specify the pane the OverlayView will be rendered to. For\r\n       *    mouse interactivity, use `OverlayView.OVERLAY_MOUSE_TARGET`.\r\n       *    Defaults to `OverlayView.OVERLAY_LAYER`.\r\n       */\r\n      mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\r\n      /*\r\n       * 2. Tweak the OverlayView's pixel position. In this case, we're\r\n       *    centering the content.\r\n       */\r\n      getPixelPositionOffset={getPixelPositionOffset}\r\n      /*\r\n       * 3. Create OverlayView content using standard React components.\r\n       */\r\n    >\r\n      <div style={STYLES.overlayView}>\r\n        <h1>OverlayView</h1>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={props.onClick}>\r\n          I have been clicked {props.count} time{props.count === 1 ? `` : `s`}\r\n        </Button>\r\n      </div>\r\n    </OverlayView>\r\n  </GoogleMap>\r\n));\r\n\r\n/*\r\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\r\n */\r\nexport default class MapOverlay extends Component {\r\n  state = {\r\n    count: 0,\r\n  };\r\n\r\n  handleClick = this.handleClick.bind(this);\r\n\r\n  handleClick() {\r\n    this.setState({count: this.state.count + 1});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <OverlayViewExampleGoogleMap\r\n        containerElement={\r\n          <div className=\"embed-responsive embed-responsive-21by9\"/>\r\n        }\r\n        mapElement={<div className=\"embed-responsive-item\"/>}\r\n        count={this.state.count}\r\n        onClick={this.handleClick}\r\n      />\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport MapOverlay from './Components/MapOverlay';\r\nimport CardBox from 'components/CardBox';\r\nimport ContainerHeader from 'components/ContainerHeader';\r\nimport IntlMessages from 'util/IntlMessages';\r\n\r\n\r\nconst Overlay = ({match}) => {\r\n  return (\r\n    <div className=\"animated slideInUpTiny animation-duration-3\">\r\n      <ContainerHeader title={<IntlMessages id=\"sidebar.map.overlay\"/>} match={match}/>\r\n\r\n      <div className=\"row\">\r\n        <CardBox styleName=\"col-lg-12\">\r\n          <MapOverlay/>\r\n        </CardBox>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Overlay;\r\n"],"sourceRoot":""}