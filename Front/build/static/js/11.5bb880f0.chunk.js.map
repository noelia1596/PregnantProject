{"version":3,"sources":["app/routes/chatPanel/redux/index.js","components/chatPanel/Conversation/ReceivedMessageCell/index.js","components/chatPanel/Conversation/SentMessageCell/index.js","components/chatPanel/Conversation/index.js","components/chatPanel/ContactList/UserCell/index.js","components/chatPanel/ContactList/index.js","components/chatPanel/ChatUserList/UserCell/index.js","components/chatPanel/ChatUserList/index.js"],"names":["ChatPanelWithRedux","_this","Object","C_Users_Noelia_Desktop_Plantillas_source_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_Noelia_Desktop_Plantillas_source_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_Noelia_Desktop_Plantillas_source_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","filterContacts","userName","props","filterUsers","_handleKeyPress","e","key","submitComment","onSelectUser","user","setTimeout","hideLoader","message","updateMessageValue","evt","target","value","Communication","_this$props","selectedUser","conversationData","conversation","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_15___default","aria-label","onClick","onChatToggleDrawer","bind","C_Users_Noelia_Desktop_Plantillas_source_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","src","thumb","alt","concat","status","name","util_CustomScrollbars__WEBPACK_IMPORTED_MODULE_23__","style","height","width","components_chatPanel_Conversation_index__WEBPACK_IMPORTED_MODULE_18__","maxHeight","id","onKeyUp","onChange","placeholder","AppUsersInfo","setState","userState","_material_ui_core_Input__WEBPACK_IMPORTED_MODULE_16___default","fullWidth","multiline","rows","defaultValue","margin","ChatUsers","userInfoState","components_SearchBox__WEBPACK_IMPORTED_MODULE_20__","updateSearchChatUser","searchChatUser","_material_ui_core_AppBar__WEBPACK_IMPORTED_MODULE_10___default","position","_material_ui_core_Tabs__WEBPACK_IMPORTED_MODULE_11___default","state","selectedTabIndex","handleChange","indicatorColor","textColor","_material_ui_core_Tab__WEBPACK_IMPORTED_MODULE_12___default","label","util_IntlMessages__WEBPACK_IMPORTED_MODULE_21__","react_swipeable_views__WEBPACK_IMPORTED_MODULE_9___default","index","onChangeIndex","handleChangeIndex","chatUsers","length","userNotFound","components_chatPanel_ChatUserList_index__WEBPACK_IMPORTED_MODULE_17__","selectedSectionId","contactList","components_chatPanel_ContactList_index__WEBPACK_IMPORTED_MODULE_19__","event","showCommunication","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_8___default","color","fetchChatUser","fetchChatUserConversation","_this$props2","loader","drawerState","_material_ui_core_Drawer__WEBPACK_IMPORTED_MODULE_13___default","open","onClose","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_14___default","Component","connect","_ref","chatData","settings","conversationList","ReceivedMessageCell","react_default","sentAt","SentMessageCell","Conversation","map","type","Conversation_SentMessageCell","Conversation_ReceivedMessageCell","UserCell","mood","substring","ContactList","ContactList_UserCell","chat","lastMessage","lastMessageTime","unreadMessage","ChatUserList","ChatUserList_UserCell"],"mappings":"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","file":"static/js/11.5bb880f0.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport Button from '@material-ui/core/Button';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Input from '@material-ui/core/Input'\r\nimport ChatUserList from 'components/chatPanel/ChatUserList/index';\r\nimport Conversation from 'components/chatPanel/Conversation/index';\r\nimport ContactList from 'components/chatPanel/ContactList/index';\r\nimport SearchBox from 'components/SearchBox';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport {\r\n  fetchChatUser,\r\n  fetchChatUserConversation,\r\n  filterContacts,\r\n  filterUsers,\r\n  hideLoader,\r\n  onChatToggleDrawer,\r\n  onSelectUser,\r\n  submitComment,\r\n  updateMessageValue,\r\n  updateSearchChatUser,\r\n  userInfoState\r\n} from 'actions/Chat'\r\nimport CustomScrollbars from 'util/CustomScrollbars';\r\n\r\nclass ChatPanelWithRedux extends Component {\r\n  filterContacts = (userName) => {\r\n    this.props.filterContacts(userName);\r\n  };\r\n  filterUsers = (userName) => {\r\n    this.props.filterUsers(userName);\r\n  };\r\n  _handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.submitComment();\r\n    }\r\n  };\r\n\r\n  onSelectUser = (user) => {\r\n    this.props.onSelectUser(user);\r\n\r\n    setTimeout(() => {\r\n      this.props.hideLoader();\r\n    }, 1500);\r\n  };\r\n\r\n\r\n  submitComment = () => {\r\n    if (this.props.message !== '') {\r\n      this.props.submitComment();\r\n    }\r\n  };\r\n\r\n  updateMessageValue = (evt) => {\r\n    this.props.updateMessageValue(evt.target.value);\r\n\r\n  };\r\n\r\n  Communication = () => {\r\n    const {message, selectedUser, conversation} = this.props;\r\n    const {conversationData} = conversation;\r\n    return <div className=\"chat-main\">\r\n      <div className=\"chat-main-header\">\r\n        <IconButton className=\"d-block d-xl-none chat-btn\" aria-label=\"Menu\"\r\n                    onClick={this.onChatToggleDrawer.bind(this)}>\r\n          <i className=\"zmdi zmdi-comment-text\"/>\r\n        </IconButton>\r\n        <div className=\"chat-main-header-info\">\r\n\r\n          <div className=\"chat-avatar mr-2\">\r\n            <div className=\"chat-avatar-mode\">\r\n              <img src={selectedUser.thumb}\r\n                   className=\"rounded-circle size-60\"\r\n                   alt=\"\"/>\r\n\r\n              <span className={`chat-mode ${selectedUser.status}`}/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"chat-contact-name\">\r\n            {selectedUser.name}\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <CustomScrollbars className=\"chat-list-scroll scrollbar\"\r\n                        style={{height: this.props.width >= 1200 ? 'calc(100vh - 300px)' : 'calc(100vh - 255px)'}}>\r\n        <Conversation conversationData={conversationData}\r\n                      selectedUser={selectedUser}/>\r\n      </CustomScrollbars>\r\n\r\n      <div className=\"chat-main-footer\">\r\n        <div className=\"d-flex flex-row align-items-center\" style={{maxHeight: 51}}>\r\n          <div className=\"col\">\r\n            <div className=\"form-group\">\r\n                            <textarea\r\n                              id=\"required\" className=\"border-0 form-control chat-textarea\"\r\n                              onKeyUp={this._handleKeyPress.bind(this)}\r\n                              onChange={this.updateMessageValue.bind(this)}\r\n                              value={message}\r\n                              placeholder=\"Type and hit enter to send message\"\r\n                            />\r\n            </div>\r\n          </div>\r\n          <div className=\"chat-sent\">\r\n            <IconButton\r\n              onClick={this.submitComment.bind(this)}\r\n              aria-label=\"Send message\">\r\n              <i className=\"zmdi  zmdi-mail-send\"/>\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  };\r\n\r\n  AppUsersInfo = () => {\r\n    return <div className=\"chat-sidenav-main\">\r\n      <div className=\"bg-grey lighten-5 chat-sidenav-header\">\r\n\r\n        <div className=\"chat-user-hd mb-0\">\r\n          <IconButton className=\"back-to-chats-button\" aria-label=\"back button\"\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          userState: 1\r\n                        });\r\n                      }}>\r\n            <i className=\"zmdi zmdi-arrow-back\"/>\r\n          </IconButton>\r\n        </div>\r\n        <div className=\"chat-user chat-user-center\">\r\n          <div className=\"chat-avatar mx-auto\">\r\n            <img src=\"https://via.placeholder.com/150x150\"\r\n                 className=\"avatar avatar-shadow rounded-circle size-60 huge\" alt=\"John Doe\"/>\r\n          </div>\r\n\r\n          <div className=\"user-name h4 my-2 text-white\">Robert Johnson</div>\r\n\r\n        </div>\r\n      </div>\r\n      <div className=\"chat-sidenav-content\">\r\n\r\n        <CustomScrollbars className=\"chat-sidenav-scroll scrollbar\"\r\n                          style={{height: this.props.width >= 1200 ? 'calc(100vh - 328px)' : 'calc(100vh - 162px)'}}>\r\n          <form className=\"p-4\">\r\n            <div className=\"form-group mt-4\">\r\n              <label>Mood</label>\r\n\r\n              <Input\r\n                fullWidth\r\n                id=\"exampleTextarea\"\r\n                multiline\r\n                rows={3}\r\n                onKeyUp={this._handleKeyPress.bind(this)}\r\n                onChange={this.updateMessageValue.bind(this)}\r\n                defaultValue=\"it's a status....not your diary...\"\r\n                placeholder=\"Status\"\r\n                margin=\"none\"/>\r\n\r\n            </div>\r\n          </form>\r\n        </CustomScrollbars>\r\n\r\n      </div>\r\n    </div>\r\n  };\r\n  ChatUsers = () => {\r\n    return <div className=\"chat-sidenav-main\">\r\n      <div className=\"chat-sidenav-header\">\r\n\r\n        <div className=\"chat-user-hd\">\r\n\r\n          <div className=\"chat-avatar mr-3\" onClick={() => {\r\n            this.props.userInfoState(2);\r\n          }}>\r\n            <div className=\"chat-avatar-mode\">\r\n              <img id=\"user-avatar-button\" src=\"https://via.placeholder.com/150x150\"\r\n                   className=\"rounded-circle size-50\"\r\n                   alt=\"\"/>\r\n              <span className=\"chat-mode online\"/>\r\n            </div>\r\n          </div>\r\n          <div className=\"module-user-info d-flex flex-column justify-content-center\">\r\n            <div className=\"module-title\">\r\n              <h5 className=\"mb-0\">Robert Johnson</h5>\r\n            </div>\r\n            <div className=\"module-user-detail\">\r\n              <span className=\"text-grey\">robert@example.com</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"search-wrapper\">\r\n\r\n          <SearchBox placeholder=\"Search or start new chat\"\r\n                     onChange={this.updateSearchChatUser.bind(this)}\r\n                     value={this.props.searchChatUser}/>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chat-sidenav-content\">\r\n        <AppBar position=\"static\" className=\"no-shadow chat-tabs-header\">\r\n          <Tabs\r\n            className=\"chat-tabs\"\r\n            value={this.state.selectedTabIndex}\r\n            onChange={this.handleChange}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            fullWidth\r\n          >\r\n            <Tab label={<IntlMessages id=\"chat.chatUser\"/>}/>\r\n            <Tab label={<IntlMessages id=\"chat.contacts\"/>}/>\r\n          </Tabs>\r\n        </AppBar>\r\n        <SwipeableViews\r\n          index={this.state.selectedTabIndex}\r\n          onChangeIndex={this.handleChangeIndex}\r\n        >\r\n          <CustomScrollbars className=\"chat-sidenav-scroll scrollbar\"\r\n                            style={{height: this.props.width >= 1200 ? 'calc(100vh - 328px)' : 'calc(100vh - 202px)'}}>\r\n            {this.props.chatUsers.length === 0 ?\r\n              <div className=\"p-5\">{this.props.userNotFound}</div>\r\n              :\r\n              <ChatUserList chatUsers={this.props.chatUsers}\r\n                            selectedSectionId={this.props.selectedSectionId}\r\n                            onSelectUser={this.onSelectUser.bind(this)}/>\r\n            }\r\n          </CustomScrollbars>\r\n\r\n          <CustomScrollbars className=\"chat-sidenav-scroll scrollbar\"\r\n                            style={{height: this.props.width >= 1200 ? 'calc(100vh - 328px)' : 'calc(100vh - 202px)'}}>\r\n            {\r\n              this.props.contactList.length === 0 ?\r\n                <div className=\"p-5\">{this.props.userNotFound}</div>\r\n                :\r\n                <ContactList contactList={this.props.contactList}\r\n                             selectedSectionId={this.props.selectedSectionId}\r\n                             onSelectUser={this.onSelectUser.bind(this)}/>\r\n            }\r\n          </CustomScrollbars>\r\n        </SwipeableViews>\r\n\r\n      </div>\r\n    </div>\r\n  };\r\n  handleChange = (event, value) => {\r\n    this.setState({selectedTabIndex: value});\r\n  };\r\n\r\n  handleChangeIndex = index => {\r\n    this.setState({selectedTabIndex: index});\r\n  };\r\n  showCommunication = () => {\r\n    return (\r\n      <div className=\"chat-box\">\r\n        <div className=\"chat-box-main\">{\r\n          this.props.selectedUser === null ?\r\n            <div className=\"loader-view\">\r\n              <i className=\"zmdi zmdi-comment s-128 text-muted\"/>\r\n              <h1 className=\"text-muted\"> {<IntlMessages id=\"chat.selectUserChat\"/>}</h1>\r\n              <Button className=\"d-block d-xl-none\" color=\"primary\"\r\n                      onClick={this.onChatToggleDrawer.bind(this)}>{<IntlMessages\r\n                id=\"chat.selectContactChat\"/>}</Button>\r\n            </div>\r\n            : this.Communication()}\r\n        </div>\r\n      </div>)\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      selectedTabIndex: 0,\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.fetchChatUser();\r\n    this.props.fetchChatUserConversation()\r\n  }\r\n\r\n  updateSearchChatUser(evt) {\r\n    this.props.updateSearchChatUser(evt.target.value);\r\n    this.props.filterContacts(evt.target.value);\r\n    this.props.filterUsers(evt.target.value);\r\n  }\r\n\r\n  onChatToggleDrawer() {\r\n    this.props.onChatToggleDrawer();\r\n  }\r\n\r\n  render() {\r\n    const {loader, userState, drawerState} = this.props;\r\n    return (\r\n      <div className=\"app-wrapper app-wrapper-module\">\r\n        <div className=\"app-module chat-module animated slideInUpTiny animation-duration-3\">\r\n          <div className=\"chat-module-box\">\r\n            <div className=\"d-block d-xl-none\">\r\n              <Drawer open={drawerState}\r\n                      onClose={this.onChatToggleDrawer.bind(this)}>\r\n                {userState === 1 ? this.ChatUsers() : this.AppUsersInfo()}\r\n              </Drawer>\r\n            </div>\r\n            <div className=\"chat-sidenav d-none d-xl-flex\">\r\n              {userState === 1 ? this.ChatUsers() : this.AppUsersInfo()}\r\n            </div>\r\n            {loader ?\r\n              <div className=\"loader-view w-100\"\r\n                   style={{height: 'calc(100vh - 120px)'}}>\r\n                <CircularProgress/>\r\n              </div> : this.showCommunication()\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({chatData, settings}) => {\r\n  const {width} = settings;\r\n  const {\r\n    loader,\r\n    userNotFound,\r\n    drawerState,\r\n    selectedSectionId,\r\n    userState,\r\n    searchChatUser,\r\n    contactList,\r\n    selectedUser,\r\n    message,\r\n    chatUsers,\r\n    conversationList,\r\n    conversation\r\n  } = chatData;\r\n  return {\r\n    width,\r\n    loader,\r\n    userNotFound,\r\n    drawerState,\r\n    selectedSectionId,\r\n    userState,\r\n    searchChatUser,\r\n    contactList,\r\n    selectedUser,\r\n    message,\r\n    chatUsers,\r\n    conversationList,\r\n    conversation\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  fetchChatUser,\r\n  fetchChatUserConversation,\r\n  filterContacts,\r\n  filterUsers,\r\n  onSelectUser,\r\n  hideLoader,\r\n  userInfoState,\r\n  submitComment,\r\n  updateMessageValue,\r\n  updateSearchChatUser,\r\n  onChatToggleDrawer\r\n})(ChatPanelWithRedux);","import React from 'react';\r\n\r\nconst ReceivedMessageCell = ({conversation, user}) => {\r\n  return (\r\n    <div className=\"d-flex flex-nowrap chat-item\">\r\n\r\n      <img className=\"rounded-circle avatar size-40 align-self-end\" src={user.thumb}\r\n           alt=\"\"/>\r\n\r\n      <div className=\"bubble\">\r\n        <div className=\"message\">{conversation.message}</div>\r\n        <div className=\"time text-muted text-right mt-2\">{conversation.sentAt}</div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ReceivedMessageCell;","import React from 'react';\r\n\r\nconst SentMessageCell = ({conversation}) => {\r\n  return (\r\n    <div className=\"d-flex flex-nowrap chat-item flex-row-reverse\">\r\n\r\n      <img className=\"rounded-circle avatar size-40 align-self-end\" src=\"https://via.placeholder.com/150x150\"\r\n           alt={conversation.name}/>\r\n\r\n      <div className=\"bubble jambo-card\">\r\n        <div className=\"message\">{conversation.message}</div>\r\n        <div className=\"time text-muted text-right mt-2\">{conversation.sentAt}</div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default SentMessageCell;","import React from 'react';\r\nimport ReceivedMessageCell from \"./ReceivedMessageCell/index\";\r\nimport SentMessageCell from \"./SentMessageCell/index\";\r\n\r\nconst Conversation = ({conversationData, selectedUser}) => {\r\n\r\n  return (\r\n    <div className=\"chat-main-content\">\r\n      {conversationData.map((conversation, index) => conversation.type === 'sent' ?\r\n        <SentMessageCell key={index} conversation={conversation}/> :\r\n        <ReceivedMessageCell key={index} conversation={conversation} user={selectedUser}/>\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Conversation;","import React from 'react';\r\n\r\nconst UserCell = ({onSelectUser, selectedSectionId, user}) => {\r\n  return (\r\n    <div className={`chat-user-item ${selectedSectionId === user.id ? 'active' : ''}`} onClick={() => {\r\n      onSelectUser(user);\r\n    }}>\r\n      <div className=\"chat-user-row row\">\r\n        <div className=\"chat-avatar col-xl-2 col-3\">\r\n          <div className=\"chat-avatar-mode\">\r\n            <img src={user.thumb} className=\"rounded-circle size-40\" alt=\"Abbott\"/>\r\n            <span className={`chat-mode smallcal ${user.status}`}/>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"chat-contact-col col-xl-10 col-9\">\r\n          <div className=\"h4 name\">{user.name}</div>\r\n          <div className=\"chat-info-des\">{user.mood.substring(0, 30) + \"...\"}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default UserCell;","import React from 'react';\r\nimport UserCell from \"./UserCell/index\";\r\n\r\nconst ContactList = ({onSelectUser, selectedSectionId, contactList}) => {\r\n  return (\r\n    <div className=\"chat-user\">\r\n      {contactList.map((user, index) =>\r\n        <UserCell key={index} user={user} selectedSectionId={selectedSectionId} onSelectUser={onSelectUser}/>\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ContactList;","import React from 'react';\r\n\r\nconst UserCell = ({chat, selectedSectionId, onSelectUser}) => {\r\n  return (\r\n    <div key={chat.id} className={`chat-user-item ${selectedSectionId === chat.id ? 'active' : ''}`} onClick={() => {\r\n      onSelectUser(chat);\r\n    }}>\r\n      <div className=\"chat-user-row row\">\r\n        <div className=\"chat-avatar col-xl-2 col-3\">\r\n          <div className=\"chat-avatar-mode\">\r\n            <img src={chat.thumb} className=\"rounded-circle size-40\" alt={chat.name}/>\r\n            <span className={`chat-mode small ${chat.status}`}/>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"chat-info col-xl-8 col-6\">\r\n          <span className=\"name h4\">{chat.name}</span>\r\n          <div className=\"chat-info-des\">{chat.lastMessage.substring(0, 25) + \"...\"}</div>\r\n          <div className=\"last-message-time\">{chat.lastMessageTime}</div>\r\n        </div>\r\n\r\n        <div className=\"chat-date col-xl-2 col-3\">\r\n          <div className=\"bg-primary rounded-circle badge text-white\">{chat.unreadMessage}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default UserCell;","import React from 'react';\r\nimport UserCell from \"./UserCell/index\";\r\n\r\nconst ChatUserList = ({chatUsers, selectedSectionId, onSelectUser}) => {\r\n  return (\r\n    <div className=\"chat-user\">\r\n      {chatUsers.map((chat, index) =>\r\n        <UserCell key={index} chat={chat} selectedSectionId={selectedSectionId} onSelectUser={onSelectUser}/>\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ChatUserList;"],"sourceRoot":""}