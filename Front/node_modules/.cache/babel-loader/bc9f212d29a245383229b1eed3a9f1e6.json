{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\src\\\\app\\\\routes\\\\components\\\\routes\\\\list\\\\checkBoxListControl\\\\CheckBoxListControl.js\";\nimport React, { Component } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Badge } from 'reactstrap';\nvar users = [{\n  id: 1,\n  image: 'https://via.placeholder.com/150x150',\n  email: 'henrric@example.com'\n}, {\n  id: 2,\n  image: 'https://via.placeholder.com/150x150',\n  email: 'stella02@example.com'\n}, {\n  id: 3,\n  image: 'https://via.placeholder.com/150x150',\n  email: 'chrris@example.com'\n}, {\n  id: 4,\n  image: 'https://via.placeholder.com/150x150',\n  email: 'jhonson@example.com'\n}, {\n  id: 5,\n  image: 'https://via.placeholder.com/150x150',\n  email: 'domnic@example.com'\n}];\n\nvar CheckBoxListControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CheckBoxListControl, _Component);\n\n  function CheckBoxListControl() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CheckBoxListControl);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CheckBoxListControl)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      checked: [1]\n    };\n\n    _this.handleToggle = function (event, value) {\n      var checked = _this.state.checked;\n      var currentIndex = checked.indexOf(value);\n\n      var newChecked = _toConsumableArray(checked);\n\n      if (currentIndex === -1) {\n        newChecked.push(value);\n      } else {\n        newChecked.splice(currentIndex, 1);\n      }\n\n      _this.setState({\n        checked: newChecked\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CheckBoxListControl, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, users.map(function (user) {\n        return React.createElement(ListItem, {\n          button: true,\n          key: user.email,\n          onClick: function onClick(event) {\n            return _this2.handleToggle(event, user.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(Avatar, {\n          alt: \"Remy Sharp\",\n          src: user.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          className: \"br-break\",\n          primary: user.email,\n          secondary: \"Nov 8, 2017\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }), React.createElement(Badge, {\n          className: \"mr-4 mt-2 text-uppercase\",\n          color: \"success\",\n          pill: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"Agent\"), React.createElement(ListItemSecondaryAction, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(Checkbox, {\n          color: \"primary\",\n          checked: _this2.state.checked.indexOf(user.id) !== -1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        })));\n      }));\n    }\n  }]);\n\n  return CheckBoxListControl;\n}(Component);\n\nexport default CheckBoxListControl;","map":{"version":3,"sources":["C:\\Users\\Noelia\\Desktop\\compra\\source\\src\\app\\routes\\components\\routes\\list\\checkBoxListControl\\CheckBoxListControl.js"],"names":["React","Component","List","ListItem","ListItemSecondaryAction","ListItemText","Checkbox","Avatar","Badge","users","id","image","email","CheckBoxListControl","state","checked","handleToggle","event","value","currentIndex","indexOf","newChecked","push","splice","setState","map","user"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {Badge} from 'reactstrap';\r\n\r\nconst users = [\r\n  {id: 1, image: 'https://via.placeholder.com/150x150', email: 'henrric@example.com'},\r\n  {id: 2, image: 'https://via.placeholder.com/150x150', email: 'stella02@example.com'},\r\n  {id: 3, image: 'https://via.placeholder.com/150x150', email: 'chrris@example.com'},\r\n  {id: 4, image: 'https://via.placeholder.com/150x150', email: 'jhonson@example.com'},\r\n  {id: 5, image:'https://via.placeholder.com/150x150', email: 'domnic@example.com'}];\r\n\r\nclass CheckBoxListControl extends Component {\r\n  state = {\r\n    checked: [1],\r\n  };\r\n\r\n  handleToggle = (event, value) => {\r\n    const {checked} = this.state;\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    this.setState({\r\n      checked: newChecked,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <List>\r\n        {users.map(user =>\r\n          <ListItem button key={user.email} onClick={event => this.handleToggle(event, user.id)}>\r\n            <Avatar alt=\"Remy Sharp\" src={user.image}/>\r\n            <ListItemText className=\"br-break\" primary={user.email} secondary=\"Nov 8, 2017\"/>\r\n            <Badge className=\"mr-4 mt-2 text-uppercase\" color=\"success\" pill>Agent</Badge>\r\n            <ListItemSecondaryAction>\r\n              <Checkbox color=\"primary\"\r\n                        checked={this.state.checked.indexOf(user.id) !== -1}\r\n              />\r\n            </ListItemSecondaryAction>\r\n          </ListItem>,\r\n        )}\r\n      </List>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CheckBoxListControl;"]},"metadata":{},"sourceType":"module"}