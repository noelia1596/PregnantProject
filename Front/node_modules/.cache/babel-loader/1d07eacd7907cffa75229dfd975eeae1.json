{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\src\\\\app\\\\routes\\\\table\\\\routes\\\\data\\\\Components\\\\CustomizedTable.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nvar CustomTableCell = withStyles(function (theme) {\n  return {\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white\n    },\n    body: {\n      fontSize: 14\n    }\n  };\n})(TableCell);\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '100%',\n      marginTop: theme.spacing.unit * 3,\n      overflowX: 'auto'\n    },\n    table: {\n      minWidth: 700\n    },\n    row: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.background.default\n      }\n    }\n  };\n};\n\nvar id = 0;\n\nfunction createData(name, calories, fat, carbs, protein) {\n  id += 1;\n  return {\n    id: id,\n    name: name,\n    calories: calories,\n    fat: fat,\n    carbs: carbs,\n    protein: protein\n  };\n}\n\nvar data = [createData('Frozen yoghurt', 159, 6.0, 24, 4.0), createData('Ice cream sandwich', 237, 9.0, 37, 4.3), createData('Eclair', 262, 16.0, 24, 6.0), createData('Cupcake', 305, 3.7, 67, 4.3), createData('Gingerbread', 356, 16.0, 49, 3.9)];\n\nfunction CustomizedTable(props) {\n  var classes = props.classes;\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(CustomTableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Dessert (100g serving)\"), React.createElement(CustomTableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Calories\"), React.createElement(CustomTableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Fat (g)\"), React.createElement(CustomTableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Carbs (g)\"), React.createElement(CustomTableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Protein (g)\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, data.map(function (n) {\n    return React.createElement(TableRow, {\n      className: classes.row,\n      key: n.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(CustomTableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, n.name), React.createElement(CustomTableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, n.calories), React.createElement(CustomTableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, n.fat), React.createElement(CustomTableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, n.carbs), React.createElement(CustomTableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, n.protein));\n  }))));\n}\n\nCustomizedTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(CustomizedTable);","map":{"version":3,"sources":["C:\\Users\\Noelia\\Desktop\\Plantillas\\source\\src\\app\\routes\\table\\routes\\data\\Components\\CustomizedTable.js"],"names":["React","PropTypes","withStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","CustomTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","styles","root","width","marginTop","spacing","unit","overflowX","table","minWidth","row","background","default","id","createData","name","calories","fat","carbs","protein","data","CustomizedTable","props","classes","map","n","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst CustomTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing.unit * 3,\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n  row: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n  },\r\n});\r\n\r\nlet id = 0;\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  id += 1;\r\n  return {id, name, calories, fat, carbs, protein};\r\n}\r\n\r\nconst data = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nfunction CustomizedTable(props) {\r\n  const {classes} = props;\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <CustomTableCell>Dessert (100g serving)</CustomTableCell>\r\n            <CustomTableCell align=\"right\">Calories</CustomTableCell>\r\n            <CustomTableCell align=\"right\">Fat (g)</CustomTableCell>\r\n            <CustomTableCell align=\"right\">Carbs (g)</CustomTableCell>\r\n            <CustomTableCell align=\"right\">Protein (g)</CustomTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.map(n => {\r\n            return (\r\n              <TableRow className={classes.row} key={n.id}>\r\n                <CustomTableCell>{n.name}</CustomTableCell>\r\n                <CustomTableCell align=\"right\">{n.calories}</CustomTableCell>\r\n                <CustomTableCell align=\"right\">{n.fat}</CustomTableCell>\r\n                <CustomTableCell align=\"right\">{n.carbs}</CustomTableCell>\r\n                <CustomTableCell align=\"right\">{n.protein}</CustomTableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nCustomizedTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(CustomizedTable);"]},"metadata":{},"sourceType":"module"}