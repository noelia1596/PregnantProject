{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar invariant = require('invariant');\n\nvar types_1 = require(\"./types\");\n\nfunction createInitCoords(manager) {\n  return function initCoords(sourceIds, _a) {\n    if (sourceIds === void 0) {\n      sourceIds = [];\n    }\n\n    var clientOffset = _a.clientOffset,\n        getSourceClientOffset = _a.getSourceClientOffset;\n    var monitor = manager.getMonitor();\n    var registry = manager.getRegistry();\n    verifyInvariants(sourceIds, monitor, registry);\n    var sourceId = getDragSourceId(sourceIds, monitor);\n\n    if (sourceId === null) {\n      return;\n    }\n\n    var sourceClientOffset = determineSourceClientOffset(sourceId, clientOffset, getSourceClientOffset);\n    return {\n      type: types_1.INIT_COORDS,\n      payload: {\n        clientOffset: clientOffset || null,\n        sourceClientOffset: sourceClientOffset || null\n      }\n    };\n  };\n}\n\nexports.default = createInitCoords;\n\nfunction verifyInvariants(sourceIds, monitor, registry) {\n  invariant(!monitor.isDragging(), 'Cannot call beginDrag while dragging.');\n\n  for (var _i = 0, sourceIds_1 = sourceIds; _i < sourceIds_1.length; _i++) {\n    var s = sourceIds_1[_i];\n    invariant(registry.getSource(s), 'Expected sourceIds to be registered.');\n  }\n}\n\nfunction getDragSourceId(sourceIds, monitor) {\n  var sourceId = null;\n\n  for (var i = sourceIds.length - 1; i >= 0; i--) {\n    if (monitor.canDragSource(sourceIds[i])) {\n      sourceId = sourceIds[i];\n      break;\n    }\n  }\n\n  return sourceId;\n}\n\nfunction determineSourceClientOffset(sourceId, clientOffset, getSourceClientOffset) {\n  var result = null;\n\n  if (clientOffset) {\n    invariant(typeof getSourceClientOffset === 'function', 'When clientOffset is provided, getSourceClientOffset must be a function.');\n    result = getSourceClientOffset(sourceId);\n  }\n\n  return result;\n}","map":null,"metadata":{},"sourceType":"script"}