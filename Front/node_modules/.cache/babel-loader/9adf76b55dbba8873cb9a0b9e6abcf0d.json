{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\src\\\\app\\\\routes\\\\map\\\\routes\\\\directions\\\\Components\\\\MapDirections.js\";\nimport React, { Component } from \"react\";\nimport { DirectionsRenderer, GoogleMap, withGoogleMap } from \"react-google-maps\";\nvar google = window.google;\nvar DirectionsExampleGoogleMap = withGoogleMap(function (props) {\n  return React.createElement(GoogleMap, {\n    defaultZoom: 7,\n    defaultCenter: props.center,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.directions && React.createElement(DirectionsRenderer, {\n    directions: props.directions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }));\n});\n/*\r\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\r\n */\n\nvar MapDirections =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapDirections, _Component);\n\n  function MapDirections() {\n    var _this;\n\n    _classCallCheck(this, MapDirections);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MapDirections).call(this));\n    _this.state = {\n      origin: new google.maps.LatLng(41.8507300, -87.6512600),\n      destination: new google.maps.LatLng(41.8525800, -87.6514100),\n      directions: null\n    };\n    return _this;\n  }\n\n  _createClass(MapDirections, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var DirectionsService = new google.maps.DirectionsService();\n      DirectionsService.route({\n        origin: this.state.origin,\n        destination: this.state.destination,\n        travelMode: google.maps.TravelMode.DRIVING\n      }, function (result, status) {\n        if (status === google.maps.DirectionsStatus.OK) {\n          _this2.setState({\n            directions: result\n          });\n        } else {\n          console.error(\"error fetching directions \".concat(result));\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(DirectionsExampleGoogleMap, {\n        containerElement: React.createElement(\"div\", {\n          className: \"embed-responsive embed-responsive-21by9\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }),\n        mapElement: React.createElement(\"div\", {\n          className: \"embed-responsive-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }),\n        center: this.state.origin,\n        directions: this.state.directions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return MapDirections;\n}(Component);\n\nexport { MapDirections as default };","map":{"version":3,"sources":["C:\\Users\\Noelia\\Desktop\\compra\\source\\src\\app\\routes\\map\\routes\\directions\\Components\\MapDirections.js"],"names":["React","Component","DirectionsRenderer","GoogleMap","withGoogleMap","google","window","DirectionsExampleGoogleMap","props","center","directions","MapDirections","state","origin","maps","LatLng","destination","DirectionsService","route","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","setState","console","error"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,kBAAR,EAA4BC,SAA5B,EAAuCC,aAAvC,QAA2D,mBAA3D;AAEA,IAAMC,MAAM,GAAGC,MAAM,CAACD,MAAtB;AAEA,IAAME,0BAA0B,GAAGH,aAAa,CAAC,UAAAI,KAAK;AAAA,SACpD,oBAAC,SAAD;AACE,IAAA,WAAW,EAAE,CADf;AAEE,IAAA,aAAa,EAAEA,KAAK,CAACC,MAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGD,KAAK,CAACE,UAAN,IAAoB,oBAAC,kBAAD;AAAoB,IAAA,UAAU,EAAEF,KAAK,CAACE,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJvB,CADoD;AAAA,CAAN,CAAhD;AASA;;;;IAGqBC,a;;;;;AAEnB,2BAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,IAAIR,MAAM,CAACS,IAAP,CAAYC,MAAhB,CAAuB,UAAvB,EAAmC,CAAC,UAApC,CADG;AAEXC,MAAAA,WAAW,EAAE,IAAIX,MAAM,CAACS,IAAP,CAAYC,MAAhB,CAAuB,UAAvB,EAAmC,CAAC,UAApC,CAFF;AAGXL,MAAAA,UAAU,EAAE;AAHD,KAAb;AAFY;AAOb;;;;wCAEmB;AAAA;;AAClB,UAAMO,iBAAiB,GAAG,IAAIZ,MAAM,CAACS,IAAP,CAAYG,iBAAhB,EAA1B;AAEAA,MAAAA,iBAAiB,CAACC,KAAlB,CAAwB;AACtBL,QAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC,MADG;AAEtBG,QAAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWI,WAFF;AAGtBG,QAAAA,UAAU,EAAEd,MAAM,CAACS,IAAP,CAAYM,UAAZ,CAAuBC;AAHb,OAAxB,EAIG,UAACC,MAAD,EAASC,MAAT,EAAoB;AACrB,YAAIA,MAAM,KAAKlB,MAAM,CAACS,IAAP,CAAYU,gBAAZ,CAA6BC,EAA5C,EAAgD;AAC9C,UAAA,MAAI,CAACC,QAAL,CAAc;AACZhB,YAAAA,UAAU,EAAEY;AADA,WAAd;AAGD,SAJD,MAIO;AACLK,UAAAA,OAAO,CAACC,KAAR,qCAA2CN,MAA3C;AACD;AACF,OAZD;AAaD;;;6BAEQ;AACP,aACE,oBAAC,0BAAD;AACE,QAAA,gBAAgB,EACd;AAAK,UAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAIE,QAAA,UAAU,EAAE;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJd;AAKE,QAAA,MAAM,EAAE,KAAKV,KAAL,CAAWC,MALrB;AAME,QAAA,UAAU,EAAE,KAAKD,KAAL,CAAWF,UANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUD;;;;EAxCwCT,S;;SAAtBU,a","sourcesContent":["import React, {Component} from \"react\";\r\nimport {DirectionsRenderer, GoogleMap, withGoogleMap} from \"react-google-maps\";\r\n\r\nconst google = window.google;\r\n\r\nconst DirectionsExampleGoogleMap = withGoogleMap(props => (\r\n  <GoogleMap\r\n    defaultZoom={7}\r\n    defaultCenter={props.center}\r\n  >\r\n    {props.directions && <DirectionsRenderer directions={props.directions}/>}\r\n  </GoogleMap>\r\n));\r\n\r\n/*\r\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\r\n */\r\nexport default class MapDirections extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      origin: new google.maps.LatLng(41.8507300, -87.6512600),\r\n      destination: new google.maps.LatLng(41.8525800, -87.6514100),\r\n      directions: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const DirectionsService = new google.maps.DirectionsService();\r\n\r\n    DirectionsService.route({\r\n      origin: this.state.origin,\r\n      destination: this.state.destination,\r\n      travelMode: google.maps.TravelMode.DRIVING,\r\n    }, (result, status) => {\r\n      if (status === google.maps.DirectionsStatus.OK) {\r\n        this.setState({\r\n          directions: result,\r\n        });\r\n      } else {\r\n        console.error(`error fetching directions ${result}`);\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <DirectionsExampleGoogleMap\r\n        containerElement={\r\n          <div className=\"embed-responsive embed-responsive-21by9\"/>\r\n        }\r\n        mapElement={<div className=\"embed-responsive-item\"/>}\r\n        center={this.state.origin}\r\n        directions={this.state.directions}\r\n      />\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}