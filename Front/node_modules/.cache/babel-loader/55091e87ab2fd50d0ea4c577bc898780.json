{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\src\\\\app\\\\routes\\\\map\\\\routes\\\\mapOverlay\\\\Components\\\\MapOverlay.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { GoogleMap, OverlayView, withGoogleMap } from 'react-google-maps';\nvar STYLES = {\n  mapContainer: {\n    height: 500\n  },\n  overlayView: {\n    background: '#fff',\n    border: '1px solid #ccc',\n    padding: 15\n  }\n};\n\nfunction getPixelPositionOffset(width, height) {\n  return {\n    x: -(width / 2),\n    y: -(height / 2)\n  };\n}\n\nvar OverlayViewExampleGoogleMap = withGoogleMap(function (props) {\n  return React.createElement(GoogleMap, {\n    defaultZoom: 15,\n    defaultCenter: {\n      lat: 47.646935,\n      lng: -122.303763\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(OverlayView, {\n    position: {\n      lat: 47.646935,\n      lng: -122.303763\n    }\n    /*\r\n     * An alternative to specifying position is specifying bounds.\r\n     * bounds can either be an instance of google.maps.LatLngBounds\r\n     * or an object in the following format:\r\n     * bounds={{\r\n     *    ne: { lat: 62.400471, lng: -150.005608 },\r\n     *    sw: { lat: 62.281819, lng: -150.287132 }\r\n     * }}\r\n     */\n\n    /*\r\n     * 1. Specify the pane the OverlayView will be rendered to. For\r\n     *    mouse interactivity, use `OverlayView.OVERLAY_MOUSE_TARGET`.\r\n     *    Defaults to `OverlayView.OVERLAY_LAYER`.\r\n     */\n    ,\n    mapPaneName: OverlayView.OVERLAY_MOUSE_TARGET\n    /*\r\n     * 2. Tweak the OverlayView's pixel position. In this case, we're\r\n     *    centering the content.\r\n     */\n    ,\n    getPixelPositionOffset: getPixelPositionOffset\n    /*\r\n     * 3. Create OverlayView content using standard React components.\r\n     */\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: STYLES.overlayView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"OverlayView\"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"I have been clicked \", props.count, \" time\", props.count === 1 ? \"\" : \"s\"))));\n});\n/*\r\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\r\n */\n\nvar MapOverlay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapOverlay, _Component);\n\n  function MapOverlay() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MapOverlay);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MapOverlay)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      count: 0\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(MapOverlay, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      this.setState({\n        count: this.state.count + 1\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(OverlayViewExampleGoogleMap, {\n        containerElement: React.createElement(\"div\", {\n          className: \"embed-responsive embed-responsive-21by9\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }),\n        mapElement: React.createElement(\"div\", {\n          className: \"embed-responsive-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }),\n        count: this.state.count,\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return MapOverlay;\n}(Component);\n\nexport { MapOverlay as default };","map":{"version":3,"sources":["C:\\Users\\Noelia\\Desktop\\Plantillas\\source\\src\\app\\routes\\map\\routes\\mapOverlay\\Components\\MapOverlay.js"],"names":["React","Component","Button","GoogleMap","OverlayView","withGoogleMap","STYLES","mapContainer","height","overlayView","background","border","padding","getPixelPositionOffset","width","x","y","OverlayViewExampleGoogleMap","props","lat","lng","OVERLAY_MOUSE_TARGET","onClick","count","MapOverlay","state","handleClick","bind","setState"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAAQC,SAAR,EAAmBC,WAAnB,EAAgCC,aAAhC,QAAoD,mBAApD;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,YAAY,EAAE;AACZC,IAAAA,MAAM,EAAE;AADI,GADD;AAIbC,EAAAA,WAAW,EAAE;AACXC,IAAAA,UAAU,EAAE,MADD;AAEXC,IAAAA,MAAM,EAAE,gBAFG;AAGXC,IAAAA,OAAO,EAAE;AAHE;AAJA,CAAf;;AAWA,SAASC,sBAAT,CAAgCC,KAAhC,EAAuCN,MAAvC,EAA+C;AAC7C,SAAO;AAACO,IAAAA,CAAC,EAAE,EAAED,KAAK,GAAG,CAAV,CAAJ;AAAkBE,IAAAA,CAAC,EAAE,EAAER,MAAM,GAAG,CAAX;AAArB,GAAP;AACD;;AAED,IAAMS,2BAA2B,GAAGZ,aAAa,CAAC,UAAAa,KAAK;AAAA,SACrD,oBAAC,SAAD;AACE,IAAA,WAAW,EAAE,EADf;AAEE,IAAA,aAAa,EAAE;AAACC,MAAAA,GAAG,EAAE,SAAN;AAAiBC,MAAAA,GAAG,EAAE,CAAC;AAAvB,KAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,WAAD;AACE,IAAA,QAAQ,EAAE;AAACD,MAAAA,GAAG,EAAE,SAAN;AAAiBC,MAAAA,GAAG,EAAE,CAAC;AAAvB;AACV;;;;;;;;;;AASA;;;;;AAXF;AAgBE,IAAA,WAAW,EAAEhB,WAAW,CAACiB;AACzB;;;;AAjBF;AAqBE,IAAA,sBAAsB,EAAER;AACxB;;;AAtBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA0BE;AAAK,IAAA,KAAK,EAAEP,MAAM,CAACG,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,OAAO,EAAES,KAAK,CAACI,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACuBJ,KAAK,CAACK,KAD7B,WACyCL,KAAK,CAACK,KAAN,KAAgB,CAAhB,WADzC,CAFF,CA1BF,CAJF,CADqD;AAAA,CAAN,CAAjD;AAyCA;;;;IAGqBC,U;;;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNF,MAAAA,KAAK,EAAE;AADD,K;UAIRG,W,GAAc,MAAKA,WAAL,CAAiBC,IAAjB,uD;;;;;;kCAEA;AACZ,WAAKC,QAAL,CAAc;AAACL,QAAAA,KAAK,EAAE,KAAKE,KAAL,CAAWF,KAAX,GAAmB;AAA3B,OAAd;AACD;;;6BAEQ;AACP,aACE,oBAAC,2BAAD;AACE,QAAA,gBAAgB,EACd;AAAK,UAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAIE,QAAA,UAAU,EAAE;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJd;AAKE,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWF,KALpB;AAME,QAAA,OAAO,EAAE,KAAKG,WANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUD;;;;EAtBqCzB,S;;SAAnBuB,U","sourcesContent":["import React, {Component} from 'react';\r\nimport Button from '@material-ui/core/Button'\r\nimport {GoogleMap, OverlayView, withGoogleMap} from 'react-google-maps';\r\n\r\nconst STYLES = {\r\n  mapContainer: {\r\n    height: 500,\r\n  },\r\n  overlayView: {\r\n    background: '#fff',\r\n    border: '1px solid #ccc',\r\n    padding: 15,\r\n  },\r\n};\r\n\r\nfunction getPixelPositionOffset(width, height) {\r\n  return {x: -(width / 2), y: -(height / 2)};\r\n}\r\n\r\nconst OverlayViewExampleGoogleMap = withGoogleMap(props => (\r\n  <GoogleMap\r\n    defaultZoom={15}\r\n    defaultCenter={{lat: 47.646935, lng: -122.303763}}\r\n  >\r\n    <OverlayView\r\n      position={{lat: 47.646935, lng: -122.303763}}\r\n      /*\r\n       * An alternative to specifying position is specifying bounds.\r\n       * bounds can either be an instance of google.maps.LatLngBounds\r\n       * or an object in the following format:\r\n       * bounds={{\r\n       *    ne: { lat: 62.400471, lng: -150.005608 },\r\n       *    sw: { lat: 62.281819, lng: -150.287132 }\r\n       * }}\r\n       */\r\n      /*\r\n       * 1. Specify the pane the OverlayView will be rendered to. For\r\n       *    mouse interactivity, use `OverlayView.OVERLAY_MOUSE_TARGET`.\r\n       *    Defaults to `OverlayView.OVERLAY_LAYER`.\r\n       */\r\n      mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\r\n      /*\r\n       * 2. Tweak the OverlayView's pixel position. In this case, we're\r\n       *    centering the content.\r\n       */\r\n      getPixelPositionOffset={getPixelPositionOffset}\r\n      /*\r\n       * 3. Create OverlayView content using standard React components.\r\n       */\r\n    >\r\n      <div style={STYLES.overlayView}>\r\n        <h1>OverlayView</h1>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={props.onClick}>\r\n          I have been clicked {props.count} time{props.count === 1 ? `` : `s`}\r\n        </Button>\r\n      </div>\r\n    </OverlayView>\r\n  </GoogleMap>\r\n));\r\n\r\n/*\r\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\r\n */\r\nexport default class MapOverlay extends Component {\r\n  state = {\r\n    count: 0,\r\n  };\r\n\r\n  handleClick = this.handleClick.bind(this);\r\n\r\n  handleClick() {\r\n    this.setState({count: this.state.count + 1});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <OverlayViewExampleGoogleMap\r\n        containerElement={\r\n          <div className=\"embed-responsive embed-responsive-21by9\"/>\r\n        }\r\n        mapElement={<div className=\"embed-responsive-item\"/>}\r\n        count={this.state.count}\r\n        onClick={this.handleClick}\r\n      />\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}