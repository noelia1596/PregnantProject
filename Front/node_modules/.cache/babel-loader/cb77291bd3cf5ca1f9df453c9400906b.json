{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\src\\\\components\\\\dashboard\\\\eCommerce\\\\SalesGauge.js\";\nimport React, { Component } from 'react';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nam4core.useTheme(am4themes_animated);\n\nvar SalesGauge =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SalesGauge, _Component);\n\n  function SalesGauge() {\n    _classCallCheck(this, SalesGauge);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SalesGauge).apply(this, arguments));\n  }\n\n  _createClass(SalesGauge, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var chart = am4core.create(\"chartdiv\", am4charts.RadarChart);\n      chart.paddingRight = 20;\n      chart.responsive.enabled = true;\n      chart.data = [{\n        \"category\": \"Total Orders\",\n        \"value\": 65,\n        \"full\": 100\n      }, {\n        \"category\": \"Past Orders\",\n        \"value\": 80,\n        \"full\": 100\n      }, {\n        \"category\": \"Total Revenue\",\n        \"value\": 90,\n        \"full\": 100\n      }];\n      chart.colors.list = [am4core.color(\"#FF9800\"), am4core.color(\"#F44336\"), am4core.color(\"#00BCD4\")]; // Make chart not full circle\n\n      chart.startAngle = -90;\n      chart.endAngle = 180;\n      chart.innerRadius = am4core.percent(40); // Set number format\n\n      chart.numberFormatter.numberFormat = \"#.#'%'\"; // Create axes\n\n      var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());\n      categoryAxis.dataFields.category = \"category\";\n      categoryAxis.renderer.grid.template.location = 0;\n      categoryAxis.renderer.grid.template.strokeOpacity = 0;\n      categoryAxis.renderer.labels.template.horizontalCenter = \"right\";\n      categoryAxis.renderer.labels.template.fontWeight = 500;\n      categoryAxis.renderer.labels.template.adapter.add(\"fill\", function (fill, target) {\n        return target.dataItem.index >= 0 ? \"#6C757D\" : fill;\n      });\n      categoryAxis.renderer.minGridDistance = 20;\n      var valueAxis = chart.xAxes.push(new am4charts.ValueAxis());\n      valueAxis.renderer.grid.template.strokeOpacity = 0;\n      valueAxis.min = 0;\n      valueAxis.max = 100;\n      valueAxis.strictMinMax = true; // Create series\n\n      var series1 = chart.series.push(new am4charts.RadarColumnSeries());\n      series1.dataFields.valueX = \"full\";\n      series1.dataFields.categoryY = \"category\";\n      series1.clustered = false;\n      series1.columns.template.fill = new am4core.InterfaceColorSet().getFor(\"alternativeBackground\");\n      series1.columns.template.fillOpacity = 0.08;\n      series1.columns.template.cornerRadiusTopLeft = 30;\n      series1.columns.template.strokeWidth = 0;\n      series1.columns.template.radarColumn.cornerRadius = 30;\n      var series2 = chart.series.push(new am4charts.RadarColumnSeries());\n      series2.dataFields.valueX = \"value\";\n      series2.dataFields.categoryY = \"category\";\n      series2.clustered = false;\n      series2.columns.template.strokeWidth = 0;\n      series2.columns.template.tooltipText = \"{category}: [bold]{value}[/]\";\n      series2.columns.template.radarColumn.cornerRadius = 30;\n      series2.columns.template.disabled = false;\n      series2.columns.template.adapter.add(\"fill\", function (fill, target) {\n        return chart.colors.getIndex(target.dataItem.index);\n      }); // Add cursor\n\n      chart.cursor = new am4charts.RadarCursor();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.chart) {\n        this.chart.dispose();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"chartdiv\",\n        style: {\n          width: \"100%\",\n          height: \"300px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return SalesGauge;\n}(Component);\n\nexport default SalesGauge;","map":{"version":3,"sources":["C:\\Users\\Noelia\\Desktop\\Plantillas\\source\\src\\components\\dashboard\\eCommerce\\SalesGauge.js"],"names":["React","Component","am4core","am4charts","am4themes_animated","useTheme","SalesGauge","chart","create","RadarChart","paddingRight","responsive","enabled","data","colors","list","color","startAngle","endAngle","innerRadius","percent","numberFormatter","numberFormat","categoryAxis","yAxes","push","CategoryAxis","dataFields","category","renderer","grid","template","location","strokeOpacity","labels","horizontalCenter","fontWeight","adapter","add","fill","target","dataItem","index","minGridDistance","valueAxis","xAxes","ValueAxis","min","max","strictMinMax","series1","series","RadarColumnSeries","valueX","categoryY","clustered","columns","InterfaceColorSet","getFor","fillOpacity","cornerRadiusTopLeft","strokeWidth","radarColumn","cornerRadius","series2","tooltipText","disabled","getIndex","cursor","RadarCursor","dispose","width","height"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAO,KAAKC,OAAZ,MAAyB,0BAAzB;AACA,OAAO,KAAKC,SAAZ,MAA2B,4BAA3B;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AAEAF,OAAO,CAACG,QAAR,CAAiBD,kBAAjB;;IAEME,U;;;;;;;;;;;;;wCACgB;AAClB,UAAIC,KAAK,GAAGL,OAAO,CAACM,MAAR,CAAe,UAAf,EAA2BL,SAAS,CAACM,UAArC,CAAZ;AACAF,MAAAA,KAAK,CAACG,YAAN,GAAqB,EAArB;AACAH,MAAAA,KAAK,CAACI,UAAN,CAAiBC,OAAjB,GAA2B,IAA3B;AAEAL,MAAAA,KAAK,CAACM,IAAN,GAAa,CACX;AACE,oBAAY,cADd;AAEE,iBAAS,EAFX;AAGE,gBAAQ;AAHV,OADW,EAMX;AACE,oBAAY,aADd;AAEE,iBAAS,EAFX;AAGE,gBAAQ;AAHV,OANW,EAWX;AACE,oBAAY,eADd;AAEE,iBAAS,EAFX;AAGE,gBAAQ;AAHV,OAXW,CAAb;AAiBAN,MAAAA,KAAK,CAACO,MAAN,CAAaC,IAAb,GAAoB,CAClBb,OAAO,CAACc,KAAR,CAAc,SAAd,CADkB,EAElBd,OAAO,CAACc,KAAR,CAAc,SAAd,CAFkB,EAGlBd,OAAO,CAACc,KAAR,CAAc,SAAd,CAHkB,CAApB,CAtBkB,CA6BlB;;AACAT,MAAAA,KAAK,CAACU,UAAN,GAAmB,CAAC,EAApB;AACAV,MAAAA,KAAK,CAACW,QAAN,GAAiB,GAAjB;AACAX,MAAAA,KAAK,CAACY,WAAN,GAAoBjB,OAAO,CAACkB,OAAR,CAAgB,EAAhB,CAApB,CAhCkB,CAkCtB;;AACIb,MAAAA,KAAK,CAACc,eAAN,CAAsBC,YAAtB,GAAqC,QAArC,CAnCkB,CAqCtB;;AACI,UAAIC,YAAY,GAAGhB,KAAK,CAACiB,KAAN,CAAYC,IAAZ,CAAiB,IAAItB,SAAS,CAACuB,YAAd,EAAjB,CAAnB;AACAH,MAAAA,YAAY,CAACI,UAAb,CAAwBC,QAAxB,GAAmC,UAAnC;AACAL,MAAAA,YAAY,CAACM,QAAb,CAAsBC,IAAtB,CAA2BC,QAA3B,CAAoCC,QAApC,GAA+C,CAA/C;AACAT,MAAAA,YAAY,CAACM,QAAb,CAAsBC,IAAtB,CAA2BC,QAA3B,CAAoCE,aAApC,GAAoD,CAApD;AACAV,MAAAA,YAAY,CAACM,QAAb,CAAsBK,MAAtB,CAA6BH,QAA7B,CAAsCI,gBAAtC,GAAyD,OAAzD;AACAZ,MAAAA,YAAY,CAACM,QAAb,CAAsBK,MAAtB,CAA6BH,QAA7B,CAAsCK,UAAtC,GAAmD,GAAnD;AAEAb,MAAAA,YAAY,CAACM,QAAb,CAAsBK,MAAtB,CAA6BH,QAA7B,CAAsCM,OAAtC,CAA8CC,GAA9C,CAAkD,MAAlD,EAA0D,UAAUC,IAAV,EAAgBC,MAAhB,EAAwB;AAChF,eAAQA,MAAM,CAACC,QAAP,CAAgBC,KAAhB,IAAyB,CAA1B,GAA+B,SAA/B,GAA2CH,IAAlD;AACD,OAFD;AAGAhB,MAAAA,YAAY,CAACM,QAAb,CAAsBc,eAAtB,GAAwC,EAAxC;AAEA,UAAIC,SAAS,GAAGrC,KAAK,CAACsC,KAAN,CAAYpB,IAAZ,CAAiB,IAAItB,SAAS,CAAC2C,SAAd,EAAjB,CAAhB;AACAF,MAAAA,SAAS,CAACf,QAAV,CAAmBC,IAAnB,CAAwBC,QAAxB,CAAiCE,aAAjC,GAAiD,CAAjD;AACAW,MAAAA,SAAS,CAACG,GAAV,GAAgB,CAAhB;AACAH,MAAAA,SAAS,CAACI,GAAV,GAAgB,GAAhB;AACAJ,MAAAA,SAAS,CAACK,YAAV,GAAyB,IAAzB,CAtDkB,CAwDtB;;AACI,UAAIC,OAAO,GAAG3C,KAAK,CAAC4C,MAAN,CAAa1B,IAAb,CAAkB,IAAItB,SAAS,CAACiD,iBAAd,EAAlB,CAAd;AACAF,MAAAA,OAAO,CAACvB,UAAR,CAAmB0B,MAAnB,GAA4B,MAA5B;AACAH,MAAAA,OAAO,CAACvB,UAAR,CAAmB2B,SAAnB,GAA+B,UAA/B;AACAJ,MAAAA,OAAO,CAACK,SAAR,GAAoB,KAApB;AACAL,MAAAA,OAAO,CAACM,OAAR,CAAgBzB,QAAhB,CAAyBQ,IAAzB,GAAgC,IAAIrC,OAAO,CAACuD,iBAAZ,GAAgCC,MAAhC,CAAuC,uBAAvC,CAAhC;AACAR,MAAAA,OAAO,CAACM,OAAR,CAAgBzB,QAAhB,CAAyB4B,WAAzB,GAAuC,IAAvC;AACAT,MAAAA,OAAO,CAACM,OAAR,CAAgBzB,QAAhB,CAAyB6B,mBAAzB,GAA+C,EAA/C;AACAV,MAAAA,OAAO,CAACM,OAAR,CAAgBzB,QAAhB,CAAyB8B,WAAzB,GAAuC,CAAvC;AACAX,MAAAA,OAAO,CAACM,OAAR,CAAgBzB,QAAhB,CAAyB+B,WAAzB,CAAqCC,YAArC,GAAoD,EAApD;AAEA,UAAIC,OAAO,GAAGzD,KAAK,CAAC4C,MAAN,CAAa1B,IAAb,CAAkB,IAAItB,SAAS,CAACiD,iBAAd,EAAlB,CAAd;AACAY,MAAAA,OAAO,CAACrC,UAAR,CAAmB0B,MAAnB,GAA4B,OAA5B;AACAW,MAAAA,OAAO,CAACrC,UAAR,CAAmB2B,SAAnB,GAA+B,UAA/B;AACAU,MAAAA,OAAO,CAACT,SAAR,GAAoB,KAApB;AACAS,MAAAA,OAAO,CAACR,OAAR,CAAgBzB,QAAhB,CAAyB8B,WAAzB,GAAuC,CAAvC;AACAG,MAAAA,OAAO,CAACR,OAAR,CAAgBzB,QAAhB,CAAyBkC,WAAzB,GAAuC,8BAAvC;AACAD,MAAAA,OAAO,CAACR,OAAR,CAAgBzB,QAAhB,CAAyB+B,WAAzB,CAAqCC,YAArC,GAAoD,EAApD;AACAC,MAAAA,OAAO,CAACR,OAAR,CAAgBzB,QAAhB,CAAyBmC,QAAzB,GAAoC,KAApC;AACAF,MAAAA,OAAO,CAACR,OAAR,CAAgBzB,QAAhB,CAAyBM,OAAzB,CAAiCC,GAAjC,CAAqC,MAArC,EAA6C,UAAUC,IAAV,EAAgBC,MAAhB,EAAwB;AACnE,eAAOjC,KAAK,CAACO,MAAN,CAAaqD,QAAb,CAAsB3B,MAAM,CAACC,QAAP,CAAgBC,KAAtC,CAAP;AACD,OAFD,EA3EkB,CA+EtB;;AACInC,MAAAA,KAAK,CAAC6D,MAAN,GAAe,IAAIjE,SAAS,CAACkE,WAAd,EAAf;AAED;;;2CACsB;AACrB,UAAI,KAAK9D,KAAT,EAAgB;AACd,aAAKA,KAAL,CAAW+D,OAAX;AACD;AACF;;;6BAEQ;AACP,aACE;AAAK,QAAA,EAAE,EAAC,UAAR;AAAmB,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE,MAAR;AAAgBC,UAAAA,MAAM,EAAE;AAAxB,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;;;EA9FsBvE,S;;AAiGzB,eAAeK,UAAf","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\nclass SalesGauge extends Component {\r\n  componentDidMount() {\r\n    let chart = am4core.create(\"chartdiv\", am4charts.RadarChart);\r\n    chart.paddingRight = 20;\r\n    chart.responsive.enabled = true;\r\n\r\n    chart.data = [\r\n      {\r\n        \"category\": \"Total Orders\",\r\n        \"value\": 65,\r\n        \"full\": 100\r\n      },\r\n      {\r\n        \"category\": \"Past Orders\",\r\n        \"value\": 80,\r\n        \"full\": 100\r\n      },\r\n      {\r\n        \"category\": \"Total Revenue\",\r\n        \"value\": 90,\r\n        \"full\": 100\r\n      },];\r\n\r\n    chart.colors.list = [\r\n      am4core.color(\"#FF9800\"),\r\n      am4core.color(\"#F44336\"),\r\n      am4core.color(\"#00BCD4\"),\r\n    ];\r\n\r\n\r\n    // Make chart not full circle\r\n    chart.startAngle = -90;\r\n    chart.endAngle = 180;\r\n    chart.innerRadius = am4core.percent(40);\r\n\r\n// Set number format\r\n    chart.numberFormatter.numberFormat = \"#.#'%'\";\r\n\r\n// Create axes\r\n    let categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());\r\n    categoryAxis.dataFields.category = \"category\";\r\n    categoryAxis.renderer.grid.template.location = 0;\r\n    categoryAxis.renderer.grid.template.strokeOpacity = 0;\r\n    categoryAxis.renderer.labels.template.horizontalCenter = \"right\";\r\n    categoryAxis.renderer.labels.template.fontWeight = 500;\r\n\r\n    categoryAxis.renderer.labels.template.adapter.add(\"fill\", function (fill, target) {\r\n      return (target.dataItem.index >= 0) ? \"#6C757D\" : fill;\r\n    });\r\n    categoryAxis.renderer.minGridDistance = 20;\r\n\r\n    let valueAxis = chart.xAxes.push(new am4charts.ValueAxis());\r\n    valueAxis.renderer.grid.template.strokeOpacity = 0;\r\n    valueAxis.min = 0;\r\n    valueAxis.max = 100;\r\n    valueAxis.strictMinMax = true;\r\n\r\n// Create series\r\n    let series1 = chart.series.push(new am4charts.RadarColumnSeries());\r\n    series1.dataFields.valueX = \"full\";\r\n    series1.dataFields.categoryY = \"category\";\r\n    series1.clustered = false;\r\n    series1.columns.template.fill = new am4core.InterfaceColorSet().getFor(\"alternativeBackground\");\r\n    series1.columns.template.fillOpacity = 0.08;\r\n    series1.columns.template.cornerRadiusTopLeft = 30;\r\n    series1.columns.template.strokeWidth = 0;\r\n    series1.columns.template.radarColumn.cornerRadius = 30;\r\n\r\n    let series2 = chart.series.push(new am4charts.RadarColumnSeries());\r\n    series2.dataFields.valueX = \"value\";\r\n    series2.dataFields.categoryY = \"category\";\r\n    series2.clustered = false;\r\n    series2.columns.template.strokeWidth = 0\r\n    series2.columns.template.tooltipText = \"{category}: [bold]{value}[/]\";\r\n    series2.columns.template.radarColumn.cornerRadius = 30;\r\n    series2.columns.template.disabled = false;\r\n    series2.columns.template.adapter.add(\"fill\", function (fill, target) {\r\n      return chart.colors.getIndex(target.dataItem.index);\r\n    });\r\n\r\n// Add cursor\r\n    chart.cursor = new am4charts.RadarCursor();\r\n\r\n  }\r\n  componentWillUnmount() {\r\n    if (this.chart) {\r\n      this.chart.dispose();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"chartdiv\" style={{width: \"100%\", height: \"300px\"}}/>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SalesGauge;"]},"metadata":{},"sourceType":"module"}