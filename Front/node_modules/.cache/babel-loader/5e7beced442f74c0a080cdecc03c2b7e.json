{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\src\\\\app\\\\routes\\\\map\\\\routes\\\\popUpInfo\\\\Components\\\\MapPopupInfo.js\";\nimport React, { Component } from 'react';\nimport { GoogleMap, InfoWindow, Marker, withGoogleMap } from 'react-google-maps';\nvar google = window.google;\nvar PopUpInfoWindowExampleGoogleMap = withGoogleMap(function (props) {\n  return React.createElement(GoogleMap, {\n    defaultZoom: 15,\n    center: props.center,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.markers.map(function (marker, index) {\n    return React.createElement(Marker, {\n      defaultIcon: require(\"assets/images/marker.png\"),\n      key: index,\n      position: marker.position,\n      onClick: function onClick() {\n        return props.onMarkerClick(marker);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, marker.showInfo && React.createElement(InfoWindow, {\n      onCloseClick: function onCloseClick() {\n        return props.onMarkerClose(marker);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, marker.infoContent)));\n  }));\n});\n/*\r\n *\r\n *  Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script>\r\n *  to your HTML to provide google.maps reference\r\n *\r\n *  @author: @chiwoojo\r\n */\n\nvar MapPopupInfo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapPopupInfo, _Component);\n\n  function MapPopupInfo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MapPopupInfo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MapPopupInfo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      center: {\n        lat: 47.646935,\n        lng: -122.303763\n      },\n      // array of objects of markers\n      markers: [{\n        position: new google.maps.LatLng(47.646145, -122.303763),\n        showInfo: false,\n        infoContent: React.createElement(\"div\", {\n          className: \"d-flex\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"svg\", {\n          id: \"Layer_1\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"16\",\n          height: \"16\",\n          viewBox: \"0 0 16 16\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(\"path\", {\n          d: \"M3.5 0c-1.7 0-3 1.6-3 3.5 0 1.7 1 3 2.3 3.4l-.5 8c0\\r .6.4 1 1 1h.5c.5 0 1-.4 1-1L4 7C5.5 6.4 6.5 5 6.5\\r 3.4c0-2-1.3-3.5-3-3.5zm10 0l-.8 5h-.6l-.3-5h-.4L11\\r 5H10l-.8-5H9v6.5c0 .3.2.5.5.5h1.3l-.5 8c0 .6.4 1 1 1h.4c.6 0\\r 1-.4 1-1l-.5-8h1.3c.3 0 .5-.2.5-.5V0h-.4z\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"ml-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"UW Medical Center\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"1959 NE Pacific St\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"Seattle, WA 98195\")))\n      }, {\n        position: new google.maps.LatLng(47.647935, -122.303763),\n        showInfo: false,\n        infoContent: React.createElement(\"div\", {\n          className: \"d-flex\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(\"svg\", {\n          id: \"Layer_1\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"16\",\n          height: \"16\",\n          viewBox: \"0 0 16 16\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(\"path\", {\n          d: \"M6 14.5c0 .828-.672 1.5-1.5 1.5S3 15.328 3 14.5 3.672\\r 13 4.5 13s1.5.672 1.5 1.5zM16 14.5c0 .828-.672 1.5-1.5\\r 1.5s-1.5-.672-1.5-1.5.672-1.5 1.5-1.5 1.5.672 1.5 1.5zM16\\r 8V2H4c0-.552-.448-1-1-1H0v1h2l.75 6.438C2.294 8.805 2 9.368\\r 2 10c0 1.105.895 2 2 2h12v-1H4c-.552 0-1-.448-1-1v-.01L16 8z\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"ml-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, \"University of Washington Intramural Activities (IMA) Building\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, \"3924 Montlake Blvd NE\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, \"Seattle, WA 98195\")))\n      }]\n    };\n    _this.handleMarkerClick = _this.handleMarkerClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleMarkerClose = _this.handleMarkerClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(MapPopupInfo, [{\n    key: \"handleMarkerClick\",\n    // Toggle to 'true' to show InfoWindow and re-renders simple\n    value: function handleMarkerClick(targetMarker) {\n      this.setState({\n        markers: this.state.markers.map(function (marker) {\n          if (marker === targetMarker) {\n            return _objectSpread({}, marker, {\n              showInfo: true\n            });\n          }\n\n          return marker;\n        })\n      });\n    }\n  }, {\n    key: \"handleMarkerClose\",\n    value: function handleMarkerClose(targetMarker) {\n      this.setState({\n        markers: this.state.markers.map(function (marker) {\n          if (marker === targetMarker) {\n            return _objectSpread({}, marker, {\n              showInfo: false\n            });\n          }\n\n          return marker;\n        })\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(PopUpInfoWindowExampleGoogleMap, {\n        containerElement: React.createElement(\"div\", {\n          className: \"embed-responsive embed-responsive-21by9\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }),\n        mapElement: React.createElement(\"div\", {\n          className: \"embed-responsive-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }),\n        center: this.state.center,\n        markers: this.state.markers,\n        onMarkerClick: this.handleMarkerClick,\n        onMarkerClose: this.handleMarkerClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return MapPopupInfo;\n}(Component);\n\nexport { MapPopupInfo as default };","map":{"version":3,"sources":["C:\\Users\\Noelia\\Desktop\\Plantillas\\source\\src\\app\\routes\\map\\routes\\popUpInfo\\Components\\MapPopupInfo.js"],"names":["React","Component","GoogleMap","InfoWindow","Marker","withGoogleMap","google","window","PopUpInfoWindowExampleGoogleMap","props","center","markers","map","marker","index","require","position","onMarkerClick","showInfo","onMarkerClose","infoContent","MapPopupInfo","state","lat","lng","maps","LatLng","handleMarkerClick","bind","handleMarkerClose","targetMarker","setState"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {GoogleMap, InfoWindow, Marker, withGoogleMap} from 'react-google-maps';\r\n\r\nconst google = window.google;\r\n\r\nconst PopUpInfoWindowExampleGoogleMap = withGoogleMap(props => (\r\n  <GoogleMap\r\n    defaultZoom={15}\r\n    center={props.center}\r\n  >\r\n    {props.markers.map((marker, index) => (\r\n      <Marker\r\n        defaultIcon={require(\"assets/images/marker.png\")}\r\n        key={index}\r\n        position={marker.position}\r\n        onClick={() => props.onMarkerClick(marker)}\r\n      >\r\n        {/*\r\n          Show info window only if the 'showInfo' key of the marker is true.\r\n          That is, when the Marker pin has been clicked and 'onCloseClick' has been\r\n          Successfully fired.\r\n        */}\r\n        {marker.showInfo && (\r\n          <InfoWindow onCloseClick={() => props.onMarkerClose(marker)}>\r\n            <div>{marker.infoContent}\r\n            </div>\r\n          </InfoWindow>\r\n        )}\r\n      </Marker>\r\n    ))}\r\n  </GoogleMap>\r\n));\r\n\r\n/*\r\n *\r\n *  Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script>\r\n *  to your HTML to provide google.maps reference\r\n *\r\n *  @author: @chiwoojo\r\n */\r\nexport default class MapPopupInfo extends Component {\r\n\r\n  state = {\r\n    center: {\r\n      lat: 47.646935, lng: -122.303763,\r\n    },\r\n\r\n    // array of objects of markers\r\n    markers: [\r\n      {\r\n        position: new google.maps.LatLng(47.646145, -122.303763),\r\n        showInfo: false,\r\n        infoContent: (\r\n          <div className=\"d-flex\">\r\n            <div>\r\n              <svg\r\n                id=\"Layer_1\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 16 16\"\r\n              >\r\n                <path\r\n                  d=\"M3.5 0c-1.7 0-3 1.6-3 3.5 0 1.7 1 3 2.3 3.4l-.5 8c0\r\n              .6.4 1 1 1h.5c.5 0 1-.4 1-1L4 7C5.5 6.4 6.5 5 6.5\r\n              3.4c0-2-1.3-3.5-3-3.5zm10 0l-.8 5h-.6l-.3-5h-.4L11\r\n              5H10l-.8-5H9v6.5c0 .3.2.5.5.5h1.3l-.5 8c0 .6.4 1 1 1h.4c.6 0\r\n              1-.4 1-1l-.5-8h1.3c.3 0 .5-.2.5-.5V0h-.4z\"\r\n                />\r\n              </svg>\r\n            </div>\r\n            <div className=\"ml-1\">\r\n              <p>UW Medical Center</p>\r\n              <p>1959 NE Pacific St</p>\r\n              <p>Seattle, WA 98195</p>\r\n            </div>\r\n\r\n          </div>\r\n        ),\r\n      },\r\n      {\r\n        position: new google.maps.LatLng(47.647935, -122.303763),\r\n        showInfo: false,\r\n        infoContent: (\r\n          <div className=\"d-flex\">\r\n            <div>\r\n              <svg\r\n                id=\"Layer_1\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"16\"\r\n                height=\"16\"\r\n                viewBox=\"0 0 16 16\"\r\n              >\r\n                <path\r\n                  d=\"M6 14.5c0 .828-.672 1.5-1.5 1.5S3 15.328 3 14.5 3.672\r\n              13 4.5 13s1.5.672 1.5 1.5zM16 14.5c0 .828-.672 1.5-1.5\r\n              1.5s-1.5-.672-1.5-1.5.672-1.5 1.5-1.5 1.5.672 1.5 1.5zM16\r\n              8V2H4c0-.552-.448-1-1-1H0v1h2l.75 6.438C2.294 8.805 2 9.368\r\n              2 10c0 1.105.895 2 2 2h12v-1H4c-.552 0-1-.448-1-1v-.01L16 8z\"\r\n                />\r\n              </svg>\r\n            </div>\r\n            <div className=\"ml-1\">\r\n              <p>University of Washington Intramural Activities (IMA) Building</p>\r\n              <p>3924 Montlake Blvd NE</p>\r\n              <p>Seattle, WA 98195</p>\r\n            </div>\r\n\r\n          </div>\r\n        ),\r\n      },\r\n    ],\r\n  };\r\n\r\n  handleMarkerClick = this.handleMarkerClick.bind(this);\r\n  handleMarkerClose = this.handleMarkerClose.bind(this);\r\n\r\n  // Toggle to 'true' to show InfoWindow and re-renders simple\r\n  handleMarkerClick(targetMarker) {\r\n    this.setState({\r\n      markers: this.state.markers.map(marker => {\r\n        if (marker === targetMarker) {\r\n          return {\r\n            ...marker,\r\n            showInfo: true,\r\n          };\r\n        }\r\n        return marker;\r\n      }),\r\n    });\r\n  }\r\n\r\n  handleMarkerClose(targetMarker) {\r\n    this.setState({\r\n      markers: this.state.markers.map(marker => {\r\n        if (marker === targetMarker) {\r\n          return {\r\n            ...marker,\r\n            showInfo: false,\r\n          };\r\n        }\r\n        return marker;\r\n      }),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <PopUpInfoWindowExampleGoogleMap\r\n        containerElement={\r\n          <div className=\"embed-responsive embed-responsive-21by9\"/>\r\n        }\r\n        mapElement={<div className=\"embed-responsive-item\"/>}\r\n        center={this.state.center}\r\n        markers={this.state.markers}\r\n        onMarkerClick={this.handleMarkerClick}\r\n        onMarkerClose={this.handleMarkerClose}\r\n      />\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}