{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\src\\\\components\\\\contact\\\\AddContact\\\\index.js\";\nimport React from 'react';\nimport { Modal, ModalHeader } from 'reactstrap';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IntlMessages from 'util/IntlMessages';\n\nvar AddContact =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddContact, _React$Component);\n\n  function AddContact(props) {\n    var _this;\n\n    _classCallCheck(this, AddContact);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddContact).call(this, props));\n    var _props$contact = props.contact,\n        id = _props$contact.id,\n        thumb = _props$contact.thumb,\n        name = _props$contact.name,\n        email = _props$contact.email,\n        phone = _props$contact.phone,\n        designation = _props$contact.designation,\n        selected = _props$contact.selected,\n        starred = _props$contact.starred,\n        frequently = _props$contact.frequently;\n    _this.state = {\n      id: id,\n      thumb: thumb,\n      name: name,\n      email: email,\n      phone: phone,\n      designation: designation,\n      selected: selected,\n      starred: starred,\n      frequently: frequently\n    };\n    return _this;\n  }\n\n  _createClass(AddContact, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          onSaveContact = _this$props.onSaveContact,\n          onContactClose = _this$props.onContactClose,\n          open = _this$props.open,\n          contact = _this$props.contact;\n      var _this$state = this.state,\n          id = _this$state.id,\n          name = _this$state.name,\n          email = _this$state.email,\n          phone = _this$state.phone,\n          designation = _this$state.designation,\n          selected = _this$state.selected,\n          starred = _this$state.starred,\n          frequently = _this$state.frequently;\n      var thumb = this.state.thumb;\n\n      if (!thumb) {\n        thumb = require('assets/images/placeholder.jpg');\n      }\n\n      return React.createElement(Modal, {\n        className: \"modal-box\",\n        toggle: onContactClose,\n        isOpen: open,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        className: \"modal-box-header bg-primary text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, contact.name === '' ? React.createElement(IntlMessages, {\n        id: \"contact.addContact\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }) : React.createElement(IntlMessages, {\n        id: \"contact.saveContact\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(IconButton, {\n        className: \"text-white\",\n        onClick: onContactClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"modal-box-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row no-gutters\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-3 text-center text-lg-right order-lg-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"ml-lg-3 mb-4 mb-lg-0 avatar size-120\",\n        src: thumb,\n        alt: thumb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-lg-9 d-flex flex-column order-lg-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        id: \"required\",\n        label: React.createElement(IntlMessages, {\n          id: \"appModule.name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }),\n        onChange: function onChange(event) {\n          return _this2.setState({\n            name: event.target.value\n          });\n        },\n        defaultValue: name,\n        margin: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"required\",\n        label: React.createElement(IntlMessages, {\n          id: \"appModule.email\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }),\n        onChange: function onChange(event) {\n          return _this2.setState({\n            email: event.target.value\n          });\n        },\n        value: email,\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"required\",\n        label: React.createElement(IntlMessages, {\n          id: \"appModule.phone\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }),\n        onChange: function onChange(event) {\n          return _this2.setState({\n            phone: event.target.value\n          });\n        },\n        value: phone,\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"required\",\n        label: React.createElement(IntlMessages, {\n          id: \"appModule.designation\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }),\n        onChange: function onChange(event) {\n          return _this2.setState({\n            designation: event.target.value\n          });\n        },\n        value: designation,\n        multiline: true,\n        rowsMax: \"4\",\n        margin: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"modal-box-footer d-flex flex-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Button, {\n        disabled: name === '',\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          onContactClose();\n          onSaveContact({\n            'id': id,\n            'name': name,\n            'thumb': thumb,\n            'email': email,\n            'phone': phone,\n            'designation': designation,\n            'selected': selected,\n            'starred': starred,\n            'frequently': frequently\n          });\n\n          _this2.setState({\n            'id': id + 1,\n            'name': '',\n            'thumb': '',\n            'email': '',\n            'phone': '',\n            'designation': ''\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"contact.saveContact\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return AddContact;\n}(React.Component);\n\nexport default AddContact;","map":{"version":3,"sources":["C:\\Users\\Noelia\\Desktop\\compra\\source\\src\\components\\contact\\AddContact\\index.js"],"names":["React","Modal","ModalHeader","TextField","Button","IconButton","CloseIcon","IntlMessages","AddContact","props","contact","id","thumb","name","email","phone","designation","selected","starred","frequently","state","onSaveContact","onContactClose","open","require","event","setState","target","value","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Modal, ModalHeader} from 'reactstrap';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IntlMessages from 'util/IntlMessages';\r\n\r\nclass AddContact extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const {id, thumb, name, email, phone, designation, selected, starred, frequently} = props.contact;\r\n    this.state = {\r\n      id,\r\n      thumb,\r\n      name,\r\n      email,\r\n      phone,\r\n      designation,\r\n      selected,\r\n      starred,\r\n      frequently\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {onSaveContact, onContactClose, open, contact} = this.props;\r\n    const {id, name, email, phone, designation, selected, starred, frequently} = this.state;\r\n    let {thumb} = this.state;\r\n    if (!thumb) {\r\n      thumb = require('assets/images/placeholder.jpg');\r\n    }\r\n    return (\r\n      <Modal className=\"modal-box\" toggle={onContactClose} isOpen={open}>\r\n        <ModalHeader className=\"modal-box-header bg-primary text-white\">\r\n          {contact.name === '' ? <IntlMessages id=\"contact.addContact\"/> :\r\n            <IntlMessages id=\"contact.saveContact\"/>}\r\n          <IconButton className=\"text-white\"\r\n                      onClick={onContactClose}>\r\n            <CloseIcon/>\r\n          </IconButton>\r\n        </ModalHeader>\r\n\r\n        <div className=\"modal-box-content\">\r\n          <div className=\"row no-gutters\">\r\n            <div className=\"col-lg-3 text-center text-lg-right order-lg-2\">\r\n              <img className=\"ml-lg-3 mb-4 mb-lg-0 avatar size-120\" src={thumb} alt={thumb}/>\r\n            </div>\r\n\r\n            <div className=\"col-lg-9 d-flex flex-column order-lg-1\">\r\n              <TextField\r\n                required\r\n                id=\"required\"\r\n                label={<IntlMessages id=\"appModule.name\"/>}\r\n                onChange={(event) => this.setState({name: event.target.value})}\r\n                defaultValue={name}\r\n                margin=\"none\"/>\r\n              <TextField\r\n                id=\"required\"\r\n                label={<IntlMessages id=\"appModule.email\"/>}\r\n                onChange={(event) => this.setState({email: event.target.value})}\r\n                value={email}\r\n                margin=\"normal\"/>\r\n              <TextField\r\n                id=\"required\"\r\n                label={<IntlMessages id=\"appModule.phone\"/>}\r\n                onChange={(event) => this.setState({phone: event.target.value})}\r\n                value={phone}\r\n                margin=\"normal\"\r\n              />\r\n              <TextField\r\n                id=\"required\"\r\n                label={<IntlMessages id=\"appModule.designation\"/>}\r\n                onChange={(event) => this.setState({designation: event.target.value})}\r\n                value={designation}\r\n                multiline\r\n                rowsMax=\"4\"\r\n                margin=\"normal\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"modal-box-footer d-flex flex-row\">\r\n          <Button disabled={name === ''} variant=\"contained\" color=\"primary\" onClick={() => {\r\n            onContactClose();\r\n            onSaveContact(\r\n              {\r\n                'id': id,\r\n                'name': name,\r\n                'thumb': thumb,\r\n                'email': email,\r\n                'phone': phone,\r\n                'designation': designation,\r\n                'selected': selected,\r\n                'starred': starred,\r\n                'frequently': frequently\r\n              });\r\n            this.setState({\r\n              'id': id + 1,\r\n              'name': '',\r\n              'thumb': '',\r\n              'email': '',\r\n              'phone': '',\r\n              'designation': '',\r\n            })\r\n\r\n          }}><IntlMessages id=\"contact.saveContact\"/></Button>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;"]},"metadata":{},"sourceType":"module"}