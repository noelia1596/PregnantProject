{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\src\\\\app\\\\routes\\\\components\\\\routes\\\\dialogs\\\\confirmation\\\\ConfirmationDialogDemo.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nvar options = ['None', 'Atria', 'Callisto', 'Dione', 'Ganymede', 'Hangouts Call', 'Luna', 'Oberon', 'Phobos', 'Pyxis', 'Sedna', 'Titania', 'Triton', 'Umbriel'];\n\nvar ConfirmationDialog =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ConfirmationDialog, _React$Component);\n\n  function ConfirmationDialog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ConfirmationDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ConfirmationDialog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      value: undefined\n    };\n    _this.radioGroup = null;\n\n    _this.handleEntering = function () {\n      _this.radioGroup.focus();\n    };\n\n    _this.handleCancel = function () {\n      _this.props.onClose(_this.props.value);\n    };\n\n    _this.handleOk = function () {\n      _this.props.onClose(_this.state.value);\n    };\n\n    _this.handleChange = function (event, value) {\n      _this.setState({\n        value: value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ConfirmationDialog, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        value: this.props.value\n      });\n    }\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate(nextProps) {\n      if (nextProps.value !== this.props.value) {\n        // eslint-disable-next-line react/no-will-update-set-state\n        this.setState({\n          value: nextProps.value\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          value = _this$props.value,\n          other = _objectWithoutProperties(_this$props, [\"value\"]);\n\n      return React.createElement(Dialog, Object.assign({\n        disableBackdropClick: true,\n        disableEscapeKeyDown: true,\n        maxWidth: \"xs\",\n        onEntering: this.handleEntering\n      }, other, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Phone Ringtone\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(RadioGroup, {\n        ref: function ref(node) {\n          _this2.radioGroup = node;\n        },\n        \"aria-label\": \"ringtone\",\n        name: \"ringtone\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, options.map(function (option) {\n        return React.createElement(FormControlLabel, {\n          value: option,\n          key: option,\n          control: React.createElement(Radio, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }),\n          label: option,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        });\n      }))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleCancel,\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        onClick: this.handleOk,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Ok\")));\n    }\n  }]);\n\n  return ConfirmationDialog;\n}(React.Component);\n\nConfirmationDialog.propTypes = {\n  onClose: PropTypes.func,\n  value: PropTypes.string\n};\n\nvar ConfirmationDialogDemo =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(ConfirmationDialogDemo, _React$Component2);\n\n  function ConfirmationDialogDemo() {\n    var _getPrototypeOf3;\n\n    var _this3;\n\n    _classCallCheck(this, ConfirmationDialogDemo);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this3 = _possibleConstructorReturn(this, (_getPrototypeOf3 = _getPrototypeOf(ConfirmationDialogDemo)).call.apply(_getPrototypeOf3, [this].concat(args)));\n    _this3.state = {\n      open: false,\n      value: 'Dione'\n    };\n    _this3.button = undefined;\n\n    _this3.handleClickListItem = function () {\n      _this3.setState({\n        open: true\n      });\n    };\n\n    _this3.handleRequestClose = function (value) {\n      _this3.setState({\n        value: value,\n        open: false\n      });\n    };\n\n    return _this3;\n  }\n\n  _createClass(ConfirmationDialogDemo, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"d-inline-block w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        button: true,\n        divider: true,\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        primary: \"Interruptions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })), React.createElement(ListItem, {\n        button: true,\n        divider: true,\n        \"aria-haspopup\": true,\n        \"aria-controls\": \"ringtone-menu\",\n        \"aria-label\": \"Phone ringtone\",\n        onClick: this.handleClickListItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        primary: \"Phone ringtone\",\n        secondary: this.state.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      })), React.createElement(ListItem, {\n        button: true,\n        divider: true,\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        primary: \"Default notification ringtone\",\n        secondary: \"Tethys\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      })), React.createElement(ConfirmationDialog, {\n        open: this.state.open,\n        onClose: this.handleRequestClose,\n        value: this.state.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ConfirmationDialogDemo;\n}(React.Component);\n\nexport default ConfirmationDialogDemo;","map":{"version":3,"sources":["C:\\Users\\Noelia\\Desktop\\compra\\source\\src\\app\\routes\\components\\routes\\dialogs\\confirmation\\ConfirmationDialogDemo.js"],"names":["React","PropTypes","Button","List","ListItem","ListItemText","Dialog","DialogContent","DialogActions","DialogTitle","Radio","RadioGroup","FormControlLabel","options","ConfirmationDialog","state","value","undefined","radioGroup","handleEntering","focus","handleCancel","props","onClose","handleOk","handleChange","event","setState","nextProps","other","node","map","option","Component","propTypes","func","string","ConfirmationDialogDemo","open","button","handleClickListItem","handleRequestClose"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nconst options = [\r\n  'None',\r\n  'Atria',\r\n  'Callisto',\r\n  'Dione',\r\n  'Ganymede',\r\n  'Hangouts Call',\r\n  'Luna',\r\n  'Oberon',\r\n  'Phobos',\r\n  'Pyxis',\r\n  'Sedna',\r\n  'Titania',\r\n  'Triton',\r\n  'Umbriel',\r\n];\r\n\r\nclass ConfirmationDialog extends React.Component {\r\n  state = {\r\n    value: undefined,\r\n  };\r\n  radioGroup = null;\r\n  handleEntering = () => {\r\n    this.radioGroup.focus();\r\n  };\r\n  handleCancel = () => {\r\n    this.props.onClose(this.props.value);\r\n  };\r\n  handleOk = () => {\r\n    this.props.onClose(this.state.value);\r\n  };\r\n  handleChange = (event, value) => {\r\n    this.setState({value});\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.setState({value: this.props.value});\r\n  }\r\n\r\n  componentWillUpdate(nextProps) {\r\n    if (nextProps.value !== this.props.value) {\r\n      // eslint-disable-next-line react/no-will-update-set-state\r\n      this.setState({value: nextProps.value});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {value, ...other} = this.props;\r\n\r\n    return (\r\n      <Dialog\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        maxWidth=\"xs\"\r\n        onEntering={this.handleEntering}\r\n        {...other}\r\n      >\r\n        <DialogTitle>Phone Ringtone</DialogTitle>\r\n        <DialogContent>\r\n          <RadioGroup\r\n            ref={node => {\r\n              this.radioGroup = node;\r\n            }}\r\n            aria-label=\"ringtone\"\r\n            name=\"ringtone\"\r\n            value={this.state.value}\r\n            onChange={this.handleChange}\r\n          >\r\n            {options.map(option => (\r\n              <FormControlLabel value={option} key={option} control={<Radio/>} label={option}/>\r\n            ))}\r\n          </RadioGroup>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.handleCancel} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={this.handleOk} color=\"primary\">\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nConfirmationDialog.propTypes = {\r\n  onClose: PropTypes.func,\r\n  value: PropTypes.string,\r\n};\r\n\r\nclass ConfirmationDialogDemo extends React.Component {\r\n  state = {\r\n    open: false,\r\n    value: 'Dione',\r\n  };\r\n\r\n  button = undefined;\r\n\r\n  handleClickListItem = () => {\r\n    this.setState({open: true});\r\n  };\r\n\r\n  handleRequestClose = value => {\r\n    this.setState({value, open: false});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"d-inline-block w-100\">\r\n        <List>\r\n          <ListItem button divider disabled>\r\n            <ListItemText primary=\"Interruptions\"/>\r\n          </ListItem>\r\n          <ListItem\r\n            button\r\n            divider\r\n            aria-haspopup\r\n            aria-controls=\"ringtone-menu\"\r\n            aria-label=\"Phone ringtone\"\r\n            onClick={this.handleClickListItem}\r\n          >\r\n            <ListItemText primary=\"Phone ringtone\" secondary={this.state.value}/>\r\n          </ListItem>\r\n          <ListItem button divider disabled>\r\n            <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\"/>\r\n          </ListItem>\r\n          <ConfirmationDialog\r\n            open={this.state.open}\r\n            onClose={this.handleRequestClose}\r\n            value={this.state.value}\r\n          />\r\n        </List>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConfirmationDialogDemo;"]},"metadata":{},"sourceType":"module"}