{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\src\\\\app\\\\routes\\\\extensions\\\\routes\\\\dragnDrop\\\\index.js\";\nimport React, { Component } from 'react';\nimport ContactCell from './ContactCell/index';\nimport contacts from 'app/routes/contact/data/contactList';\nimport { arrayMove, SortableContainer } from 'react-sortable-hoc';\nimport ContainerHeader from 'components/ContainerHeader/index';\nimport IntlMessages from 'util/IntlMessages';\nvar Contacts = SortableContainer(function (_ref) {\n  var contacts = _ref.contacts;\n  return React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, contacts.map(function (contact, index) {\n    return React.createElement(ContactCell, {\n      key: index,\n      index: index,\n      contact: contact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    });\n  }));\n});\n\nvar DragNDrop =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DragNDrop, _Component);\n\n  function DragNDrop() {\n    var _this;\n\n    _classCallCheck(this, DragNDrop);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DragNDrop).call(this));\n\n    _this.onSortEnd = function (_ref2) {\n      var oldIndex = _ref2.oldIndex,\n          newIndex = _ref2.newIndex;\n\n      _this.setState({\n        contacts: arrayMove(_this.state.contacts, oldIndex, newIndex)\n      });\n    };\n\n    _this.state = {\n      contacts: contacts\n    };\n    return _this;\n  }\n\n  _createClass(DragNDrop, [{\n    key: \"render\",\n    value: function render() {\n      var contacts = this.state.contacts;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(ContainerHeader, {\n        title: React.createElement(IntlMessages, {\n          id: \"sidebar.extensions.dragNDrop\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }),\n        match: this.props.match,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"animated slideInUpTiny animation-duration-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Contacts, {\n        contacts: contacts,\n        onSortEnd: this.onSortEnd,\n        useDragHandle: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return DragNDrop;\n}(Component);\n\nexport default DragNDrop;","map":{"version":3,"sources":["C:\\Users\\Noelia\\Desktop\\Plantillas\\source\\src\\app\\routes\\extensions\\routes\\dragnDrop\\index.js"],"names":["React","Component","ContactCell","contacts","arrayMove","SortableContainer","ContainerHeader","IntlMessages","Contacts","map","contact","index","DragNDrop","onSortEnd","oldIndex","newIndex","setState","state","props","match"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,SAAQC,SAAR,EAAmBC,iBAAnB,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AAEA,IAAMC,QAAQ,GAAGH,iBAAiB,CAAC,gBAAgB;AAAA,MAAdF,QAAc,QAAdA,QAAc;AACjD,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QAAQ,CAACM,GAAT,CAAa,UAACC,OAAD,EAAUC,KAAV;AAAA,WACZ,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEA,KAAlB;AAAyB,MAAA,KAAK,EAAEA,KAAhC;AAAuC,MAAA,OAAO,EAAED,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADY;AAAA,GAAb,CADH,CADF;AAOD,CARiC,CAAlC;;IAWME,S;;;;;AAQJ,uBAAc;AAAA;;AAAA;;AACZ;;AADY,UANdC,SAMc,GANF,iBAA0B;AAAA,UAAxBC,QAAwB,SAAxBA,QAAwB;AAAA,UAAdC,QAAc,SAAdA,QAAc;;AACpC,YAAKC,QAAL,CAAc;AACZb,QAAAA,QAAQ,EAAEC,SAAS,CAAC,MAAKa,KAAL,CAAWd,QAAZ,EAAsBW,QAAtB,EAAgCC,QAAhC;AADP,OAAd;AAGD,KAEa;;AAEZ,UAAKE,KAAL,GAAa;AACXd,MAAAA,QAAQ,EAAEA;AADC,KAAb;AAFY;AAKb;;;;6BAEQ;AAAA,UACAA,QADA,GACY,KAAKc,KADjB,CACAd,QADA;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,eAAD;AAAiB,QAAA,KAAK,EAAE,oBAAC,YAAD;AAAc,UAAA,EAAE,EAAC,8BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAxB;AAA2E,QAAA,KAAK,EAAE,KAAKe,KAAL,CAAWC,KAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,SAAS,EAAC,6CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAEhB,QAApB;AAA8B,QAAA,SAAS,EAAE,KAAKU,SAA9C;AAAyD,QAAA,aAAa,EAAE,IAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,CADF;AAQD;;;;EAzBqBZ,S;;AA4BxB,eAAeW,SAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport ContactCell from './ContactCell/index'\r\nimport contacts from 'app/routes/contact/data/contactList';\r\nimport {arrayMove, SortableContainer} from 'react-sortable-hoc';\r\n\r\nimport ContainerHeader from 'components/ContainerHeader/index';\r\nimport IntlMessages from 'util/IntlMessages';\r\n\r\nconst Contacts = SortableContainer(({contacts}) => {\r\n  return (\r\n    <div className=\"row\">\r\n      {contacts.map((contact, index) => (\r\n        <ContactCell key={index} index={index} contact={contact}/>\r\n      ))}\r\n    </div>\r\n  );\r\n});\r\n\r\n\r\nclass DragNDrop extends Component {\r\n\r\n  onSortEnd = ({oldIndex, newIndex}) => {\r\n    this.setState({\r\n      contacts: arrayMove(this.state.contacts, oldIndex, newIndex),\r\n    });\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      contacts: contacts,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {contacts} = this.state;\r\n    return (\r\n      <div>\r\n        <ContainerHeader title={<IntlMessages id=\"sidebar.extensions.dragNDrop\"/>} match={this.props.match}/>\r\n        <div className=\"animated slideInUpTiny animation-duration-3\">\r\n          <Contacts contacts={contacts} onSortEnd={this.onSortEnd} useDragHandle={true}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DragNDrop\r\n"]},"metadata":{},"sourceType":"module"}