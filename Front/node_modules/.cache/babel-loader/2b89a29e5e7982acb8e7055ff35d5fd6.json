{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _objectSpread from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\src\\\\app\\\\routes\\\\components\\\\routes\\\\autoComplete\\\\autosuggest\\\\IntegrationAutosuggest.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Autosuggest from 'react-autosuggest';\nimport match from 'autosuggest-highlight/match';\nimport parse from 'autosuggest-highlight/parse';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withStyles } from '@material-ui/core/styles';\nvar suggestions = [{\n  label: 'Afghanistan'\n}, {\n  label: 'Aland Islands'\n}, {\n  label: 'Albania'\n}, {\n  label: 'Algeria'\n}, {\n  label: 'American Samoa'\n}, {\n  label: 'Andorra'\n}, {\n  label: 'Angola'\n}, {\n  label: 'Anguilla'\n}, {\n  label: 'Antarctica'\n}, {\n  label: 'Antigua and Barbuda'\n}, {\n  label: 'Argentina'\n}, {\n  label: 'Armenia'\n}, {\n  label: 'Aruba'\n}, {\n  label: 'Australia'\n}, {\n  label: 'Austria'\n}, {\n  label: 'Azerbaijan'\n}, {\n  label: 'Bahamas'\n}, {\n  label: 'Bahrain'\n}, {\n  label: 'Bangladesh'\n}, {\n  label: 'Barbados'\n}, {\n  label: 'Belarus'\n}, {\n  label: 'Belgium'\n}, {\n  label: 'Belize'\n}, {\n  label: 'Benin'\n}, {\n  label: 'Bermuda'\n}, {\n  label: 'Bhutan'\n}, {\n  label: 'Bolivia, Plurinational State of'\n}, {\n  label: 'Bonaire, Sint Eustatius and Saba'\n}, {\n  label: 'Bosnia and Herzegovina'\n}, {\n  label: 'Botswana'\n}, {\n  label: 'Bouvet Island'\n}, {\n  label: 'Brazil'\n}, {\n  label: 'British Indian Ocean Territory'\n}, {\n  label: 'Brunei Darussalam'\n}];\n\nfunction renderInput(inputProps) {\n  var classes = inputProps.classes,\n      ref = inputProps.ref,\n      other = _objectWithoutProperties(inputProps, [\"classes\", \"ref\"]);\n\n  return React.createElement(TextField, {\n    fullWidth: true,\n    inputref: ref,\n    InputProps: _objectSpread({\n      classes: {\n        input: classes.input\n      }\n    }, other),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  });\n}\n\nfunction renderSuggestion(suggestion, _ref) {\n  var query = _ref.query,\n      isHighlighted = _ref.isHighlighted;\n  var matches = match(suggestion.label, query);\n  var parts = parse(suggestion.label, matches);\n  return React.createElement(MenuItem, {\n    selected: isHighlighted,\n    component: \"div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, parts.map(function (part, index) {\n    return part.highlight ? React.createElement(\"span\", {\n      key: String(index),\n      style: {\n        fontWeight: 300\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, part.text) : React.createElement(\"strong\", {\n      key: String(index),\n      style: {\n        fontWeight: 500\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, part.text);\n  })));\n}\n\nfunction renderSuggestionsContainer(options) {\n  var containerProps = options.containerProps,\n      children = options.children;\n  return React.createElement(\"div\", {\n    className: \"position-relative z-index-20\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Paper, Object.assign({}, containerProps, {\n    square: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), children));\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.label;\n}\n\nfunction getSuggestions(value) {\n  var inputValue = value.trim().toLowerCase();\n  var inputLength = inputValue.length;\n  var count = 0;\n  return inputLength === 0 ? [] : suggestions.filter(function (suggestion) {\n    var keep = count < 5 && suggestion.label.toLowerCase().slice(0, inputLength) === inputValue;\n\n    if (keep) {\n      count += 1;\n    }\n\n    return keep;\n  });\n}\n\nvar styles = function styles(theme) {\n  return {\n    container: {\n      flexGrow: 1,\n      position: 'relative',\n      height: 100,\n      width: '60%'\n    },\n    suggestionsContainerOpen: {\n      position: 'absolute',\n      marginTop: theme.spacing.unit,\n      marginBottom: theme.spacing.unit * 3,\n      left: 0,\n      right: 0,\n      zIndex: 10\n    },\n    suggestion: {\n      display: 'block'\n    },\n    suggestionsList: {\n      margin: 0,\n      padding: 0,\n      listStyleType: 'none'\n    }\n  };\n};\n\nvar IntegrationAutosuggest =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(IntegrationAutosuggest, _React$Component);\n\n  function IntegrationAutosuggest() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, IntegrationAutosuggest);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(IntegrationAutosuggest)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      value: '',\n      suggestions: []\n    };\n\n    _this.handleSuggestionsFetchRequested = function (_ref2) {\n      var value = _ref2.value;\n\n      _this.setState({\n        suggestions: getSuggestions(value)\n      });\n    };\n\n    _this.handleSuggestionsClearRequested = function () {\n      _this.setState({\n        suggestions: []\n      });\n    };\n\n    _this.handleChange = function (event, _ref3) {\n      var newValue = _ref3.newValue;\n\n      _this.setState({\n        value: newValue\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(IntegrationAutosuggest, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(Autosuggest, {\n        theme: {\n          container: classes.container,\n          suggestionsContainerOpen: classes.suggestionsContainerOpen,\n          suggestionsList: classes.suggestionsList,\n          suggestion: classes.suggestion\n        },\n        renderInputComponent: renderInput,\n        suggestions: this.state.suggestions,\n        onSuggestionsFetchRequested: this.handleSuggestionsFetchRequested,\n        onSuggestionsClearRequested: this.handleSuggestionsClearRequested,\n        renderSuggestionsContainer: renderSuggestionsContainer,\n        getSuggestionValue: getSuggestionValue,\n        renderSuggestion: renderSuggestion,\n        inputProps: {\n          classes: classes,\n          placeholder: 'Search a country (start with a)',\n          value: this.state.value,\n          onChange: this.handleChange\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return IntegrationAutosuggest;\n}(React.Component);\n\nIntegrationAutosuggest.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(IntegrationAutosuggest);","map":{"version":3,"sources":["C:\\Users\\Noelia\\Desktop\\Plantillas\\source\\src\\app\\routes\\components\\routes\\autoComplete\\autosuggest\\IntegrationAutosuggest.js"],"names":["React","PropTypes","Autosuggest","match","parse","TextField","Paper","MenuItem","withStyles","suggestions","label","renderInput","inputProps","classes","ref","other","input","renderSuggestion","suggestion","query","isHighlighted","matches","parts","map","part","index","highlight","String","fontWeight","text","renderSuggestionsContainer","options","containerProps","children","getSuggestionValue","getSuggestions","value","inputValue","trim","toLowerCase","inputLength","length","count","filter","keep","slice","styles","theme","container","flexGrow","position","height","width","suggestionsContainerOpen","marginTop","spacing","unit","marginBottom","left","right","zIndex","display","suggestionsList","margin","padding","listStyleType","IntegrationAutosuggest","state","handleSuggestionsFetchRequested","setState","handleSuggestionsClearRequested","handleChange","event","newValue","props","placeholder","onChange","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport match from 'autosuggest-highlight/match';\r\nimport parse from 'autosuggest-highlight/parse';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\nconst suggestions = [\r\n  {label: 'Afghanistan'},\r\n  {label: 'Aland Islands'},\r\n  {label: 'Albania'},\r\n  {label: 'Algeria'},\r\n  {label: 'American Samoa'},\r\n  {label: 'Andorra'},\r\n  {label: 'Angola'},\r\n  {label: 'Anguilla'},\r\n  {label: 'Antarctica'},\r\n  {label: 'Antigua and Barbuda'},\r\n  {label: 'Argentina'},\r\n  {label: 'Armenia'},\r\n  {label: 'Aruba'},\r\n  {label: 'Australia'},\r\n  {label: 'Austria'},\r\n  {label: 'Azerbaijan'},\r\n  {label: 'Bahamas'},\r\n  {label: 'Bahrain'},\r\n  {label: 'Bangladesh'},\r\n  {label: 'Barbados'},\r\n  {label: 'Belarus'},\r\n  {label: 'Belgium'},\r\n  {label: 'Belize'},\r\n  {label: 'Benin'},\r\n  {label: 'Bermuda'},\r\n  {label: 'Bhutan'},\r\n  {label: 'Bolivia, Plurinational State of'},\r\n  {label: 'Bonaire, Sint Eustatius and Saba'},\r\n  {label: 'Bosnia and Herzegovina'},\r\n  {label: 'Botswana'},\r\n  {label: 'Bouvet Island'},\r\n  {label: 'Brazil'},\r\n  {label: 'British Indian Ocean Territory'},\r\n  {label: 'Brunei Darussalam'},\r\n];\r\n\r\nfunction renderInput(inputProps) {\r\n  const {classes, ref, ...other} = inputProps;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      inputref={ref}\r\n      InputProps={{\r\n        classes: {\r\n          input: classes.input,\r\n        },\r\n        ...other,\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nfunction renderSuggestion(suggestion, {query, isHighlighted}) {\r\n  const matches = match(suggestion.label, query);\r\n  const parts = parse(suggestion.label, matches);\r\n\r\n  return (\r\n    <MenuItem selected={isHighlighted} component=\"div\">\r\n      <div>\r\n        {parts.map((part, index) => {\r\n          return part.highlight ? (\r\n            <span key={String(index)} style={{fontWeight: 300}}>\r\n              {part.text}\r\n            </span>\r\n          ) : (\r\n            <strong key={String(index)} style={{fontWeight: 500}}>\r\n              {part.text}\r\n            </strong>\r\n          );\r\n        })}\r\n      </div>\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nfunction renderSuggestionsContainer(options) {\r\n  const {containerProps, children} = options;\r\n\r\n  return (\r\n    <div className=\"position-relative z-index-20\">\r\n      <Paper {...containerProps} square>\r\n        {children}\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction getSuggestionValue(suggestion) {\r\n  return suggestion.label;\r\n}\r\n\r\nfunction getSuggestions(value) {\r\n  const inputValue = value.trim().toLowerCase();\r\n  const inputLength = inputValue.length;\r\n  let count = 0;\r\n\r\n  return inputLength === 0\r\n    ? []\r\n    : suggestions.filter(suggestion => {\r\n      const keep =\r\n        count < 5 && suggestion.label.toLowerCase().slice(0, inputLength) === inputValue;\r\n\r\n      if (keep) {\r\n        count += 1;\r\n      }\r\n\r\n      return keep;\r\n    });\r\n}\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    flexGrow: 1,\r\n    position: 'relative',\r\n    height: 100,\r\n    width: '60%',\r\n  },\r\n  suggestionsContainerOpen: {\r\n    position: 'absolute',\r\n    marginTop: theme.spacing.unit,\r\n    marginBottom: theme.spacing.unit * 3,\r\n    left: 0,\r\n    right: 0,\r\n    zIndex: 10,\r\n  },\r\n  suggestion: {\r\n    display: 'block',\r\n  },\r\n  suggestionsList: {\r\n    margin: 0,\r\n    padding: 0,\r\n    listStyleType: 'none',\r\n  },\r\n});\r\n\r\nclass IntegrationAutosuggest extends React.Component {\r\n  state = {\r\n    value: '',\r\n    suggestions: [],\r\n  };\r\n\r\n  handleSuggestionsFetchRequested = ({value}) => {\r\n    this.setState({\r\n      suggestions: getSuggestions(value),\r\n    });\r\n  };\r\n\r\n  handleSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: [],\r\n    });\r\n  };\r\n\r\n  handleChange = (event, {newValue}) => {\r\n    this.setState({\r\n      value: newValue,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {classes} = this.props;\r\n\r\n    return (\r\n      <Autosuggest\r\n        theme={{\r\n          container: classes.container,\r\n          suggestionsContainerOpen: classes.suggestionsContainerOpen,\r\n          suggestionsList: classes.suggestionsList,\r\n          suggestion: classes.suggestion,\r\n        }}\r\n        renderInputComponent={renderInput}\r\n        suggestions={this.state.suggestions}\r\n        onSuggestionsFetchRequested={this.handleSuggestionsFetchRequested}\r\n        onSuggestionsClearRequested={this.handleSuggestionsClearRequested}\r\n        renderSuggestionsContainer={renderSuggestionsContainer}\r\n        getSuggestionValue={getSuggestionValue}\r\n        renderSuggestion={renderSuggestion}\r\n        inputProps={{\r\n          classes,\r\n          placeholder: 'Search a country (start with a)',\r\n          value: this.state.value,\r\n          onChange: this.handleChange,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nIntegrationAutosuggest.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(IntegrationAutosuggest);"]},"metadata":{},"sourceType":"module"}