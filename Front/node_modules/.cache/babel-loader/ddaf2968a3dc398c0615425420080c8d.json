{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\src\\\\components\\\\wall\\\\PostList\\\\index.js\";\nimport React, { Component } from \"react\";\nimport PostItem from \"./PostItem\";\nimport WriteBox from \"../../../components/wall/WriteBox/index\";\nimport Auxiliary from \"../../../util/Auxiliary\";\n\nvar PostList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostList, _Component);\n\n  function PostList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PostList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PostList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      postList: [],\n      user: {}\n    };\n    return _this;\n  }\n\n  _createClass(PostList, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        postList: this.props.postList,\n        user: this.props.user\n      });\n    }\n  }, {\n    key: \"addPost\",\n    value: function addPost(commentText, imageList) {\n      var post = {\n        id: Math.random() * 1343300,\n        text: commentText,\n        user: this.state.user,\n        date: new Date().toString(),\n        mediaList: imageList.map(function (data) {\n          return {\n            image: data.preview\n          };\n        }),\n        viewCount: 0,\n        likeCount: 0,\n        isLike: false,\n        commentCount: 0,\n        commentList: []\n      };\n      console.log(\"Post Data :==()==>\", post);\n      var postArray = this.state.postList;\n      postArray.unshift(post);\n      this.setState({\n        postList: postArray\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Auxiliary, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(WriteBox, {\n        addPost: this.addPost.bind(this),\n        user: this.state.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), this.state.postList.map(function (post) {\n        return React.createElement(PostItem, {\n          key: post.id,\n          index: post.id,\n          postData: post,\n          user: _this2.state.user,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return PostList;\n}(Component);\n\nexport default PostList;","map":{"version":3,"sources":["C:\\Users\\Noelia\\Desktop\\Plantillas\\source\\src\\components\\wall\\PostList\\index.js"],"names":["React","Component","PostItem","WriteBox","Auxiliary","PostList","state","postList","user","setState","props","commentText","imageList","post","id","Math","random","text","date","Date","toString","mediaList","map","data","image","preview","viewCount","likeCount","isLike","commentCount","commentList","console","log","postArray","unshift","addPost","bind"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,yCAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;IAEMC,Q;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,IAAI,EAAE;AAFA,K;;;;;;yCAKa;AACnB,WAAKC,QAAL,CAAc;AAACF,QAAAA,QAAQ,EAAE,KAAKG,KAAL,CAAWH,QAAtB;AAAgCC,QAAAA,IAAI,EAAE,KAAKE,KAAL,CAAWF;AAAjD,OAAd;AACD;;;4BAGOG,W,EAAaC,S,EAAW;AAE9B,UAAMC,IAAI,GAAG;AACXC,QAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,KAAgB,OADT;AAEXC,QAAAA,IAAI,EAAEN,WAFK;AAGXH,QAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE,IAHN;AAIXU,QAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,QAAX,EAJK;AAKXC,QAAAA,SAAS,EAAET,SAAS,CAACU,GAAV,CAAc,UAAAC,IAAI,EAAI;AAC/B,iBAAO;AAACC,YAAAA,KAAK,EAAED,IAAI,CAACE;AAAb,WAAP;AACD,SAFU,CALA;AAQXC,QAAAA,SAAS,EAAE,CARA;AASXC,QAAAA,SAAS,EAAE,CATA;AAUXC,QAAAA,MAAM,EAAE,KAVG;AAWXC,QAAAA,YAAY,EAAE,CAXH;AAYXC,QAAAA,WAAW,EAAE;AAZF,OAAb;AAcAC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCnB,IAAlC;AAEA,UAAIoB,SAAS,GAAG,KAAK3B,KAAL,CAAWC,QAA3B;AACA0B,MAAAA,SAAS,CAACC,OAAV,CAAkBrB,IAAlB;AACA,WAAKJ,QAAL,CAAc;AACZF,QAAAA,QAAQ,EAAE0B;AADE,OAAd;AAGD;;;6BAEQ;AAAA;;AACP,aACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAE,KAAKE,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAnB;AAA4C,QAAA,IAAI,EAAE,KAAK9B,KAAL,CAAWE,IAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEG,KAAKF,KAAL,CAAWC,QAAX,CAAoBe,GAApB,CAAwB,UAACT,IAAD,EAAU;AAC/B,eAAO,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,UAAA,KAAK,EAAED,IAAI,CAACC,EAApC;AAAwC,UAAA,QAAQ,EAAED,IAAlD;AAAwD,UAAA,IAAI,EAAE,MAAI,CAACP,KAAL,CAAWE,IAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFF,CAFH,CADF;AASD;;;;EA/CoBP,S;;AAkDvB,eAAeI,QAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport PostItem from \"./PostItem\";\r\nimport WriteBox from \"../../../components/wall/WriteBox/index\";\r\nimport Auxiliary from \"../../../util/Auxiliary\";\r\n\r\nclass PostList extends Component {\r\n\r\n  state = {\r\n    postList: [],\r\n    user: {}\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setState({postList: this.props.postList, user: this.props.user})\r\n  }\r\n\r\n\r\n  addPost(commentText, imageList) {\r\n\r\n    const post = {\r\n      id: Math.random() * 1343300,\r\n      text: commentText,\r\n      user: this.state.user,\r\n      date: new Date().toString(),\r\n      mediaList: imageList.map(data => {\r\n        return {image: data.preview}\r\n      }),\r\n      viewCount: 0,\r\n      likeCount: 0,\r\n      isLike: false,\r\n      commentCount: 0,\r\n      commentList: [],\r\n    };\r\n    console.log(\"Post Data :==()==>\", post)\r\n\r\n    let postArray = this.state.postList;\r\n    postArray.unshift(post);\r\n    this.setState({\r\n      postList: postArray\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Auxiliary>\r\n        <WriteBox addPost={this.addPost.bind(this)} user={this.state.user}/>\r\n        {this.state.postList.map((post) => {\r\n            return <PostItem key={post.id} index={post.id} postData={post} user={this.state.user}/>\r\n          }\r\n        )}\r\n      </Auxiliary>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PostList\r\n"]},"metadata":{},"sourceType":"module"}