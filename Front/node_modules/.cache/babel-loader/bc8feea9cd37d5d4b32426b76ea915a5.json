{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\src\\\\app\\\\routes\\\\components\\\\routes\\\\stepper\\\\nonLinear\\\\HorizontalNonLinearStepper.js\";\nimport React from 'react';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepButton from '@material-ui/core/StepButton';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nfunction getSteps() {\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return 'Step 1: Select campaign settings...';\n\n    case 1:\n      return 'Step 2: What is an ad group anyways?';\n\n    case 2:\n      return 'Step 3: This is the bit I really care about!';\n\n    default:\n      return 'Unknown step';\n  }\n}\n\nvar HorizontalNonLinearStepper =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HorizontalNonLinearStepper, _React$Component);\n\n  function HorizontalNonLinearStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, HorizontalNonLinearStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(HorizontalNonLinearStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      activeStep: 0,\n      completed: {}\n    };\n\n    _this.totalSteps = function () {\n      return getSteps().length;\n    };\n\n    _this.handleNext = function () {\n      var activeStep;\n\n      if (_this.isLastStep() && !_this.allStepsCompleted()) {\n        // It's the last step, but not all steps have been completed,\n        // find the first step that has been completed\n        var steps = getSteps();\n        activeStep = steps.findIndex(function (step, i) {\n          return !(i in _this.state.completed);\n        });\n      } else {\n        activeStep = _this.state.activeStep + 1;\n      }\n\n      _this.setState({\n        activeStep: activeStep\n      });\n    };\n\n    _this.handleBack = function () {\n      var activeStep = _this.state.activeStep;\n\n      _this.setState({\n        activeStep: activeStep - 1\n      });\n    };\n\n    _this.handleStep = function (step) {\n      return function () {\n        _this.setState({\n          activeStep: step\n        });\n      };\n    };\n\n    _this.handleComplete = function () {\n      var completed = _this.state.completed;\n      completed[_this.state.activeStep] = true;\n\n      _this.setState({\n        completed: completed\n      });\n\n      _this.handleNext();\n    };\n\n    _this.handleReset = function () {\n      _this.setState({\n        activeStep: 0,\n        completed: {}\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(HorizontalNonLinearStepper, [{\n    key: \"completedSteps\",\n    value: function completedSteps() {\n      return Object.keys(this.state.completed).length;\n    }\n  }, {\n    key: \"isLastStep\",\n    value: function isLastStep() {\n      return this.state.activeStep === this.totalSteps() - 1;\n    }\n  }, {\n    key: \"allStepsCompleted\",\n    value: function allStepsCompleted() {\n      return this.completedSteps() === this.totalSteps();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var steps = getSteps();\n      var activeStep = this.state.activeStep;\n      return React.createElement(\"div\", {\n        className: \"w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Stepper, {\n        nonLinear: true,\n        activeStep: activeStep,\n        className: \"horizontal-stepper-linear\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, steps.map(function (label, index) {\n        return React.createElement(Step, {\n          key: label,\n          className: \"horizontal-stepper \".concat(index === activeStep ? 'active' : ''),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(StepButton, {\n          className: \"stepperbutton\",\n          onClick: _this2.handleStep(index),\n          completed: _this2.state.completed[index],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, label));\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, this.allStepsCompleted() ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: \"my-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"All steps completed - you\\\"re finished\"), React.createElement(Button, {\n        className: \"jr-btn\",\n        onClick: this.handleReset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Reset\")) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: \"my-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, getStepContent(activeStep)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Button, {\n        disabled: activeStep === 0,\n        onClick: this.handleBack,\n        className: \"jr-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Back\"), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleNext,\n        className: \"jr-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Next\"), activeStep !== steps.length && (this.state.completed[this.state.activeStep] ? React.createElement(Typography, {\n        variant: \"caption\",\n        className: \"my-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Step \", activeStep + 1, \" already completed\") : React.createElement(Button, {\n        className: \"jr-btn\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleComplete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, this.completedSteps() === this.totalSteps() - 1 ? 'Finish' : 'Complete Step'))))));\n    }\n  }]);\n\n  return HorizontalNonLinearStepper;\n}(React.Component);\n\nexport default HorizontalNonLinearStepper;","map":{"version":3,"sources":["C:\\Users\\Noelia\\Desktop\\jumbo-react-3.0.1\\source\\src\\app\\routes\\components\\routes\\stepper\\nonLinear\\HorizontalNonLinearStepper.js"],"names":["React","Stepper","Step","StepButton","Button","Typography","getSteps","getStepContent","step","HorizontalNonLinearStepper","state","activeStep","completed","totalSteps","length","handleNext","isLastStep","allStepsCompleted","steps","findIndex","i","setState","handleBack","handleStep","handleComplete","handleReset","Object","keys","completedSteps","map","label","index","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepButton from '@material-ui/core/StepButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nfunction getSteps() {\r\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return 'Step 1: Select campaign settings...';\r\n    case 1:\r\n      return 'Step 2: What is an ad group anyways?';\r\n    case 2:\r\n      return 'Step 3: This is the bit I really care about!';\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nclass HorizontalNonLinearStepper extends React.Component {\r\n  state = {\r\n    activeStep: 0,\r\n    completed: {},\r\n  };\r\n  totalSteps = () => {\r\n    return getSteps().length;\r\n  };\r\n  handleNext = () => {\r\n    let activeStep;\r\n\r\n    if (this.isLastStep() && !this.allStepsCompleted()) {\r\n      // It's the last step, but not all steps have been completed,\r\n      // find the first step that has been completed\r\n      const steps = getSteps();\r\n      activeStep = steps.findIndex((step, i) => !(i in this.state.completed));\r\n    } else {\r\n      activeStep = this.state.activeStep + 1;\r\n    }\r\n    this.setState({\r\n      activeStep,\r\n    });\r\n  };\r\n  handleBack = () => {\r\n    const {activeStep} = this.state;\r\n    this.setState({\r\n      activeStep: activeStep - 1,\r\n    });\r\n  };\r\n  handleStep = step => () => {\r\n    this.setState({\r\n      activeStep: step,\r\n    });\r\n  };\r\n  handleComplete = () => {\r\n    const {completed} = this.state;\r\n    completed[this.state.activeStep] = true;\r\n    this.setState({\r\n      completed,\r\n    });\r\n    this.handleNext();\r\n  };\r\n  handleReset = () => {\r\n    this.setState({\r\n      activeStep: 0,\r\n      completed: {},\r\n    });\r\n  };\r\n\r\n  completedSteps() {\r\n    return Object.keys(this.state.completed).length;\r\n  }\r\n\r\n  isLastStep() {\r\n    return this.state.activeStep === this.totalSteps() - 1;\r\n  }\r\n\r\n  allStepsCompleted() {\r\n    return this.completedSteps() === this.totalSteps();\r\n  }\r\n\r\n  render() {\r\n    const steps = getSteps();\r\n    const {activeStep} = this.state;\r\n\r\n    return (\r\n      <div className=\"w-100\">\r\n        <Stepper nonLinear activeStep={activeStep} className=\"horizontal-stepper-linear\">\r\n          {steps.map((label, index) => {\r\n            return (\r\n              <Step key={label} className={`horizontal-stepper ${index === activeStep ? 'active' : ''}`}>\r\n                <StepButton className=\"stepperbutton\"\r\n                            onClick={this.handleStep(index)}\r\n                            completed={this.state.completed[index]}\r\n                >\r\n                  {label}\r\n                </StepButton>\r\n              </Step>\r\n            );\r\n          })}\r\n        </Stepper>\r\n        <div>\r\n          {this.allStepsCompleted() ? (\r\n            <div>\r\n              <Typography className=\"my-2\">\r\n                All steps completed - you&quot;re finished\r\n              </Typography>\r\n              <Button className=\"jr-btn\" onClick={this.handleReset}>Reset</Button>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <Typography className=\"my-2\">{getStepContent(activeStep)}</Typography>\r\n              <div>\r\n                <Button\r\n                  disabled={activeStep === 0}\r\n                  onClick={this.handleBack}\r\n                  className=\"jr-btn\"\r\n                >\r\n                  Back\r\n                </Button>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleNext} className=\"jr-btn\">\r\n                  Next\r\n                </Button>\r\n                {activeStep !== steps.length &&\r\n                (this.state.completed[this.state.activeStep] ? (\r\n                  <Typography variant=\"caption\" className=\"my-2\">\r\n                    Step {activeStep + 1} already completed\r\n                  </Typography>\r\n                ) : (\r\n                  <Button className=\"jr-btn\" variant=\"contained\" color=\"primary\"\r\n                          onClick={this.handleComplete}>\r\n                    {this.completedSteps() === this.totalSteps() - 1 ? 'Finish' : 'Complete Step'}\r\n                  </Button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HorizontalNonLinearStepper;"]},"metadata":{},"sourceType":"module"}