{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\src\\\\app\\\\routes\\\\components\\\\routes\\\\autoComplete\\\\downshift\\\\IntegrationDownshift.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Downshift from 'downshift';\nvar suggestions = [{\n  label: 'Afghanistan'\n}, {\n  label: 'Aland Islands'\n}, {\n  label: 'Albania'\n}, {\n  label: 'Algeria'\n}, {\n  label: 'American Samoa'\n}, {\n  label: 'Andorra'\n}, {\n  label: 'Angola'\n}, {\n  label: 'Anguilla'\n}, {\n  label: 'Antarctica'\n}, {\n  label: 'Antigua and Barbuda'\n}, {\n  label: 'Argentina'\n}, {\n  label: 'Armenia'\n}, {\n  label: 'Aruba'\n}, {\n  label: 'Australia'\n}, {\n  label: 'Austria'\n}, {\n  label: 'Azerbaijan'\n}, {\n  label: 'Bahamas'\n}, {\n  label: 'Bahrain'\n}, {\n  label: 'Bangladesh'\n}, {\n  label: 'Barbados'\n}, {\n  label: 'Belarus'\n}, {\n  label: 'Belgium'\n}, {\n  label: 'Belize'\n}, {\n  label: 'Benin'\n}, {\n  label: 'Bermuda'\n}, {\n  label: 'Bhutan'\n}, {\n  label: 'Bolivia, Plurinational State of'\n}, {\n  label: 'Bonaire, Sint Eustatius and Saba'\n}, {\n  label: 'Bosnia and Herzegovina'\n}, {\n  label: 'Botswana'\n}, {\n  label: 'Bouvet Island'\n}, {\n  label: 'Brazil'\n}, {\n  label: 'British Indian Ocean Territory'\n}, {\n  label: 'Brunei Darussalam'\n}];\n\nfunction renderInput(inputProps) {\n  var InputProps = inputProps.InputProps,\n      classes = inputProps.classes,\n      ref = inputProps.ref,\n      other = _objectWithoutProperties(inputProps, [\"InputProps\", \"classes\", \"ref\"]);\n\n  return React.createElement(TextField, Object.assign({}, other, {\n    inputref: ref,\n    InputProps: _objectSpread({\n      classes: {\n        input: classes.input\n      }\n    }, InputProps),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }));\n}\n\nfunction renderSuggestion(params) {\n  var suggestion = params.suggestion,\n      index = params.index,\n      itemProps = params.itemProps,\n      highlightedIndex = params.highlightedIndex,\n      selectedItem = params.selectedItem;\n  var isHighlighted = highlightedIndex === index;\n  var isSelected = selectedItem === suggestion.label;\n  return React.createElement(MenuItem, Object.assign({}, itemProps, {\n    key: suggestion.label,\n    selected: isHighlighted,\n    component: \"div\",\n    style: {\n      fontWeight: isSelected ? 500 : 400\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), suggestion.label);\n}\n\nfunction getSuggestions(inputValue) {\n  var count = 0;\n  return suggestions.filter(function (suggestion) {\n    var keep = (!inputValue || suggestion.label.toLowerCase().includes(inputValue.toLowerCase())) && count < 5;\n\n    if (keep) {\n      count += 1;\n    }\n\n    return keep;\n  });\n}\n\nvar styles = {\n  container: {\n    flexGrow: 1,\n    height: 100,\n    width: '90%'\n  }\n};\n\nfunction IntegrationDownshift(props) {\n  var classes = props.classes;\n  return React.createElement(Downshift, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, function (_ref) {\n    var getInputProps = _ref.getInputProps,\n        getItemProps = _ref.getItemProps,\n        isOpen = _ref.isOpen,\n        inputValue = _ref.inputValue,\n        selectedItem = _ref.selectedItem,\n        highlightedIndex = _ref.highlightedIndex;\n    return React.createElement(\"div\", {\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, renderInput({\n      fullWidth: true,\n      classes: classes,\n      InputProps: getInputProps({\n        placeholder: 'Search a country (start with a)',\n        id: 'integration-downshift'\n      })\n    }), isOpen ? React.createElement(Paper, {\n      square: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, getSuggestions(inputValue).map(function (suggestion, index) {\n      return renderSuggestion({\n        suggestion: suggestion,\n        index: index,\n        itemProps: getItemProps({\n          item: suggestion.label\n        }),\n        highlightedIndex: highlightedIndex,\n        selectedItem: selectedItem\n      });\n    })) : null);\n  });\n}\n\nIntegrationDownshift.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(IntegrationDownshift);","map":{"version":3,"sources":["C:\\Users\\Noelia\\Desktop\\Plantillas\\source\\src\\app\\routes\\components\\routes\\autoComplete\\downshift\\IntegrationDownshift.js"],"names":["React","PropTypes","withStyles","TextField","Paper","MenuItem","Downshift","suggestions","label","renderInput","inputProps","InputProps","classes","ref","other","input","renderSuggestion","params","suggestion","index","itemProps","highlightedIndex","selectedItem","isHighlighted","isSelected","fontWeight","getSuggestions","inputValue","count","filter","keep","toLowerCase","includes","styles","container","flexGrow","height","width","IntegrationDownshift","props","getInputProps","getItemProps","isOpen","fullWidth","placeholder","id","map","item","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Downshift from 'downshift';\r\n\r\nconst suggestions = [\r\n  {label: 'Afghanistan'},\r\n  {label: 'Aland Islands'},\r\n  {label: 'Albania'},\r\n  {label: 'Algeria'},\r\n  {label: 'American Samoa'},\r\n  {label: 'Andorra'},\r\n  {label: 'Angola'},\r\n  {label: 'Anguilla'},\r\n  {label: 'Antarctica'},\r\n  {label: 'Antigua and Barbuda'},\r\n  {label: 'Argentina'},\r\n  {label: 'Armenia'},\r\n  {label: 'Aruba'},\r\n  {label: 'Australia'},\r\n  {label: 'Austria'},\r\n  {label: 'Azerbaijan'},\r\n  {label: 'Bahamas'},\r\n  {label: 'Bahrain'},\r\n  {label: 'Bangladesh'},\r\n  {label: 'Barbados'},\r\n  {label: 'Belarus'},\r\n  {label: 'Belgium'},\r\n  {label: 'Belize'},\r\n  {label: 'Benin'},\r\n  {label: 'Bermuda'},\r\n  {label: 'Bhutan'},\r\n  {label: 'Bolivia, Plurinational State of'},\r\n  {label: 'Bonaire, Sint Eustatius and Saba'},\r\n  {label: 'Bosnia and Herzegovina'},\r\n  {label: 'Botswana'},\r\n  {label: 'Bouvet Island'},\r\n  {label: 'Brazil'},\r\n  {label: 'British Indian Ocean Territory'},\r\n  {label: 'Brunei Darussalam'},\r\n];\r\n\r\nfunction renderInput(inputProps) {\r\n  const {InputProps, classes, ref, ...other} = inputProps;\r\n\r\n  return (\r\n    <TextField\r\n      {...other}\r\n      inputref={ref}\r\n      InputProps={{\r\n        classes: {\r\n          input: classes.input,\r\n        },\r\n        ...InputProps,\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nfunction renderSuggestion(params) {\r\n  const {suggestion, index, itemProps, highlightedIndex, selectedItem} = params;\r\n  const isHighlighted = highlightedIndex === index;\r\n  const isSelected = selectedItem === suggestion.label;\r\n\r\n  return (\r\n    <MenuItem\r\n      {...itemProps}\r\n      key={suggestion.label}\r\n      selected={isHighlighted}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: isSelected ? 500 : 400,\r\n      }}\r\n    >\r\n      {suggestion.label}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nfunction getSuggestions(inputValue) {\r\n  let count = 0;\r\n\r\n  return suggestions.filter(suggestion => {\r\n    const keep =\r\n      (!inputValue || suggestion.label.toLowerCase().includes(inputValue.toLowerCase())) &&\r\n      count < 5;\r\n\r\n    if (keep) {\r\n      count += 1;\r\n    }\r\n\r\n    return keep;\r\n  });\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    flexGrow: 1,\r\n    height: 100,\r\n    width: '90%',\r\n  },\r\n};\r\n\r\nfunction IntegrationDownshift(props) {\r\n  const {classes} = props;\r\n\r\n  return (\r\n    <Downshift>\r\n      {({getInputProps, getItemProps, isOpen, inputValue, selectedItem, highlightedIndex}) => (\r\n        <div className={classes.container}>\r\n          {renderInput({\r\n            fullWidth: true,\r\n            classes,\r\n            InputProps: getInputProps({\r\n              placeholder: 'Search a country (start with a)',\r\n              id: 'integration-downshift',\r\n            }),\r\n          })}\r\n          {isOpen ? (\r\n            <Paper square>\r\n              {getSuggestions(inputValue).map((suggestion, index) =>\r\n                renderSuggestion({\r\n                  suggestion,\r\n                  index,\r\n                  itemProps: getItemProps({item: suggestion.label}),\r\n                  highlightedIndex,\r\n                  selectedItem,\r\n                }),\r\n              )}\r\n            </Paper>\r\n          ) : null}\r\n        </div>\r\n      )}\r\n    </Downshift>\r\n  );\r\n}\r\n\r\nIntegrationDownshift.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(IntegrationDownshift);"]},"metadata":{},"sourceType":"module"}