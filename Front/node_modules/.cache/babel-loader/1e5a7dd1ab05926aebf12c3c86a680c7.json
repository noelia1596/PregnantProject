{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport arrayMove from 'array-move';\nimport todoConversation from 'app/routes/todo/data/todoConversation';\nimport toDos from 'app/routes/todo/data/todo';\nimport { FETCH_ALL_TODO_CONVERSATION_SUCCESS, FETCH_ALL_TODO_SUCCESS, GET_ALL_TODO, GET_IMPORTANT_TODO, GET_MARK_AS_START, GET_NAV_FILTERS, GET_NAV_LABELS, GET_STARRED_TODO, GET_TODO_CONVERSATION, GET_UNIMPORTANT_TODO, GET_UNSELECTED_ALL_TODO, GET_UNSTARRED_TODO, HANDLE_REQUEST_CLOSE, ON_DELETE_TODO, ON_HIDE_LOADER, ON_LABEL_MENU_ITEM_SELECT, ON_LABEL_SELECT, ON_LABEL_UPDATE, ON_OPTION_MENU_ITEM_SELECT, ON_OPTION_MENU_SELECT, ON_SORTEND, ON_TODO_ADD, ON_TODO_CHECKED, ON_TODO_SELECT, ON_TODO_UPDATE, ON_TOGGLE_DRAWER, SEARCH_TODO, SELECT_ALL_TODO, SET_CURRENT_TODO_NULL, SHOW_MESSAGE, SHOW_TODOS, UPDATE_SEARCH } from 'constants/ActionTypes';\nvar INIT_STATE = {\n  searchTodo: '',\n  alertMessage: '',\n  loader: true,\n  showMessage: false,\n  optionName: 'None',\n  drawerState: false,\n  // allToDos: [],\n  allToDos: toDos,\n  currentTodo: null,\n  user: {\n    name: 'Robert Johnson',\n    email: 'robert.johnson@example.com',\n    avatar: 'https://via.placeholder.com/150x150'\n  },\n  selectedToDos: 0,\n  labelMenuState: false,\n  optionMenuState: false,\n  // toDos: [],\n  toDos: toDos,\n  filter: -1,\n  // todoConversation: [],\n  todoConversation: todoConversation,\n  conversation: null\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ON_SORTEND:\n      {\n        return _objectSpread({}, state, {\n          toDos: arrayMove(state.toDos, action.payload.oldIndex, action.payload.newIndex)\n        });\n      }\n\n    case ON_LABEL_SELECT:\n      {\n        return _objectSpread({}, state, {\n          labelMenuState: !state.labelMenuState\n        });\n      }\n\n    case ON_OPTION_MENU_SELECT:\n      {\n        return _objectSpread({}, state, {\n          optionMenuState: !state.optionMenuState\n        });\n      }\n\n    case ON_OPTION_MENU_ITEM_SELECT:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case SELECT_ALL_TODO:\n      {\n        var _toDos = state.allToDos.map(function (todo) {\n          return todo ? _objectSpread({}, todo, {\n            selected: true\n          }) : todo;\n        });\n\n        return _objectSpread({}, state, {\n          selectedToDos: _toDos.length,\n          allToDos: _toDos,\n          optionName: 'All',\n          toDos: _toDos\n        });\n      }\n\n    case GET_ALL_TODO:\n      {\n        return _objectSpread({}, state, {\n          currentTodo: null,\n          toDos: state.allToDos\n        });\n      }\n\n    case GET_UNSELECTED_ALL_TODO:\n      {\n        var _toDos2 = state.allToDos.map(function (todo) {\n          return todo ? _objectSpread({}, todo, {\n            selected: false\n          }) : todo;\n        });\n\n        return _objectSpread({}, state, {\n          selectedToDos: 0,\n          allToDos: _toDos2,\n          optionName: 'None',\n          toDos: _toDos2\n        });\n      }\n\n    case GET_STARRED_TODO:\n      {\n        var selectedToDos = 0;\n\n        var _toDos3 = state.allToDos.map(function (todo) {\n          if (todo.starred) {\n            selectedToDos++;\n            return _objectSpread({}, todo, {\n              selected: true\n            });\n          }\n\n          return _objectSpread({}, todo, {\n            selected: false\n          });\n        });\n\n        return _objectSpread({}, state, {\n          selectedToDos: selectedToDos,\n          allToDos: _toDos3,\n          optionName: 'Stared',\n          toDos: _toDos3.filter(function (todo) {\n            return !todo.deleted;\n          })\n        });\n      }\n\n    case GET_UNSTARRED_TODO:\n      {\n        var _selectedToDos = 0;\n\n        var _toDos4 = state.allToDos.map(function (todo) {\n          if (!todo.starred) {\n            _selectedToDos++;\n            return _objectSpread({}, todo, {\n              selected: true\n            });\n          }\n\n          return _objectSpread({}, todo, {\n            selected: false\n          });\n        });\n\n        return _objectSpread({}, state, {\n          selectedToDos: _selectedToDos,\n          allToDos: _toDos4,\n          optionName: 'UnStarred',\n          toDos: _toDos4.filter(function (todo) {\n            return !todo.deleted;\n          })\n        });\n      }\n\n    case GET_IMPORTANT_TODO:\n      {\n        var _selectedToDos2 = 0;\n\n        var _toDos5 = state.allToDos.map(function (todo) {\n          if (todo.important) {\n            _selectedToDos2++;\n            return _objectSpread({}, todo, {\n              selected: true\n            });\n          }\n\n          return _objectSpread({}, todo, {\n            selected: false\n          });\n        });\n\n        return _objectSpread({}, state, {\n          selectedToDos: _selectedToDos2,\n          allToDos: _toDos5,\n          optionName: 'Important',\n          toDos: _toDos5.filter(function (todo) {\n            return !todo.deleted;\n          })\n        });\n      }\n\n    case GET_MARK_AS_START:\n      {\n        var _toDos6 = state.allToDos.map(function (todo) {\n          if (todo.id === action.payload.id) {\n            return action.payload;\n          } else {\n            return todo;\n          }\n        });\n\n        return _objectSpread({}, state, {\n          alertMessage: 'ToDo Updated Successfully',\n          showMessage: true,\n          allToDos: _toDos6,\n          toDos: _toDos6\n        });\n      }\n\n    case GET_UNIMPORTANT_TODO:\n      {\n        var _selectedToDos3 = 0;\n\n        var _toDos7 = state.allToDos.map(function (todo) {\n          if (!todo.important) {\n            _selectedToDos3++;\n            return _objectSpread({}, todo, {\n              selected: true\n            });\n          }\n\n          return _objectSpread({}, todo, {\n            selected: false\n          });\n        });\n\n        return _objectSpread({}, state, {\n          selectedToDos: _selectedToDos3,\n          allToDos: _toDos7,\n          optionName: 'Unimportant',\n          toDos: _toDos7.filter(function (todo) {\n            return !todo.deleted;\n          })\n        });\n      }\n\n    case ON_LABEL_MENU_ITEM_SELECT:\n      {\n        var _toDos8 = state.allToDos.map(function (todo) {\n          if (todo.selected) {\n            if (todo.labels.includes(action.payload.id)) {\n              todo.labels.splice(todo.labels.indexOf(action.payload.id), 1);\n              return _objectSpread({}, todo, {\n                labels: todo.labels\n              });\n            } else {\n              return _objectSpread({}, todo, {\n                labels: todo.labels.concat(action.payload.id)\n              });\n            }\n          } else {\n            return todo;\n          }\n        });\n\n        return _objectSpread({}, state, {\n          alertMessage: 'Label Updated Successfully',\n          showMessage: true,\n          allToDos: _toDos8,\n          toDos: _toDos8\n        });\n      }\n\n    case ON_LABEL_UPDATE:\n      {\n        if (action.payload.data.labels.includes(action.payload.label.id)) {\n          action.payload.data.labels.splice(action.payload.data.labels.indexOf(action.payload.label.id), 1);\n        } else {\n          action.payload.data.labels = action.payload.data.labels.concat(action.payload.label.id);\n        }\n\n        var _toDos9 = state.allToDos.map(function (todo) {\n          if (todo.id === action.payload.data.id) {\n            return action.payload.data;\n          } else {\n            return todo;\n          }\n        });\n\n        return _objectSpread({}, state, {\n          alertMessage: 'Label Updated Successfully',\n          showMessage: true,\n          currentTodo: action.payload,\n          allToDos: _toDos9,\n          toDos: _toDos9\n        });\n      }\n\n    case ON_TODO_UPDATE:\n      {\n        var _toDos10 = state.allToDos.map(function (todo) {\n          if (todo.id === action.payload.id) {\n            return action.payload;\n          } else {\n            return todo;\n          }\n        });\n\n        return _objectSpread({}, state, {\n          alertMessage: 'ToDo Updated Successfully',\n          showMessage: true,\n          currentTodo: action.payload,\n          allToDos: _toDos10,\n          toDos: _toDos10\n        });\n      }\n\n    case ON_DELETE_TODO:\n      {\n        var _selectedToDos4 = 0;\n\n        var _toDos11 = state.allToDos.map(function (todo) {\n          if (todo.selected) {\n            _selectedToDos4++;\n          }\n\n          if (action.payload.id === todo.id) {\n            if (todo.selected) {\n              _selectedToDos4--;\n            }\n\n            return _objectSpread({}, todo, {\n              deleted: true\n            });\n          } else {\n            return todo;\n          }\n        });\n\n        return _objectSpread({}, state, {\n          alertMessage: 'ToDo Deleted Successfully',\n          showMessage: true,\n          allToDos: _toDos11,\n          currentTodo: null,\n          selectedToDos: _selectedToDos4,\n          toDos: _toDos11.filter(function (todo) {\n            return !todo.deleted;\n          })\n        });\n      }\n\n    case GET_NAV_LABELS:\n      {\n        var filterMails = state.allToDos.filter(function (todo) {\n          return todo.labels.includes(action.payload.id);\n        });\n        return _objectSpread({}, state, {\n          loader: true,\n          currentTodo: null,\n          toDos: filterMails\n        });\n      }\n\n    case GET_NAV_FILTERS:\n      {\n        var _filterMails = state.allToDos.filter(function (todo) {\n          if (action.payload.id === 0 && todo.starred) {\n            return todo;\n          } else if (action.payload.id === 1 && todo.important) {\n            return todo;\n          } else if (action.payload.id === 2 && todo.important) {\n            return todo;\n          } else if (action.payload.id === 3 && todo.important) {\n            return todo;\n          } else if (action.payload.id === 4 && todo.completed) {\n            return todo;\n          } else if (action.payload.id === 5 && todo.deleted) {\n            return todo;\n          } else return todo;\n        });\n\n        return _objectSpread({}, state, {\n          loader: true,\n          currentTodo: null,\n          filter: action.payload.id,\n          toDos: _filterMails\n        });\n      }\n\n    case SEARCH_TODO:\n      {\n        if (action.payload === '') {\n          return _objectSpread({}, state, {\n            toDos: state.allToDos.filter(function (todo) {\n              return !todo.deleted;\n            })\n          });\n        } else {\n          var searchToDos = state.allToDos.filter(function (todo) {\n            return !todo.deleted && todo.title.toLowerCase().indexOf(action.payload.toLowerCase()) > -1;\n          });\n          return _objectSpread({}, state, {\n            toDos: searchToDos\n          });\n        }\n      }\n\n    case SHOW_TODOS:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case GET_TODO_CONVERSATION:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ON_TODO_CHECKED:\n      {\n        action.payload.selected = !action.payload.selected;\n        var _selectedToDos5 = 0;\n\n        var _toDos12 = state.toDos.map(function (todo) {\n          if (todo.selected) {\n            _selectedToDos5++;\n          }\n\n          if (todo.id === action.payload.id) {\n            if (todo.selected) {\n              _selectedToDos5++;\n            }\n\n            return action.payload;\n          } else {\n            return todo;\n          }\n        });\n\n        return _objectSpread({}, state, {\n          selectedToDos: _selectedToDos5,\n          toDos: _toDos12\n        });\n      }\n\n    case ON_TODO_ADD:\n      {\n        return _objectSpread({}, state, {\n          toDos: state.allToDos.concat(action.payload),\n          allToDos: state.allToDos.concat(action.payload)\n        });\n      }\n\n    case ON_TODO_SELECT:\n      {\n        var conversationList = state.todoConversation.find(function (conversation) {\n          return conversation.id === action.payload.id;\n        });\n\n        if (conversationList) {\n          conversationList = conversationList.conversationData;\n        } else {\n          conversationList = [];\n        }\n\n        return _objectSpread({}, state, {\n          currentTodo: action.payload,\n          loader: true,\n          conversation: conversationList\n        });\n      }\n\n    case SET_CURRENT_TODO_NULL:\n      {\n        return _objectSpread({}, state, {\n          currentTodo: null\n        });\n      }\n\n    case UPDATE_SEARCH:\n      {\n        return _objectSpread({}, state, {\n          searchTodo: action.payload\n        });\n      }\n\n    case ON_TOGGLE_DRAWER:\n      {\n        return _objectSpread({}, state, {\n          drawerState: !state.drawerState\n        });\n      }\n\n    case HANDLE_REQUEST_CLOSE:\n      {\n        return _objectSpread({}, state, {\n          showMessage: false,\n          addTodo: false,\n          labelMenuState: false,\n          optionMenuState: false\n        });\n      }\n\n    case ON_HIDE_LOADER:\n      {\n        return _objectSpread({}, state, {\n          loader: false\n        });\n      }\n\n    case FETCH_ALL_TODO_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          allToDos: action.payload,\n          toDos: action.payload,\n          loader: false\n        });\n      }\n\n    case FETCH_ALL_TODO_CONVERSATION_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          todoConversation: action.payload\n        });\n      }\n\n    case SHOW_MESSAGE:\n      {\n        return _objectSpread({}, state, {\n          alertMessage: action.payload,\n          showMessage: true,\n          loader: false\n        });\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:\\Users\\Noelia\\Desktop\\jumbo-react-3.0.1\\source\\src\\reducers\\ToDo.js"],"names":["arrayMove","todoConversation","toDos","FETCH_ALL_TODO_CONVERSATION_SUCCESS","FETCH_ALL_TODO_SUCCESS","GET_ALL_TODO","GET_IMPORTANT_TODO","GET_MARK_AS_START","GET_NAV_FILTERS","GET_NAV_LABELS","GET_STARRED_TODO","GET_TODO_CONVERSATION","GET_UNIMPORTANT_TODO","GET_UNSELECTED_ALL_TODO","GET_UNSTARRED_TODO","HANDLE_REQUEST_CLOSE","ON_DELETE_TODO","ON_HIDE_LOADER","ON_LABEL_MENU_ITEM_SELECT","ON_LABEL_SELECT","ON_LABEL_UPDATE","ON_OPTION_MENU_ITEM_SELECT","ON_OPTION_MENU_SELECT","ON_SORTEND","ON_TODO_ADD","ON_TODO_CHECKED","ON_TODO_SELECT","ON_TODO_UPDATE","ON_TOGGLE_DRAWER","SEARCH_TODO","SELECT_ALL_TODO","SET_CURRENT_TODO_NULL","SHOW_MESSAGE","SHOW_TODOS","UPDATE_SEARCH","INIT_STATE","searchTodo","alertMessage","loader","showMessage","optionName","drawerState","allToDos","currentTodo","user","name","email","avatar","selectedToDos","labelMenuState","optionMenuState","filter","conversation","state","action","type","payload","oldIndex","newIndex","map","todo","selected","length","starred","deleted","important","id","labels","includes","splice","indexOf","concat","data","label","filterMails","completed","searchToDos","title","toLowerCase","conversationList","find","conversationData","addTodo"],"mappings":"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","sourcesContent":["import arrayMove from 'array-move';\r\nimport todoConversation from 'app/routes/todo/data/todoConversation';\r\nimport toDos from 'app/routes/todo/data/todo';\r\nimport {\r\n  FETCH_ALL_TODO_CONVERSATION_SUCCESS,\r\n  FETCH_ALL_TODO_SUCCESS,\r\n  GET_ALL_TODO,\r\n  GET_IMPORTANT_TODO,\r\n  GET_MARK_AS_START,\r\n  GET_NAV_FILTERS,\r\n  GET_NAV_LABELS,\r\n  GET_STARRED_TODO,\r\n  GET_TODO_CONVERSATION,\r\n  GET_UNIMPORTANT_TODO,\r\n  GET_UNSELECTED_ALL_TODO,\r\n  GET_UNSTARRED_TODO,\r\n  HANDLE_REQUEST_CLOSE,\r\n  ON_DELETE_TODO,\r\n  ON_HIDE_LOADER,\r\n  ON_LABEL_MENU_ITEM_SELECT,\r\n  ON_LABEL_SELECT,\r\n  ON_LABEL_UPDATE,\r\n  ON_OPTION_MENU_ITEM_SELECT,\r\n  ON_OPTION_MENU_SELECT,\r\n  ON_SORTEND,\r\n  ON_TODO_ADD,\r\n  ON_TODO_CHECKED,\r\n  ON_TODO_SELECT,\r\n  ON_TODO_UPDATE,\r\n  ON_TOGGLE_DRAWER,\r\n  SEARCH_TODO,\r\n  SELECT_ALL_TODO,\r\n  SET_CURRENT_TODO_NULL,\r\n  SHOW_MESSAGE,\r\n  SHOW_TODOS,\r\n  UPDATE_SEARCH\r\n} from 'constants/ActionTypes'\r\n\r\nconst INIT_STATE = {\r\n  searchTodo: '',\r\n  alertMessage: '',\r\n  loader: true,\r\n  showMessage: false,\r\n  optionName: 'None',\r\n  drawerState: false,\r\n  // allToDos: [],\r\n  allToDos: toDos,\r\n  currentTodo: null,\r\n  user: {\r\n    name: 'Robert Johnson',\r\n    email: 'robert.johnson@example.com',\r\n    avatar:  'https://via.placeholder.com/150x150'\r\n  },\r\n  selectedToDos: 0,\r\n  labelMenuState: false,\r\n  optionMenuState: false,\r\n  // toDos: [],\r\n  toDos: toDos,\r\n  filter: -1,\r\n  // todoConversation: [],\r\n  todoConversation,\r\n  conversation: null\r\n};\r\n\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case ON_SORTEND: {\r\n      return {\r\n        ...state, toDos: arrayMove(state.toDos, action.payload.oldIndex, action.payload.newIndex)\r\n      }\r\n    }\r\n    case ON_LABEL_SELECT: {\r\n      return {\r\n        ...state,\r\n        labelMenuState: !state.labelMenuState\r\n      }\r\n    }\r\n    case ON_OPTION_MENU_SELECT: {\r\n      return {\r\n        ...state,\r\n        optionMenuState: !state.optionMenuState\r\n      }\r\n    }\r\n    case ON_OPTION_MENU_ITEM_SELECT: {\r\n      return {...state}\r\n    }\r\n    case SELECT_ALL_TODO: {\r\n      let toDos = state.allToDos.map((todo) => todo ? {\r\n        ...todo,\r\n        selected: true\r\n      } : todo);\r\n\r\n      return {\r\n        ...state,\r\n        selectedToDos: toDos.length,\r\n        allToDos: toDos,\r\n        optionName: 'All',\r\n        toDos: toDos\r\n      }\r\n    }\r\n    case GET_ALL_TODO: {\r\n      return {\r\n        ...state,\r\n        currentTodo: null,\r\n        toDos: state.allToDos\r\n      }\r\n    }\r\n    case GET_UNSELECTED_ALL_TODO: {\r\n\r\n      let toDos = state.allToDos.map((todo) => todo ? {\r\n        ...todo,\r\n        selected: false\r\n      } : todo);\r\n      return {\r\n        ...state,\r\n        selectedToDos: 0,\r\n        allToDos: toDos,\r\n        optionName: 'None',\r\n        toDos: toDos\r\n      }\r\n    }\r\n    case GET_STARRED_TODO: {\r\n      let selectedToDos = 0;\r\n      let toDos = state.allToDos.map((todo) => {\r\n        if (todo.starred) {\r\n          selectedToDos++;\r\n          return {...todo, selected: true};\r\n        }\r\n        return {...todo, selected: false}\r\n      });\r\n      return {\r\n        ...state,\r\n        selectedToDos: selectedToDos,\r\n        allToDos: toDos,\r\n        optionName: 'Stared',\r\n        toDos: toDos.filter(todo => !todo.deleted)\r\n      }\r\n    }\r\n    case GET_UNSTARRED_TODO: {\r\n      let selectedToDos = 0;\r\n      let toDos = state.allToDos.map((todo) => {\r\n        if (!todo.starred) {\r\n          selectedToDos++;\r\n          return {...todo, selected: true};\r\n        }\r\n        return {...todo, selected: false}\r\n      });\r\n      return {\r\n        ...state,\r\n        selectedToDos: selectedToDos,\r\n        allToDos: toDos,\r\n        optionName: 'UnStarred',\r\n        toDos: toDos.filter(todo => !todo.deleted)\r\n      }\r\n    }\r\n    case GET_IMPORTANT_TODO: {\r\n      let selectedToDos = 0;\r\n      let toDos = state.allToDos.map((todo) => {\r\n        if (todo.important) {\r\n          selectedToDos++;\r\n          return {...todo, selected: true};\r\n        }\r\n        return {...todo, selected: false}\r\n      });\r\n      return {\r\n        ...state,\r\n        selectedToDos: selectedToDos,\r\n        allToDos: toDos,\r\n        optionName: 'Important',\r\n        toDos: toDos.filter(todo => !todo.deleted)\r\n      }\r\n    }\r\n\r\n    case GET_MARK_AS_START: {\r\n      const toDos = state.allToDos.map(todo => {\r\n        if (todo.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return todo;\r\n        }\r\n      });\r\n      return {\r\n        ...state,\r\n        alertMessage: 'ToDo Updated Successfully',\r\n        showMessage: true,\r\n        allToDos: toDos,\r\n        toDos: toDos,\r\n      }\r\n    }\r\n    case GET_UNIMPORTANT_TODO: {\r\n      let selectedToDos = 0;\r\n      let toDos = state.allToDos.map((todo) => {\r\n        if (!todo.important) {\r\n          selectedToDos++;\r\n          return {...todo, selected: true};\r\n        }\r\n        return {...todo, selected: false}\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        selectedToDos: selectedToDos,\r\n        allToDos: toDos,\r\n        optionName: 'Unimportant',\r\n        toDos: toDos.filter(todo => !todo.deleted)\r\n      }\r\n    }\r\n    case ON_LABEL_MENU_ITEM_SELECT: {\r\n      const toDos = state.allToDos.map(todo => {\r\n          if (todo.selected) {\r\n            if (todo.labels.includes(action.payload.id)) {\r\n              todo.labels.splice(todo.labels.indexOf(action.payload.id), 1);\r\n              return {...todo, labels: todo.labels};\r\n            } else {\r\n              return {...todo, labels: todo.labels.concat(action.payload.id)};\r\n            }\r\n          } else {\r\n            return todo;\r\n          }\r\n        }\r\n      );\r\n      return {\r\n        ...state,\r\n        alertMessage: 'Label Updated Successfully',\r\n        showMessage: true,\r\n        allToDos: toDos,\r\n        toDos: toDos\r\n      }\r\n    }\r\n    case ON_LABEL_UPDATE: {\r\n      if (action.payload.data.labels.includes(action.payload.label.id)) {\r\n        action.payload.data.labels.splice(action.payload.data.labels.indexOf(action.payload.label.id), 1);\r\n      } else {\r\n        action.payload.data.labels = action.payload.data.labels.concat(action.payload.label.id);\r\n      }\r\n      const toDos = state.allToDos.map(todo => {\r\n          if (todo.id === action.payload.data.id) {\r\n            return action.payload.data;\r\n          } else {\r\n            return todo;\r\n          }\r\n        }\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        alertMessage: 'Label Updated Successfully',\r\n        showMessage: true,\r\n        currentTodo: action.payload,\r\n        allToDos: toDos,\r\n        toDos: toDos,\r\n      }\r\n    }\r\n    case ON_TODO_UPDATE: {\r\n      const toDos = state.allToDos.map(todo => {\r\n        if (todo.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return todo;\r\n        }\r\n      });\r\n      return {\r\n        ...state,\r\n        alertMessage: 'ToDo Updated Successfully',\r\n        showMessage: true,\r\n        currentTodo: action.payload,\r\n        allToDos: toDos,\r\n        toDos: toDos,\r\n      }\r\n    }\r\n    case ON_DELETE_TODO: {\r\n      let selectedToDos = 0;\r\n      const toDos = state.allToDos.map(todo => {\r\n          if (todo.selected) {\r\n            selectedToDos++\r\n          }\r\n          if (action.payload.id === todo.id) {\r\n            if (todo.selected) {\r\n              selectedToDos--\r\n            }\r\n            return {...todo, deleted: true};\r\n          } else {\r\n            return todo;\r\n          }\r\n        }\r\n      );\r\n      return {\r\n        ...state,\r\n        alertMessage: 'ToDo Deleted Successfully',\r\n        showMessage: true,\r\n        allToDos: toDos,\r\n        currentTodo: null,\r\n        selectedToDos: selectedToDos,\r\n        toDos: toDos.filter((todo) => !todo.deleted)\r\n      }\r\n    }\r\n\r\n    case GET_NAV_LABELS: {\r\n      const filterMails = state.allToDos.filter(todo => todo.labels.includes(action.payload.id));\r\n      return {\r\n        ...state,\r\n        loader: true,\r\n        currentTodo: null,\r\n        toDos: filterMails\r\n      }\r\n    }\r\n    case GET_NAV_FILTERS: {\r\n      const filterMails = state.allToDos.filter(todo => {\r\n        if (action.payload.id === 0 && todo.starred) {\r\n          return todo\r\n        } else if (action.payload.id === 1 && todo.important) {\r\n          return todo\r\n        } else if (action.payload.id === 2 && todo.important) {\r\n          return todo\r\n        } else if (action.payload.id === 3 && todo.important) {\r\n          return todo\r\n        } else if (action.payload.id === 4 && todo.completed) {\r\n          return todo\r\n        } else if (action.payload.id === 5 && todo.deleted) {\r\n          return todo\r\n        }else return todo;\r\n      });\r\n      return {\r\n        ...state,\r\n        loader: true,\r\n        currentTodo: null,\r\n        filter: action.payload.id,\r\n        toDos: filterMails\r\n      }\r\n    }\r\n\r\n    case SEARCH_TODO: {\r\n      if (action.payload === '') {\r\n        return {...state, toDos: state.allToDos.filter((todo) => !todo.deleted)};\r\n      } else {\r\n        const searchToDos = state.allToDos.filter((todo) =>\r\n          !todo.deleted && todo.title.toLowerCase().indexOf(action.payload.toLowerCase()) > -1);\r\n        return {...state, toDos: searchToDos}\r\n      }\r\n    }\r\n    case SHOW_TODOS: {\r\n      return {...state}\r\n    }\r\n    case GET_TODO_CONVERSATION: {\r\n      return {...state}\r\n    }\r\n    case ON_TODO_CHECKED: {\r\n      action.payload.selected = !action.payload.selected;\r\n      let selectedToDos = 0;\r\n      const toDos = state.toDos.map(todo => {\r\n          if (todo.selected) {\r\n            selectedToDos++;\r\n          }\r\n          if (todo.id === action.payload.id) {\r\n            if (todo.selected) {\r\n              selectedToDos++;\r\n            }\r\n            return action.payload;\r\n          } else {\r\n            return todo;\r\n          }\r\n        }\r\n      );\r\n      return {\r\n        ...state,\r\n        selectedToDos: selectedToDos,\r\n        toDos: toDos\r\n      }\r\n    }\r\n    case ON_TODO_ADD: {\r\n      return {\r\n        ...state,\r\n        toDos: state.allToDos.concat(action.payload),\r\n        allToDos: state.allToDos.concat(action.payload)\r\n      }\r\n    }\r\n    case ON_TODO_SELECT: {\r\n      let conversationList = state.todoConversation.find((conversation) => conversation.id === action.payload.id);\r\n      if (conversationList) {\r\n        conversationList = conversationList.conversationData;\r\n      } else {\r\n        conversationList = [];\r\n      }\r\n      return {\r\n        ...state,\r\n        currentTodo: action.payload,\r\n        loader: true,\r\n        conversation: conversationList\r\n      }\r\n    }\r\n    case SET_CURRENT_TODO_NULL: {\r\n      return {...state, currentTodo: null}\r\n    }\r\n    case UPDATE_SEARCH: {\r\n      return {...state, searchTodo: action.payload}\r\n    }\r\n    case ON_TOGGLE_DRAWER: {\r\n      return {...state, drawerState: !state.drawerState}\r\n    }\r\n    case HANDLE_REQUEST_CLOSE: {\r\n      return {...state, showMessage: false, addTodo: false, labelMenuState: false, optionMenuState: false}\r\n    }\r\n    case ON_HIDE_LOADER: {\r\n      return {...state, loader: false}\r\n    }\r\n    case FETCH_ALL_TODO_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        allToDos: action.payload,\r\n        toDos: action.payload,\r\n        loader: false,\r\n      }\r\n    }\r\n    case FETCH_ALL_TODO_CONVERSATION_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        todoConversation: action.payload\r\n      }\r\n    }\r\n    case SHOW_MESSAGE: {\r\n      return {\r\n        ...state,\r\n        alertMessage: action.payload,\r\n        showMessage: true,\r\n        loader: false\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}