{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\src\\\\components\\\\dashboard\\\\default\\\\Chart.js\";\nimport React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nvar Chart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chart, _Component);\n\n  function Chart() {\n    _classCallCheck(this, Chart);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Chart).apply(this, arguments));\n  }\n\n  _createClass(Chart, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          labels = _this$props.labels,\n          label = _this$props.label,\n          borderColor = _this$props.borderColor,\n          chartdata = _this$props.chartdata,\n          pointBackgroundColor = _this$props.pointBackgroundColor,\n          height = _this$props.height,\n          pointBorderColor = _this$props.pointBorderColor,\n          shadowColor = _this$props.shadowColor;\n\n      var data = function data(canvas) {\n        var ctx = canvas.getContext(\"2d\");\n        var _stroke = ctx.stroke;\n\n        ctx.stroke = function () {\n          ctx.save();\n          ctx.shadowColor = shadowColor;\n          ctx.shadowBlur = 13;\n          ctx.shadowOffsetX = 0;\n          ctx.shadowOffsetY = 12;\n\n          _stroke.apply(this, arguments);\n\n          ctx.restore();\n        };\n\n        return {\n          labels: labels,\n          datasets: [{\n            label: label,\n            fill: false,\n            tension: 0.40,\n            fillOpacity: 0.3,\n            borderColor: borderColor,\n            borderWidth: '4',\n            pointBorderColor: pointBorderColor,\n            pointBackgroundColor: pointBackgroundColor,\n            pointBorderWidth: '3',\n            pointHoverBackgroundColor: pointBackgroundColor,\n            pointHoverBorderColor: '#4CB050',\n            pointHoverBorderWidth: '6',\n            pointHoverRadius: '8',\n            pointRadius: 3,\n            pointHitRadius: 8,\n            data: chartdata\n          }]\n        };\n      };\n\n      var options = {\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [{\n            display: true,\n            ticks: {\n              min: 0,\n              display: false\n            },\n            gridLines: {\n              display: true,\n              drawBorder: false,\n              lineWidth: 10\n            }\n          }],\n          yAxes: [{\n            display: false,\n            ticks: {\n              suggestedMin: 0,\n              beginAtZero: true\n            }\n          }]\n        }\n      };\n      return React.createElement(Line, {\n        data: data,\n        options: options,\n        height: height,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Chart;\n}(Component);\n\nexport { Chart as default };","map":{"version":3,"sources":["C:\\Users\\Noelia\\Desktop\\Plantillas\\source\\src\\components\\dashboard\\default\\Chart.js"],"names":["React","Component","Line","Chart","props","labels","label","borderColor","chartdata","pointBackgroundColor","height","pointBorderColor","shadowColor","data","canvas","ctx","getContext","_stroke","stroke","save","shadowBlur","shadowOffsetX","shadowOffsetY","apply","arguments","restore","datasets","fill","tension","fillOpacity","borderWidth","pointBorderWidth","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointHoverRadius","pointRadius","pointHitRadius","options","legend","display","scales","xAxes","ticks","min","gridLines","drawBorder","lineWidth","yAxes","suggestedMin","beginAtZero"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nexport default class Chart extends Component {\r\n  render() {\r\n    const {labels,label, borderColor, chartdata, pointBackgroundColor, height, pointBorderColor,shadowColor } = this.props;\r\n    const data = (canvas) => {\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const _stroke = ctx.stroke;\r\n      ctx.stroke = function () {\r\n        ctx.save();\r\n        ctx.shadowColor = shadowColor;\r\n        ctx.shadowBlur = 13;\r\n        ctx.shadowOffsetX = 0;\r\n        ctx.shadowOffsetY = 12;\r\n        _stroke.apply(this, arguments);\r\n        ctx.restore();\r\n      };\r\n      return {\r\n        labels: labels,\r\n        datasets: [\r\n          {\r\n            label: label,\r\n            fill: false,\r\n            tension: 0.40,\r\n            fillOpacity: 0.3,\r\n            borderColor: borderColor,\r\n            borderWidth: '4',\r\n            pointBorderColor: pointBorderColor,\r\n            pointBackgroundColor: pointBackgroundColor,\r\n            pointBorderWidth: '3',\r\n            pointHoverBackgroundColor: pointBackgroundColor,\r\n            pointHoverBorderColor: '#4CB050',\r\n            pointHoverBorderWidth: '6',\r\n            pointHoverRadius:'8',\r\n            pointRadius: 3,\r\n            pointHitRadius: 8,\r\n            data: chartdata,\r\n          }\r\n        ]\r\n      }\r\n    }\r\n\r\n    const options = {\r\n      legend: {\r\n        display: false\r\n      },\r\n      scales: {\r\n        xAxes: [{\r\n          display: true,\r\n          ticks: {\r\n            min: 0,\r\n            display: false,\r\n          },\r\n          gridLines: {\r\n            display: true,\r\n            drawBorder: false,\r\n            lineWidth:10,\r\n          }\r\n        }],\r\n\r\n        yAxes: [{\r\n          display: false,\r\n          ticks: {\r\n            suggestedMin: 0,\r\n            beginAtZero: true\r\n          }\r\n        }]\r\n      },\r\n    };\r\n    return (\r\n      <Line data={data} options={options} height={height} />\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}