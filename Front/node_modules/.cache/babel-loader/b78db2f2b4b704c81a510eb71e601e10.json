{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { FETCH_ALL_MAIL_SUCCESS, GET_ALL_MAIL, GET_IMPORTANT_MAIL, GET_NAV_FILTERS, GET_NAV_FOLDER, GET_NAV_LABELS, GET_READ_MAIL, GET_STARRED_MAIL, GET_UNIMPORTANT_MAIL, GET_UNREAD_MAIL, GET_UNSELECTED_ALL_MAIL, GET_UNSTARRED_MAIL, HANDLE_REQUEST_CLOSE, ON_ALL_MAIL_SELECT, ON_COMPOSE_MAIL, ON_DELETE_MAIL, ON_FOLDER_MENU_ITEM_SELECT, ON_FOLDER_SELECT, ON_HIDE_LOADER, ON_IMPORTANT_SELECT, ON_LABEL_MENU_ITEM_SELECT, ON_LABEL_SELECT, ON_MAIL_CHECKED, ON_MAIL_SELECT, ON_MAIL_SEND, ON_OPTION_MENU_SELECT, ON_START_SELECT, ON_TOGGLE_DRAWER, SEARCH_MAIL, SET_CURRENT_MAIL_NULL, SHOW_MESSAGE, UPDATE_SEARCH } from 'constants/ActionTypes';\nimport mails from 'app/routes/mail/data/mails';\nvar INIT_STATE = {\n  searchMail: '',\n  noContentFoundMessage: 'No mail found in selected folder',\n  alertMessage: '',\n  showMessage: false,\n  drawerState: false,\n  anchorEl: null,\n  // allMail: [], only for prod\n  allMail: mails,\n  optionName: 'None',\n  loader: true,\n  currentMail: null,\n  user: {\n    name: 'Robert Johnson',\n    email: 'robert@example.com',\n    avatar: 'https://via.placeholder.com/150x150'\n  },\n  selectedMails: 0,\n  selectedFolder: 0,\n  composeMail: false,\n  labelMenuState: false,\n  folderMenuState: false,\n  optionMenuState: false,\n  // folderMails: [], //only for prod\n  folderMails: mails.filter(function (mail) {\n    return mail.folder === 0;\n  })\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_ALL_MAIL:\n      {\n        var _mails = state.allMail.map(function (mail) {\n          return mail.folder === state.selectedFolder ? _objectSpread({}, mail, {\n            selected: true\n          }) : mail;\n        });\n\n        return _objectSpread({}, state, {\n          selectedMails: _mails.length,\n          optionName: 'All',\n          allMail: _mails,\n          folderMails: _mails.filter(function (mail) {\n            return mail.folder === state.selectedFolder;\n          })\n        });\n      }\n\n    case FETCH_ALL_MAIL_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          loader: false,\n          allMail: action.payload,\n          folderMails: action.payload.filter(function (mail) {\n            return mail.folder === 0;\n          })\n        });\n      }\n\n    case GET_IMPORTANT_MAIL:\n      {\n        var selectedMail = 0;\n\n        var _mails2 = state.allMail.filter(function (mail) {\n          return mail.folder === state.selectedFolder;\n        });\n\n        _mails2 = _mails2.map(function (mail) {\n          if (mail.important) {\n            selectedMail++;\n            return _objectSpread({}, mail, {\n              selected: true\n            });\n          }\n\n          return _objectSpread({}, mail, {\n            selected: false\n          });\n        });\n        return _objectSpread({}, state, {\n          selectedMails: selectedMail,\n          optionName: 'Important',\n          allMail: _mails2,\n          folderMails: _mails2.filter(function (mail) {\n            return mail.folder === state.selectedFolder;\n          })\n        });\n      }\n\n    case GET_NAV_FILTERS:\n      {\n        var filterMails = state.allMail.filter(function (mail) {\n          if (action.payload.id === 0 && mail.starred) {\n            return mail;\n          } else if (action.payload.id === 1 && mail.important) {\n            return mail;\n          } else return mail;\n        });\n        return _objectSpread({}, state, {\n          noContentFoundMessage: 'No mail found in selected filter',\n          loader: true,\n          folderMails: filterMails\n        });\n      }\n\n    case ON_FOLDER_SELECT:\n      {\n        return _objectSpread({}, state, {\n          folderMenuState: !state.folderMenuState\n        });\n      }\n\n    case GET_NAV_LABELS:\n      {\n        var _filterMails = state.allMail.filter(function (mail) {\n          return mail.labels.includes(action.payload.id);\n        });\n\n        return _objectSpread({}, state, {\n          loader: true,\n          noContentFoundMessage: 'No mail found in selected label',\n          folderMails: _filterMails\n        });\n      }\n\n    case GET_READ_MAIL:\n      {\n        var _selectedMail = 0;\n\n        var _mails3 = state.allMail.filter(function (mail) {\n          return mail.folder === state.selectedFolder;\n        });\n\n        _mails3 = _mails3.map(function (mail) {\n          if (mail.read) {\n            _selectedMail++;\n            return _objectSpread({}, mail, {\n              selected: true\n            });\n          }\n\n          return _objectSpread({}, mail, {\n            selected: false\n          });\n        });\n        return _objectSpread({}, state, {\n          selectedMails: _selectedMail,\n          allMail: _mails3,\n          optionName: 'Read',\n          folderMails: _mails3.filter(function (mail) {\n            return mail.folder === state.selectedFolder;\n          })\n        });\n      }\n\n    case GET_STARRED_MAIL:\n      {\n        var _selectedMail2 = 0;\n\n        var _mails4 = state.allMail.filter(function (mail) {\n          return mail.folder === state.selectedFolder;\n        });\n\n        _mails4 = _mails4.map(function (mail) {\n          if (mail.starred) {\n            _selectedMail2++;\n            return _objectSpread({}, mail, {\n              selected: true\n            });\n          }\n\n          return _objectSpread({}, mail, {\n            selected: false\n          });\n        });\n        return _objectSpread({}, state, {\n          selectedMails: _selectedMail2,\n          allMail: _mails4,\n          optionName: 'Stared',\n          folderMails: _mails4.filter(function (mail) {\n            return mail.folder === state.selectedFolder;\n          })\n        });\n      }\n\n    case GET_UNIMPORTANT_MAIL:\n      {\n        var _selectedMail3 = 0;\n\n        var _mails5 = state.allMail.filter(function (mail) {\n          return mail.folder === state.selectedFolder;\n        });\n\n        _mails5 = _mails5.map(function (mail) {\n          if (!mail.important) {\n            _selectedMail3++;\n            return _objectSpread({}, mail, {\n              selected: true\n            });\n          }\n\n          return _objectSpread({}, mail, {\n            selected: false\n          });\n        });\n        return _objectSpread({}, state, {\n          selectedMails: _selectedMail3,\n          allMail: _mails5,\n          optionName: 'Unimportant',\n          noContentFoundMessage: 'No Mail found in selected Label',\n          folderMails: _mails5.filter(function (mail) {\n            return mail.folder === state.selectedFolder;\n          })\n        });\n      }\n\n    case GET_UNREAD_MAIL:\n      {\n        var _selectedMail4 = 0;\n\n        var _mails6 = state.allMail.filter(function (mail) {\n          return mail.folder === state.selectedFolder;\n        });\n\n        _mails6 = _mails6.map(function (mail) {\n          if (!mail.read) {\n            _selectedMail4++;\n            return _objectSpread({}, mail, {\n              selected: true\n            });\n          }\n\n          return _objectSpread({}, mail, {\n            selected: false\n          });\n        });\n        return _objectSpread({}, state, {\n          selectedMails: _selectedMail4,\n          allMail: _mails6,\n          optionName: 'Unread',\n          folderMails: _mails6.filter(function (mail) {\n            return mail.folder === state.selectedFolder;\n          })\n        });\n      }\n\n    case GET_UNSELECTED_ALL_MAIL:\n      {\n        var _mails7 = state.allMail.map(function (mail) {\n          return mail.folder === state.selectedFolder ? _objectSpread({}, mail, {\n            selected: false\n          }) : mail;\n        });\n\n        return _objectSpread({}, state, {\n          selectedMails: 0,\n          optionName: 'None',\n          allMail: _mails7,\n          folderMails: _mails7.filter(function (mail) {\n            return mail.folder === state.selectedFolder;\n          })\n        });\n      }\n\n    case GET_UNSTARRED_MAIL:\n      {\n        var _selectedMail5 = 0;\n\n        var _mails8 = state.allMail.filter(function (mail) {\n          return mail.folder === state.selectedFolder;\n        });\n\n        _mails8 = _mails8.map(function (mail) {\n          if (!mail.starred) {\n            _selectedMail5++;\n            return _objectSpread({}, mail, {\n              selected: true\n            });\n          }\n\n          return _objectSpread({}, mail, {\n            selected: false\n          });\n        });\n        return _objectSpread({}, state, {\n          selectedMails: _selectedMail5,\n          optionName: 'UnStarred',\n          allMail: _mails8,\n          folderMails: _mails8.filter(function (mail) {\n            return mail.folder === state.selectedFolder;\n          })\n        });\n      }\n\n    case HANDLE_REQUEST_CLOSE:\n      {\n        return _objectSpread({}, state, {\n          composeMail: false,\n          showMessage: false,\n          folderMenuState: false,\n          labelMenuState: false,\n          optionMenuState: false\n        });\n      }\n\n    case ON_ALL_MAIL_SELECT:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ON_FOLDER_MENU_ITEM_SELECT:\n      {\n        var _mails9 = state.allMail.map(function (mail) {\n          return mail.selected && mail.folder === state.selectedFolder ? _objectSpread({}, mail, {\n            folder: action.payload,\n            selected: false\n          }) : mail;\n        });\n\n        return _objectSpread({}, state, {\n          selectedMails: 0,\n          allMail: _mails9,\n          noContentFoundMessage: 'No mail found in selected folder',\n          alertMessage: 'Mail has been moved successfully',\n          showMessage: true,\n          folderMails: _mails9.filter(function (mail) {\n            return mail.folder === state.selectedFolder;\n          })\n        });\n      }\n\n    case ON_IMPORTANT_SELECT:\n      {\n        action.payload.important = !action.payload.important;\n        return _objectSpread({}, state, {\n          alertMessage: action.payload.important ? 'Mail Mark as Important' : 'Mail Remove as Important',\n          showMessage: true,\n          folderMails: state.folderMails.map(function (mail) {\n            return mail.id === action.payload.id ? action.payload : mail;\n          })\n        });\n      }\n\n    case ON_LABEL_MENU_ITEM_SELECT:\n      {\n        var currentMail = state.currentMail;\n\n        var _mails10 = state.allMail.map(function (mail) {\n          if (mail.selected && mail.folder === state.selectedFolder) {\n            if (mail.labels.includes(action.payload.id)) {\n              mail.labels.splice(mail.labels.indexOf(action.payload.id), 1);\n\n              if (currentMail !== null && mail.id === currentMail.id) {\n                currentMail.labels = mail.labels;\n              }\n\n              return _objectSpread({}, mail, {\n                labels: mail.labels\n              });\n            } else {\n              mail.labels = mail.labels.concat(action.payload.id);\n\n              if (currentMail !== null && mail.id === currentMail.id) {\n                currentMail.labels = mail.labels;\n              }\n\n              return _objectSpread({}, mail, {\n                labels: mail.labels\n              });\n            }\n          } else {\n            return mail;\n          }\n        });\n\n        return _objectSpread({}, state, {\n          currentMail: currentMail,\n          noContentFoundMessage: 'No mail found in selected label',\n          alertMessage: 'Label Updated Successfully',\n          showMessage: true,\n          allMail: _mails10,\n          folderMails: _mails10.filter(function (mail) {\n            return mail.folder === state.selectedFolder;\n          })\n        });\n      }\n\n    case ON_LABEL_SELECT:\n      {\n        return _objectSpread({}, state, {\n          labelMenuState: !state.labelMenuState\n        });\n      }\n\n    case ON_MAIL_CHECKED:\n      {\n        action.payload.selected = !action.payload.selected;\n        var _selectedMail6 = 0;\n\n        var _mails11 = state.folderMails.map(function (mail) {\n          if (mail.selected) {\n            _selectedMail6++;\n          }\n\n          if (mail.id === action.payload.id) {\n            if (mail.selected) {\n              _selectedMail6++;\n            }\n\n            return action.payload;\n          } else {\n            return mail;\n          }\n        });\n\n        return _objectSpread({}, state, {\n          selectedMails: _selectedMail6,\n          folderMails: _mails11\n        });\n      }\n\n    case ON_MAIL_SELECT:\n      {\n        return _objectSpread({}, state, {\n          loader: true,\n          currentMail: action.payload\n        });\n      }\n\n    case ON_MAIL_SEND:\n      {\n        return _objectSpread({}, state, {\n          alertMessage: 'Mail Sent Successfully',\n          showMessage: true,\n          folderMails: state.allMail.concat(action.payload),\n          allMail: state.allMail.concat(action.payload)\n        });\n      }\n\n    case ON_OPTION_MENU_SELECT:\n      {\n        return _objectSpread({}, state, {\n          optionMenuState: !state.optionMenuState\n        });\n      }\n\n    case GET_NAV_FOLDER:\n      {\n        var _filterMails2 = state.allMail.filter(function (mail) {\n          return mail.folder === action.payload.id;\n        });\n\n        return _objectSpread({}, state, {\n          selectedFolder: action.payload.id,\n          noContentFoundMessage: 'No mail found in selected folder',\n          currentMail: null,\n          loader: true,\n          folderMails: _filterMails2\n        });\n      }\n\n    case ON_START_SELECT:\n      {\n        action.payload.starred = !action.payload.starred;\n        return _objectSpread({}, state, {\n          alertMessage: action.payload.starred ? 'Mail Mark as Star' : 'Mail Remove as Star',\n          showMessage: true,\n          folderMails: state.folderMails.map(function (mail) {\n            return mail.id === action.payload.id ? action.payload : mail;\n          })\n        });\n      }\n\n    case SEARCH_MAIL:\n      {\n        if (action.payload === '') {\n          return _objectSpread({}, state, {\n            folderMails: state.allMail.filter(function (mail) {\n              return !mail.deleted;\n            })\n          });\n        } else {\n          var searchMails = state.allMail.filter(function (mail) {\n            return !mail.deleted && mail.subject.toLowerCase().indexOf(action.payload.toLowerCase()) > -1;\n          });\n          return _objectSpread({}, state, {\n            folderMails: searchMails\n          });\n        }\n      }\n\n    case UPDATE_SEARCH:\n      {\n        return _objectSpread({}, state, {\n          searchMail: action.payload\n        });\n      }\n\n    case ON_HIDE_LOADER:\n      {\n        return _objectSpread({}, state, {\n          loader: false\n        });\n      }\n\n    case ON_TOGGLE_DRAWER:\n      {\n        return _objectSpread({}, state, {\n          drawerState: !state.drawerState\n        });\n      }\n\n    case SET_CURRENT_MAIL_NULL:\n      {\n        return _objectSpread({}, state, {\n          currentMail: null\n        });\n      }\n\n    case ON_DELETE_MAIL:\n      {\n        var _mails12 = state.allMail.map(function (mail) {\n          return mail.selected && mail.folder === state.selectedFolder ? _objectSpread({}, mail, {\n            folder: 4,\n            selected: false\n          }) : mail;\n        });\n\n        return _objectSpread({}, state, {\n          alertMessage: 'Mail Deleted Successfully',\n          showMessage: true,\n          selectedMails: 0,\n          allMail: _mails12,\n          folderMails: _mails12.filter(function (mail) {\n            return mail.folder === state.selectedFolder;\n          })\n        });\n      }\n\n    case ON_COMPOSE_MAIL:\n      {\n        return _objectSpread({}, state, {\n          composeMail: true\n        });\n      }\n\n    case SHOW_MESSAGE:\n      {\n        return _objectSpread({}, state, {\n          alertMessage: action.payload,\n          showMessage: true,\n          loader: false\n        });\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:\\Users\\Noelia\\Desktop\\compra\\source\\src\\reducers\\Mail.js"],"names":["FETCH_ALL_MAIL_SUCCESS","GET_ALL_MAIL","GET_IMPORTANT_MAIL","GET_NAV_FILTERS","GET_NAV_FOLDER","GET_NAV_LABELS","GET_READ_MAIL","GET_STARRED_MAIL","GET_UNIMPORTANT_MAIL","GET_UNREAD_MAIL","GET_UNSELECTED_ALL_MAIL","GET_UNSTARRED_MAIL","HANDLE_REQUEST_CLOSE","ON_ALL_MAIL_SELECT","ON_COMPOSE_MAIL","ON_DELETE_MAIL","ON_FOLDER_MENU_ITEM_SELECT","ON_FOLDER_SELECT","ON_HIDE_LOADER","ON_IMPORTANT_SELECT","ON_LABEL_MENU_ITEM_SELECT","ON_LABEL_SELECT","ON_MAIL_CHECKED","ON_MAIL_SELECT","ON_MAIL_SEND","ON_OPTION_MENU_SELECT","ON_START_SELECT","ON_TOGGLE_DRAWER","SEARCH_MAIL","SET_CURRENT_MAIL_NULL","SHOW_MESSAGE","UPDATE_SEARCH","mails","INIT_STATE","searchMail","noContentFoundMessage","alertMessage","showMessage","drawerState","anchorEl","allMail","optionName","loader","currentMail","user","name","email","avatar","selectedMails","selectedFolder","composeMail","labelMenuState","folderMenuState","optionMenuState","folderMails","filter","mail","folder","state","action","type","map","selected","length","payload","selectedMail","important","filterMails","id","starred","labels","includes","read","splice","indexOf","concat","deleted","searchMails","subject","toLowerCase"],"mappings":"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","sourcesContent":["import {\r\n  FETCH_ALL_MAIL_SUCCESS,\r\n  GET_ALL_MAIL,\r\n  GET_IMPORTANT_MAIL,\r\n  GET_NAV_FILTERS,\r\n  GET_NAV_FOLDER,\r\n  GET_NAV_LABELS,\r\n  GET_READ_MAIL,\r\n  GET_STARRED_MAIL,\r\n  GET_UNIMPORTANT_MAIL,\r\n  GET_UNREAD_MAIL,\r\n  GET_UNSELECTED_ALL_MAIL,\r\n  GET_UNSTARRED_MAIL,\r\n  HANDLE_REQUEST_CLOSE,\r\n  ON_ALL_MAIL_SELECT,\r\n  ON_COMPOSE_MAIL,\r\n  ON_DELETE_MAIL,\r\n  ON_FOLDER_MENU_ITEM_SELECT,\r\n  ON_FOLDER_SELECT,\r\n  ON_HIDE_LOADER,\r\n  ON_IMPORTANT_SELECT,\r\n  ON_LABEL_MENU_ITEM_SELECT,\r\n  ON_LABEL_SELECT,\r\n  ON_MAIL_CHECKED,\r\n  ON_MAIL_SELECT,\r\n  ON_MAIL_SEND,\r\n  ON_OPTION_MENU_SELECT,\r\n  ON_START_SELECT,\r\n  ON_TOGGLE_DRAWER,\r\n  SEARCH_MAIL,\r\n  SET_CURRENT_MAIL_NULL,\r\n  SHOW_MESSAGE,\r\n  UPDATE_SEARCH\r\n} from 'constants/ActionTypes';\r\nimport mails from 'app/routes/mail/data/mails'\r\n\r\nconst INIT_STATE = {\r\n  searchMail: '',\r\n  noContentFoundMessage: 'No mail found in selected folder',\r\n  alertMessage: '',\r\n  showMessage: false,\r\n  drawerState: false,\r\n  anchorEl: null,\r\n  // allMail: [], only for prod\r\n  allMail: mails,\r\n  optionName: 'None',\r\n  loader: true,\r\n  currentMail: null,\r\n  user: {\r\n    name: 'Robert Johnson',\r\n    email: 'robert@example.com',\r\n    avatar: 'https://via.placeholder.com/150x150'\r\n  },\r\n  selectedMails: 0,\r\n  selectedFolder: 0,\r\n  composeMail: false,\r\n  labelMenuState: false,\r\n  folderMenuState: false,\r\n  optionMenuState: false,\r\n  // folderMails: [], //only for prod\r\n  folderMails: mails.filter(mail => mail.folder === 0)\r\n\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_ALL_MAIL: {\r\n      let mails = state.allMail.map((mail) => mail.folder === state.selectedFolder ? {\r\n        ...mail,\r\n        selected: true\r\n      } : mail);\r\n      return {\r\n        ...state,\r\n        selectedMails: mails.length,\r\n        optionName: 'All',\r\n        allMail: mails,\r\n        folderMails: mails.filter(mail => mail.folder === state.selectedFolder)\r\n      }\r\n    }\r\n    case FETCH_ALL_MAIL_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loader: false,\r\n        allMail: action.payload,\r\n        folderMails: action.payload.filter(mail => mail.folder === 0)\r\n      }\r\n    }\r\n    case GET_IMPORTANT_MAIL: {\r\n      let selectedMail = 0;\r\n      let mails = state.allMail.filter(mail => mail.folder === state.selectedFolder);\r\n      mails = mails.map((mail) => {\r\n        if (mail.important) {\r\n          selectedMail++;\r\n          return {...mail, selected: true};\r\n        }\r\n        return {...mail, selected: false}\r\n      });\r\n      return {\r\n        ...state,\r\n        selectedMails: selectedMail,\r\n        optionName: 'Important',\r\n        allMail: mails,\r\n        folderMails: mails.filter(mail => mail.folder === state.selectedFolder)\r\n      }\r\n    }\r\n    case GET_NAV_FILTERS: {\r\n      const filterMails = state.allMail.filter(mail => {\r\n        if (action.payload.id === 0 && mail.starred) {\r\n          return mail\r\n        } else if (action.payload.id === 1 && mail.important) {\r\n          return mail\r\n        }else return mail;\r\n      });\r\n      return {\r\n        ...state,\r\n        noContentFoundMessage: 'No mail found in selected filter',\r\n        loader: true,\r\n        folderMails: filterMails\r\n      }\r\n    }\r\n    case ON_FOLDER_SELECT: {\r\n      return {...state, folderMenuState: !state.folderMenuState}\r\n    }\r\n    case GET_NAV_LABELS: {\r\n      const filterMails = state.allMail.filter(mail => mail.labels.includes(action.payload.id));\r\n      return {\r\n        ...state,\r\n        loader: true,\r\n        noContentFoundMessage: 'No mail found in selected label',\r\n        folderMails: filterMails\r\n      }\r\n    }\r\n    case GET_READ_MAIL: {\r\n      let selectedMail = 0;\r\n      let mails = state.allMail.filter(mail => mail.folder === state.selectedFolder);\r\n      mails = mails.map((mail) => {\r\n        if (mail.read) {\r\n          selectedMail++;\r\n          return {...mail, selected: true};\r\n        }\r\n        return {...mail, selected: false}\r\n      });\r\n      return {\r\n        ...state,\r\n        selectedMails: selectedMail,\r\n        allMail: mails,\r\n        optionName: 'Read',\r\n        folderMails: mails.filter(mail => mail.folder === state.selectedFolder)\r\n      }\r\n    }\r\n    case GET_STARRED_MAIL: {\r\n      let selectedMail = 0;\r\n      let mails = state.allMail.filter(mail => mail.folder === state.selectedFolder);\r\n      mails = mails.map((mail) => {\r\n        if (mail.starred) {\r\n          selectedMail++;\r\n          return {...mail, selected: true};\r\n        }\r\n        return {...mail, selected: false}\r\n      });\r\n      return {\r\n        ...state,\r\n        selectedMails: selectedMail,\r\n        allMail: mails,\r\n        optionName: 'Stared',\r\n        folderMails: mails.filter(mail => mail.folder === state.selectedFolder)\r\n      }\r\n    }\r\n    case GET_UNIMPORTANT_MAIL: {\r\n      let selectedMail = 0;\r\n      let mails = state.allMail.filter(mail => mail.folder === state.selectedFolder);\r\n      mails = mails.map((mail) => {\r\n        if (!mail.important) {\r\n          selectedMail++;\r\n          return {...mail, selected: true};\r\n        }\r\n        return {...mail, selected: false}\r\n      });\r\n      return {\r\n        ...state,\r\n        selectedMails: selectedMail,\r\n        allMail: mails,\r\n        optionName: 'Unimportant',\r\n        noContentFoundMessage: 'No Mail found in selected Label',\r\n        folderMails: mails.filter(mail => mail.folder === state.selectedFolder)\r\n      }\r\n    }\r\n    case GET_UNREAD_MAIL: {\r\n      let selectedMail = 0;\r\n      let mails = state.allMail.filter(mail => mail.folder === state.selectedFolder);\r\n      mails = mails.map((mail) => {\r\n        if (!mail.read) {\r\n          selectedMail++;\r\n          return {...mail, selected: true};\r\n        }\r\n        return {...mail, selected: false}\r\n      });\r\n      return {\r\n        ...state,\r\n        selectedMails: selectedMail,\r\n        allMail: mails,\r\n        optionName: 'Unread',\r\n        folderMails: mails.filter(mail => mail.folder === state.selectedFolder)\r\n      }\r\n    }\r\n    case GET_UNSELECTED_ALL_MAIL: {\r\n      let mails = state.allMail.map((mail) => mail.folder === state.selectedFolder ? {\r\n        ...mail,\r\n        selected: false\r\n      } : mail);\r\n      return {\r\n        ...state,\r\n        selectedMails: 0,\r\n        optionName: 'None',\r\n        allMail: mails,\r\n        folderMails: mails.filter(mail => mail.folder === state.selectedFolder)\r\n      }\r\n    }\r\n    case GET_UNSTARRED_MAIL: {\r\n      let selectedMail = 0;\r\n      let mails = state.allMail.filter(mail => mail.folder === state.selectedFolder);\r\n      mails = mails.map((mail) => {\r\n        if (!mail.starred) {\r\n          selectedMail++;\r\n          return {...mail, selected: true};\r\n        }\r\n        return {...mail, selected: false}\r\n      });\r\n      return {\r\n        ...state,\r\n        selectedMails: selectedMail,\r\n        optionName: 'UnStarred',\r\n        allMail: mails,\r\n        folderMails: mails.filter(mail => mail.folder === state.selectedFolder)\r\n      }\r\n    }\r\n    case HANDLE_REQUEST_CLOSE: {\r\n      return {\r\n        ...state,\r\n        composeMail: false,\r\n        showMessage: false,\r\n        folderMenuState: false,\r\n        labelMenuState: false,\r\n        optionMenuState: false\r\n      }\r\n    }\r\n    case ON_ALL_MAIL_SELECT: {\r\n      return {...state}\r\n    }\r\n    case ON_FOLDER_MENU_ITEM_SELECT: {\r\n      const mails = state.allMail.map(mail =>\r\n        mail.selected && (mail.folder === state.selectedFolder) ?\r\n          {...mail, folder: action.payload, selected: false,} : mail\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        selectedMails: 0,\r\n        allMail: mails,\r\n        noContentFoundMessage: 'No mail found in selected folder',\r\n        alertMessage: 'Mail has been moved successfully',\r\n        showMessage: true,\r\n        folderMails: mails.filter(mail => mail.folder === state.selectedFolder)\r\n      }\r\n    }\r\n    case ON_IMPORTANT_SELECT: {\r\n      action.payload.important = !action.payload.important;\r\n      return {\r\n        ...state,\r\n        alertMessage: action.payload.important ? 'Mail Mark as Important' : 'Mail Remove as Important',\r\n        showMessage: true,\r\n        folderMails: state.folderMails.map(mail =>\r\n          mail.id === action.payload.id ?\r\n            action.payload : mail\r\n        )\r\n      }\r\n    }\r\n    case ON_LABEL_MENU_ITEM_SELECT: {\r\n      let currentMail = state.currentMail;\r\n      const mails = state.allMail.map(mail => {\r\n          if (mail.selected && (mail.folder === state.selectedFolder)) {\r\n            if (mail.labels.includes(action.payload.id)) {\r\n              mail.labels.splice(mail.labels.indexOf(action.payload.id), 1);\r\n              if (currentMail !== null && mail.id === currentMail.id) {\r\n                currentMail.labels = mail.labels;\r\n              }\r\n              return {...mail, labels: mail.labels};\r\n            } else {\r\n              mail.labels = mail.labels.concat(action.payload.id);\r\n              if (currentMail !== null && mail.id === currentMail.id) {\r\n                currentMail.labels = mail.labels;\r\n              }\r\n              return {...mail, labels: mail.labels};\r\n            }\r\n          } else {\r\n            return mail;\r\n          }\r\n        }\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        currentMail: currentMail,\r\n        noContentFoundMessage: 'No mail found in selected label',\r\n        alertMessage: 'Label Updated Successfully',\r\n        showMessage: true,\r\n        allMail: mails,\r\n        folderMails: mails.filter(mail => mail.folder === state.selectedFolder)\r\n      }\r\n    }\r\n    case ON_LABEL_SELECT: {\r\n      return {...state, labelMenuState: !state.labelMenuState}\r\n    }\r\n    case ON_MAIL_CHECKED: {\r\n      action.payload.selected = !action.payload.selected;\r\n      let selectedMail = 0;\r\n      const mails = state.folderMails.map(mail => {\r\n          if (mail.selected) {\r\n            selectedMail++;\r\n          }\r\n          if (mail.id === action.payload.id) {\r\n            if (mail.selected) {\r\n              selectedMail++;\r\n            }\r\n            return action.payload;\r\n          } else {\r\n            return mail;\r\n          }\r\n        }\r\n      );\r\n      return {\r\n        ...state,\r\n        selectedMails: selectedMail,\r\n        folderMails: mails\r\n      }\r\n    }\r\n\r\n    case ON_MAIL_SELECT: {\r\n      return {\r\n        ...state,\r\n        loader: true,\r\n        currentMail: action.payload\r\n      }\r\n    }\r\n    case ON_MAIL_SEND: {\r\n      return {\r\n        ...state,\r\n        alertMessage: 'Mail Sent Successfully',\r\n        showMessage: true,\r\n        folderMails: state.allMail.concat(action.payload),\r\n        allMail: state.allMail.concat(action.payload)\r\n      }\r\n    }\r\n    case ON_OPTION_MENU_SELECT: {\r\n      return {...state, optionMenuState: !state.optionMenuState}\r\n    }\r\n    case GET_NAV_FOLDER: {\r\n      const filterMails = state.allMail.filter(mail => mail.folder === action.payload.id);\r\n      return {\r\n        ...state,\r\n        selectedFolder: action.payload.id,\r\n        noContentFoundMessage: 'No mail found in selected folder',\r\n        currentMail: null,\r\n        loader: true,\r\n        folderMails: filterMails\r\n      }\r\n    }\r\n\r\n    case ON_START_SELECT: {\r\n      action.payload.starred = !action.payload.starred;\r\n      return {\r\n        ...state,\r\n        alertMessage: action.payload.starred ? 'Mail Mark as Star' : 'Mail Remove as Star',\r\n        showMessage: true,\r\n        folderMails: state.folderMails.map(mail =>\r\n          mail.id === action.payload.id ?\r\n            action.payload : mail\r\n        )\r\n      }\r\n    }\r\n\r\n    case SEARCH_MAIL: {\r\n      if (action.payload === '') {\r\n        return {...state, folderMails: state.allMail.filter((mail) => !mail.deleted)};\r\n      } else {\r\n        const searchMails = state.allMail.filter((mail) =>\r\n          !mail.deleted && mail.subject.toLowerCase().indexOf(action.payload.toLowerCase()) > -1);\r\n        return {\r\n          ...state,\r\n          folderMails: searchMails\r\n        };\r\n      }\r\n\r\n    }\r\n\r\n    case UPDATE_SEARCH: {\r\n      return {...state, searchMail: action.payload}\r\n    }\r\n    case ON_HIDE_LOADER: {\r\n      return {...state, loader: false}\r\n    }\r\n    case ON_TOGGLE_DRAWER: {\r\n      return {...state, drawerState: !state.drawerState}\r\n    }\r\n    case SET_CURRENT_MAIL_NULL: {\r\n      return {...state, currentMail: null}\r\n    }\r\n    case ON_DELETE_MAIL: {\r\n\r\n      const mails = state.allMail.map(mail =>\r\n        mail.selected && (mail.folder === state.selectedFolder) ?\r\n          {...mail, folder: 4, selected: false,} : mail\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        alertMessage: 'Mail Deleted Successfully',\r\n        showMessage: true,\r\n        selectedMails: 0,\r\n        allMail: mails,\r\n        folderMails: mails.filter(mail => mail.folder === state.selectedFolder)\r\n      }\r\n    }\r\n    case ON_COMPOSE_MAIL: {\r\n      return {...state, composeMail: true}\r\n    }\r\n    case SHOW_MESSAGE: {\r\n      return {\r\n        ...state,\r\n        alertMessage: action.payload,\r\n        showMessage: true,\r\n        loader: false\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}