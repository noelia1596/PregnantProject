{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\src\\\\app\\\\routes\\\\extensions\\\\routes\\\\dropzone\\\\FullScreen\\\\index.js\";\nimport React from 'react';\nimport Dropzone from 'react-dropzone';\n\nvar FullScreen =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FullScreen, _React$Component);\n\n  function FullScreen() {\n    var _this;\n\n    _classCallCheck(this, FullScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FullScreen).call(this));\n    _this.state = {\n      accept: '',\n      files: [],\n      dropzoneActive: false\n    };\n    return _this;\n  }\n\n  _createClass(FullScreen, [{\n    key: \"onDragEnter\",\n    value: function onDragEnter() {\n      this.setState({\n        dropzoneActive: true\n      });\n    }\n  }, {\n    key: \"onDragLeave\",\n    value: function onDragLeave() {\n      this.setState({\n        dropzoneActive: false\n      });\n    }\n  }, {\n    key: \"onDrop\",\n    value: function onDrop(files) {\n      this.setState({\n        files: files,\n        dropzoneActive: false\n      });\n    }\n  }, {\n    key: \"applyMimeTypes\",\n    value: function applyMimeTypes(event) {\n      this.setState({\n        accept: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          accept = _this$state.accept,\n          files = _this$state.files,\n          dropzoneActive = _this$state.dropzoneActive;\n      var overlayStyle = {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        padding: '2.5em 0',\n        background: 'rgba(0,0,0,0.5)',\n        textAlign: 'center',\n        color: '#fff'\n      };\n      return React.createElement(Dropzone, {\n        disableClick: true,\n        style: {\n          position: 'relative'\n        },\n        accept: accept,\n        onDrop: this.onDrop.bind(this),\n        onDragEnter: this.onDragEnter.bind(this),\n        onDragLeave: this.onDragLeave.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, dropzoneActive && React.createElement(\"div\", {\n        style: overlayStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Drop files...\"), React.createElement(\"div\", {\n        className: \"dropzone-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"My awesome app\"), React.createElement(\"div\", {\n        className: \"form-group form-group-dropzone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"mimetypes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Enter mime types you want to accept: \"), React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        id: \"mimetypes\",\n        onChange: this.applyMimeTypes.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), \"\\u200B\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Dropped files\"), React.createElement(\"ul\", {\n        className: \"upload-file-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, files.map(function (f) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, f.name, \" - \", f.size, \" bytes\");\n      })), \"\\u200B\"));\n    }\n  }]);\n\n  return FullScreen;\n}(React.Component);\n\nexport default FullScreen;","map":{"version":3,"sources":["C:\\Users\\Noelia\\Desktop\\jumbo-react-3.0.1\\source\\src\\app\\routes\\extensions\\routes\\dropzone\\FullScreen\\index.js"],"names":["React","Dropzone","FullScreen","state","accept","files","dropzoneActive","setState","event","target","value","overlayStyle","position","top","right","bottom","left","padding","background","textAlign","color","onDrop","bind","onDragEnter","onDragLeave","applyMimeTypes","map","f","name","size","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Dropzone from 'react-dropzone';\r\n\r\nclass FullScreen extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      accept: '',\r\n      files: [],\r\n      dropzoneActive: false\r\n    }\r\n  }\r\n\r\n  onDragEnter() {\r\n    this.setState({\r\n      dropzoneActive: true\r\n    });\r\n  }\r\n\r\n  onDragLeave() {\r\n    this.setState({\r\n      dropzoneActive: false\r\n    });\r\n  }\r\n\r\n  onDrop(files) {\r\n    this.setState({\r\n      files,\r\n      dropzoneActive: false\r\n    });\r\n  }\r\n\r\n  applyMimeTypes(event) {\r\n    this.setState({\r\n      accept: event.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {accept, files, dropzoneActive} = this.state;\r\n    const overlayStyle = {\r\n      position: 'absolute',\r\n      top: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      left: 0,\r\n      padding: '2.5em 0',\r\n      background: 'rgba(0,0,0,0.5)',\r\n      textAlign: 'center',\r\n      color: '#fff'\r\n    };\r\n    return (\r\n      <Dropzone\r\n        disableClick\r\n        style={{position: 'relative'}}\r\n        accept={accept}\r\n        onDrop={this.onDrop.bind(this)}\r\n        onDragEnter={this.onDragEnter.bind(this)}\r\n        onDragLeave={this.onDragLeave.bind(this)}\r\n      >\r\n        {dropzoneActive && <div style={overlayStyle}>Drop files...</div>}\r\n        <div className=\"dropzone-card\">\r\n          <h1>My awesome app</h1>\r\n          <div className=\"form-group form-group-dropzone\">\r\n            <label htmlFor=\"mimetypes\">Enter mime types you want to accept: </label>\r\n            <input className=\"form-control\"\r\n                   type=\"text\"\r\n                   id=\"mimetypes\"\r\n                   onChange={this.applyMimeTypes.bind(this)}/>â€‹\r\n          </div>\r\n          <h2>Dropped files</h2>\r\n          <ul className=\"upload-file-list\">\r\n            {\r\n              files.map(f => <li>{f.name} - {f.size} bytes</li>)\r\n            }\r\n          </ul>\r\n          â€‹\r\n        </div>\r\n      </Dropzone>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FullScreen;"]},"metadata":{},"sourceType":"module"}