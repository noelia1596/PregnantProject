{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\src\\\\app\\\\routes\\\\charts\\\\routes\\\\treemap\\\\Components\\\\CustomContentTreemap.js\";\nimport React, { Component } from 'react';\nimport { ResponsiveContainer, Treemap } from 'recharts';\nimport data from './data';\nvar COLORS = ['#8889DD', '#9597E4', '#8DC77B', '#A5D297', '#E2CF45', '#F8C12D'];\n\nvar CustomizedContent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CustomizedContent, _Component);\n\n  function CustomizedContent() {\n    _classCallCheck(this, CustomizedContent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CustomizedContent).apply(this, arguments));\n  }\n\n  _createClass(CustomizedContent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          root = _this$props.root,\n          depth = _this$props.depth,\n          x = _this$props.x,\n          y = _this$props.y,\n          width = _this$props.width,\n          height = _this$props.height,\n          index = _this$props.index,\n          colors = _this$props.colors,\n          name = _this$props.name;\n      return React.createElement(\"g\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"rect\", {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        style: {\n          fill: depth < 2 ? colors[Math.floor(index / root.children.length * 6)] : 'none',\n          stroke: '#fff',\n          strokeWidth: 2 / (depth + 1e-10),\n          strokeOpacity: 1 / (depth + 1e-10)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }), depth === 1 ? React.createElement(\"text\", {\n        x: x + width / 2,\n        y: y + height / 2 + 7,\n        textAnchor: \"middle\",\n        fill: \"#fff\",\n        fontSize: 14,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, name) : null, depth === 1 ? React.createElement(\"text\", {\n        x: x + 4,\n        y: y + 18,\n        fill: \"#fff\",\n        fontSize: 16,\n        fillOpacity: 0.9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, index + 1) : null);\n    }\n  }]);\n\n  return CustomizedContent;\n}(Component);\n\nvar CustomContentTreemap = function CustomContentTreemap() {\n  return React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 200,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Treemap, {\n    data: data,\n    dataKey: \"size\",\n    ratio: 4 / 3,\n    stroke: \"#fff\",\n    fill: \"#3367d6\",\n    content: React.createElement(CustomizedContent, {\n      colors: COLORS,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }));\n};\n\nexport default CustomContentTreemap;","map":{"version":3,"sources":["C:\\Users\\Noelia\\Desktop\\jumbo-react-3.0.1\\source\\src\\app\\routes\\charts\\routes\\treemap\\Components\\CustomContentTreemap.js"],"names":["React","Component","ResponsiveContainer","Treemap","data","COLORS","CustomizedContent","props","root","depth","x","y","width","height","index","colors","name","fill","Math","floor","children","length","stroke","strokeWidth","strokeOpacity","CustomContentTreemap"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,mBAAR,EAA6BC,OAA7B,QAA2C,UAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAGA,IAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,CAAf;;IAEMC,iB;;;;;;;;;;;;;6BACK;AAAA,wBACyD,KAAKC,KAD9D;AAAA,UACAC,IADA,eACAA,IADA;AAAA,UACMC,KADN,eACMA,KADN;AAAA,UACaC,CADb,eACaA,CADb;AAAA,UACgBC,CADhB,eACgBA,CADhB;AAAA,UACmBC,KADnB,eACmBA,KADnB;AAAA,UAC0BC,MAD1B,eAC0BA,MAD1B;AAAA,UACkCC,KADlC,eACkCA,KADlC;AAAA,UACyCC,MADzC,eACyCA,MADzC;AAAA,UACiDC,IADjD,eACiDA,IADjD;AAGP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,CAAC,EAAEN,CADL;AAEE,QAAA,CAAC,EAAEC,CAFL;AAGE,QAAA,KAAK,EAAEC,KAHT;AAIE,QAAA,MAAM,EAAEC,MAJV;AAKE,QAAA,KAAK,EAAE;AACLI,UAAAA,IAAI,EAAER,KAAK,GAAG,CAAR,GAAYM,MAAM,CAACG,IAAI,CAACC,KAAL,CAAWL,KAAK,GAAGN,IAAI,CAACY,QAAL,CAAcC,MAAtB,GAA+B,CAA1C,CAAD,CAAlB,GAAmE,MADpE;AAELC,UAAAA,MAAM,EAAE,MAFH;AAGLC,UAAAA,WAAW,EAAE,KAAKd,KAAK,GAAG,KAAb,CAHR;AAILe,UAAAA,aAAa,EAAE,KAAKf,KAAK,GAAG,KAAb;AAJV,SALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAcIA,KAAK,KAAK,CAAV,GACE;AACE,QAAA,CAAC,EAAEC,CAAC,GAAGE,KAAK,GAAG,CADjB;AAEE,QAAA,CAAC,EAAED,CAAC,GAAGE,MAAM,GAAG,CAAb,GAAiB,CAFtB;AAGE,QAAA,UAAU,EAAC,QAHb;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,QAAQ,EAAE,EALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOGG,IAPH,CADF,GAUI,IAxBR,EA2BIP,KAAK,KAAK,CAAV,GACE;AACE,QAAA,CAAC,EAAEC,CAAC,GAAG,CADT;AAEE,QAAA,CAAC,EAAEC,CAAC,GAAG,EAFT;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,QAAQ,EAAE,EAJZ;AAKE,QAAA,WAAW,EAAE,GALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOGG,KAAK,GAAG,CAPX,CADF,GAUI,IArCR,CADF;AA0CD;;;;EA9C6Bb,S;;AAiDhC,IAAMwB,oBAAoB,GAAG,SAAvBA,oBAAuB;AAAA,SAC3B,oBAAC,mBAAD;AAAqB,IAAA,KAAK,EAAC,MAA3B;AAAkC,IAAA,MAAM,EAAE,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AACE,IAAA,IAAI,EAAErB,IADR;AAEE,IAAA,OAAO,EAAC,MAFV;AAGE,IAAA,KAAK,EAAE,IAAI,CAHb;AAIE,IAAA,MAAM,EAAC,MAJT;AAKE,IAAA,IAAI,EAAC,SALP;AAME,IAAA,OAAO,EAAE,oBAAC,iBAAD;AAAmB,MAAA,MAAM,EAAEC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAD2B;AAAA,CAA7B;;AAaA,eAAeoB,oBAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {ResponsiveContainer, Treemap} from 'recharts';\r\nimport data from './data';\r\n\r\n\r\nconst COLORS = ['#8889DD', '#9597E4', '#8DC77B', '#A5D297', '#E2CF45', '#F8C12D'];\r\n\r\nclass CustomizedContent extends Component {\r\n  render() {\r\n    const {root, depth, x, y, width, height, index, colors, name} = this.props;\r\n\r\n    return (\r\n      <g>\r\n        <rect\r\n          x={x}\r\n          y={y}\r\n          width={width}\r\n          height={height}\r\n          style={{\r\n            fill: depth < 2 ? colors[Math.floor(index / root.children.length * 6)] : 'none',\r\n            stroke: '#fff',\r\n            strokeWidth: 2 / (depth + 1e-10),\r\n            strokeOpacity: 1 / (depth + 1e-10),\r\n          }}\r\n        />\r\n        {\r\n          depth === 1 ?\r\n            <text\r\n              x={x + width / 2}\r\n              y={y + height / 2 + 7}\r\n              textAnchor=\"middle\"\r\n              fill=\"#fff\"\r\n              fontSize={14}\r\n            >\r\n              {name}\r\n            </text>\r\n            : null\r\n        }\r\n        {\r\n          depth === 1 ?\r\n            <text\r\n              x={x + 4}\r\n              y={y + 18}\r\n              fill=\"#fff\"\r\n              fontSize={16}\r\n              fillOpacity={0.9}\r\n            >\r\n              {index + 1}\r\n            </text>\r\n            : null\r\n        }\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nconst CustomContentTreemap = () => (\r\n  <ResponsiveContainer width=\"100%\" height={200}>\r\n    <Treemap\r\n      data={data}\r\n      dataKey=\"size\"\r\n      ratio={4 / 3}\r\n      stroke=\"#fff\"\r\n      fill=\"#3367d6\"\r\n      content={<CustomizedContent colors={COLORS}/>}\r\n    />\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default CustomContentTreemap;"]},"metadata":{},"sourceType":"module"}