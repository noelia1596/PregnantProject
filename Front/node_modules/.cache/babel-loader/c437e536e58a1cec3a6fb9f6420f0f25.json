{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\src\\\\app\\\\routes\\\\components\\\\routes\\\\chips\\\\chipArray\\\\ChipsArray.js\";\nimport React, { Component } from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\n\nvar ChipsArray =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChipsArray, _Component);\n\n  function ChipsArray() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ChipsArray);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ChipsArray)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      chipData: [{\n        key: 0,\n        name: 'Domnic Harris',\n        image: 'https://via.placeholder.com/150x150'\n      }, {\n        key: 1,\n        name: 'Garry Sobars',\n        image: 'https://via.placeholder.com/150x150'\n      }, {\n        key: 2,\n        name: 'Stella Johnson',\n        image: 'https://via.placeholder.com/150x150'\n      }, {\n        key: 3,\n        name: 'Alex Dolgove',\n        image: 'https://via.placeholder.com/150x150'\n      }, {\n        key: 4,\n        name: 'John Smith',\n        image: 'https://via.placeholder.com/150x150'\n      }]\n    };\n\n    _this.handleRequestDelete = function (data) {\n      return function () {\n        var chipData = _toConsumableArray(_this.state.chipData);\n\n        var chipToDelete = chipData.indexOf(data);\n        chipData.splice(chipToDelete, 1);\n\n        _this.setState({\n          chipData: chipData\n        });\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(ChipsArray, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"manage-margin d-flex flex-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, this.state.chipData.map(function (data) {\n        return React.createElement(Chip, {\n          avatar: React.createElement(Avatar, {\n            src: data.image,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }),\n          label: data.name,\n          key: data.key,\n          onDelete: _this2.handleRequestDelete(data),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return ChipsArray;\n}(Component);\n\nexport default ChipsArray;","map":{"version":3,"sources":["C:\\Users\\Noelia\\Desktop\\jumbo-react-3.0.1\\source\\src\\app\\routes\\components\\routes\\chips\\chipArray\\ChipsArray.js"],"names":["React","Component","Chip","Avatar","ChipsArray","state","chipData","key","name","image","handleRequestDelete","data","chipToDelete","indexOf","splice","setState","map"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;IAEMC,U;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,CACR;AAACC,QAAAA,GAAG,EAAE,CAAN;AAASC,QAAAA,IAAI,EAAE,eAAf;AAAgCC,QAAAA,KAAK,EAAE;AAAvC,OADQ,EAER;AAACF,QAAAA,GAAG,EAAE,CAAN;AAASC,QAAAA,IAAI,EAAE,cAAf;AAA+BC,QAAAA,KAAK,EAAE;AAAtC,OAFQ,EAGR;AAACF,QAAAA,GAAG,EAAE,CAAN;AAASC,QAAAA,IAAI,EAAE,gBAAf;AAAiCC,QAAAA,KAAK,EAAE;AAAxC,OAHQ,EAIR;AAACF,QAAAA,GAAG,EAAE,CAAN;AAASC,QAAAA,IAAI,EAAE,cAAf;AAA+BC,QAAAA,KAAK,EAAE;AAAtC,OAJQ,EAKR;AAACF,QAAAA,GAAG,EAAE,CAAN;AAASC,QAAAA,IAAI,EAAE,YAAf;AAA6BC,QAAAA,KAAK,EAAC;AAAnC,OALQ;AADJ,K;;UAURC,mB,GAAsB,UAAAC,IAAI;AAAA,aAAI,YAAM;AAClC,YAAML,QAAQ,sBAAO,MAAKD,KAAL,CAAWC,QAAlB,CAAd;;AACA,YAAMM,YAAY,GAAGN,QAAQ,CAACO,OAAT,CAAiBF,IAAjB,CAArB;AACAL,QAAAA,QAAQ,CAACQ,MAAT,CAAgBF,YAAhB,EAA8B,CAA9B;;AACA,cAAKG,QAAL,CAAc;AAACT,UAAAA,QAAQ,EAARA;AAAD,SAAd;AACD,OALyB;AAAA,K;;;;;;;6BAOjB;AAAA;;AAEP,aACE;AAAK,QAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKD,KAAL,CAAWC,QAAX,CAAoBU,GAApB,CAAwB,UAAAL,IAAI,EAAI;AAC/B,eACE,oBAAC,IAAD;AACE,UAAA,MAAM,EAAE,oBAAC,MAAD;AAAQ,YAAA,GAAG,EAAEA,IAAI,CAACF,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADV;AAEE,UAAA,KAAK,EAAEE,IAAI,CAACH,IAFd;AAGE,UAAA,GAAG,EAAEG,IAAI,CAACJ,GAHZ;AAIE,UAAA,QAAQ,EAAE,MAAI,CAACG,mBAAL,CAAyBC,IAAzB,CAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,OATA,CADH,CADF;AAcD;;;;EAlCsBV,S;;AAqCzB,eAAeG,UAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nclass ChipsArray extends Component {\r\n  state = {\r\n    chipData: [\r\n      {key: 0, name: 'Domnic Harris', image: 'https://via.placeholder.com/150x150'},\r\n      {key: 1, name: 'Garry Sobars', image: 'https://via.placeholder.com/150x150'},\r\n      {key: 2, name: 'Stella Johnson', image: 'https://via.placeholder.com/150x150'},\r\n      {key: 3, name: 'Alex Dolgove', image: 'https://via.placeholder.com/150x150'},\r\n      {key: 4, name: 'John Smith', image:'https://via.placeholder.com/150x150'},\r\n    ],\r\n  };\r\n\r\n  handleRequestDelete = data => () => {\r\n    const chipData = [...this.state.chipData];\r\n    const chipToDelete = chipData.indexOf(data);\r\n    chipData.splice(chipToDelete, 1);\r\n    this.setState({chipData});\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"manage-margin d-flex flex-wrap\">\r\n        {this.state.chipData.map(data => {\r\n          return (\r\n            <Chip\r\n              avatar={<Avatar src={data.image}/>}\r\n              label={data.name}\r\n              key={data.key}\r\n              onDelete={this.handleRequestDelete(data)}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChipsArray;"]},"metadata":{},"sourceType":"module"}