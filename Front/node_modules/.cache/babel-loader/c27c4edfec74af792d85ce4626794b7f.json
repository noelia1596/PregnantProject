{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\src\\\\app\\\\routes\\\\components\\\\routes\\\\progressbar\\\\circular\\\\interactive\\\\CircularFab.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport green from '@material-ui/core/colors/green';\nimport grey from '@material-ui/core/colors/grey';\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport CheckIcon from '@material-ui/icons/Check';\nimport SaveIcon from '@material-ui/icons/Save';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    wrapper: {\n      margin: theme.spacing.unit,\n      position: 'relative'\n    },\n    buttonSuccess: {\n      backgroundColor: green[500],\n      color: grey[50],\n      '&:hover': {\n        backgroundColor: green[700]\n      }\n    },\n    fabProgress: {\n      color: green[500],\n      position: 'absolute',\n      top: -6,\n      left: -6,\n      zIndex: 1\n    },\n    buttonProgress: {\n      color: green[500],\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      marginTop: -12,\n      marginLeft: -12\n    }\n  };\n};\n\nvar CircularFab =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CircularFab, _React$Component);\n\n  function CircularFab() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CircularFab);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CircularFab)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: false,\n      success: false\n    };\n\n    _this.handleButtonClick = function () {\n      if (!_this.state.loading) {\n        _this.setState({\n          success: false,\n          loading: true\n        }, function () {\n          _this.timer = setTimeout(function () {\n            _this.setState({\n              loading: false,\n              success: true\n            });\n          }, 2000);\n        });\n      }\n    };\n\n    _this.timer = undefined;\n    return _this;\n  }\n\n  _createClass(CircularFab, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.timer);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loading = _this$state.loading,\n          success = _this$state.success;\n      var classes = this.props.classes;\n      var buttonClassname = classNames(_defineProperty({}, classes.buttonSuccess, success));\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.wrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Fab, {\n        color: \"primary\",\n        className: buttonClassname,\n        onClick: this.handleButtonClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, success ? React.createElement(CheckIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }) : React.createElement(SaveIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })), loading && React.createElement(CircularProgress, {\n        size: 68,\n        className: classes.fabProgress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: classes.wrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: buttonClassname,\n        disabled: loading,\n        onClick: this.handleButtonClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Accept terms\"), loading && React.createElement(CircularProgress, {\n        size: 24,\n        className: classes.buttonProgress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return CircularFab;\n}(React.Component);\n\nCircularFab.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(CircularFab);","map":{"version":3,"sources":["C:\\Users\\Noelia\\Desktop\\Plantillas\\source\\src\\app\\routes\\components\\routes\\progressbar\\circular\\interactive\\CircularFab.js"],"names":["React","PropTypes","classNames","withStyles","CircularProgress","green","grey","Button","Fab","CheckIcon","SaveIcon","styles","theme","root","display","alignItems","wrapper","margin","spacing","unit","position","buttonSuccess","backgroundColor","color","fabProgress","top","left","zIndex","buttonProgress","marginTop","marginLeft","CircularFab","state","loading","success","handleButtonClick","setState","timer","setTimeout","undefined","clearTimeout","classes","props","buttonClassname","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport green from '@material-ui/core/colors/green';\r\nimport grey from '@material-ui/core/colors/grey';\r\nimport Button from '@material-ui/core/Button';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  wrapper: {\r\n    margin: theme.spacing.unit,\r\n    position: 'relative',\r\n  },\r\n  buttonSuccess: {\r\n    backgroundColor: green[500],\r\n    color: grey[50],\r\n    '&:hover': {\r\n      backgroundColor: green[700],\r\n    },\r\n  },\r\n  fabProgress: {\r\n    color: green[500],\r\n    position: 'absolute',\r\n    top: -6,\r\n    left: -6,\r\n    zIndex: 1,\r\n  },\r\n  buttonProgress: {\r\n    color: green[500],\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n});\r\n\r\nclass CircularFab extends React.Component {\r\n  state = {\r\n    loading: false,\r\n    success: false,\r\n  };\r\n  handleButtonClick = () => {\r\n    if (!this.state.loading) {\r\n      this.setState(\r\n        {\r\n          success: false,\r\n          loading: true,\r\n        },\r\n        () => {\r\n          this.timer = setTimeout(() => {\r\n            this.setState({\r\n              loading: false,\r\n              success: true,\r\n            });\r\n          }, 2000);\r\n        },\r\n      );\r\n    }\r\n  };\r\n  timer = undefined;\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(this.timer);\r\n  }\r\n\r\n  render() {\r\n    const {loading, success} = this.state;\r\n    const {classes} = this.props;\r\n    const buttonClassname = classNames({\r\n      [classes.buttonSuccess]: success,\r\n    });\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <div className={classes.wrapper}>\r\n          <Fab color=\"primary\" className={buttonClassname} onClick={this.handleButtonClick}>\r\n            {success ? <CheckIcon/> : <SaveIcon/>}\r\n          </Fab>\r\n          {loading && <CircularProgress size={68} className={classes.fabProgress}/>}\r\n        </div>\r\n        <div className={classes.wrapper}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={buttonClassname}\r\n            disabled={loading}\r\n            onClick={this.handleButtonClick}\r\n          >\r\n            Accept terms\r\n          </Button>\r\n          {loading && <CircularProgress size={24} className={classes.buttonProgress}/>}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCircularFab.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(CircularFab);"]},"metadata":{},"sourceType":"module"}