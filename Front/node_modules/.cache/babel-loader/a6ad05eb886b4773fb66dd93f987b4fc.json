{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\src\\\\app\\\\routes\\\\components\\\\routes\\\\textFields\\\\formattedInputs\\\\FormattedInputs.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MaskedInput from 'react-text-mask';\nimport NumberFormat from 'react-number-format';\nimport Input from '@material-ui/core/Input';\n\nvar TextMaskCustom =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TextMaskCustom, _React$Component);\n\n  function TextMaskCustom() {\n    _classCallCheck(this, TextMaskCustom);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TextMaskCustom).apply(this, arguments));\n  }\n\n  _createClass(TextMaskCustom, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(MaskedInput, Object.assign({}, this.props, {\n        mask: ['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/],\n        placeholderChar: \"\\u2000\",\n        showMask: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TextMaskCustom;\n}(React.Component);\n\nvar NumberFormatCustom =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(NumberFormatCustom, _React$Component2);\n\n  function NumberFormatCustom() {\n    _classCallCheck(this, NumberFormatCustom);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NumberFormatCustom).apply(this, arguments));\n  }\n\n  _createClass(NumberFormatCustom, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(NumberFormat, Object.assign({}, this.props, {\n        onValueChange: function onValueChange(values) {\n          _this.props.onChange({\n            target: {\n              value: values.value\n            }\n          });\n        },\n        thousandSeparator: true,\n        prefix: \"$\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return NumberFormatCustom;\n}(React.Component);\n\nNumberFormatCustom.propTypes = {\n  onChange: PropTypes.func.isRequired\n};\n\nvar FormattedInputs =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(FormattedInputs, _React$Component3);\n\n  function FormattedInputs() {\n    var _getPrototypeOf2;\n\n    var _this2;\n\n    _classCallCheck(this, FormattedInputs);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FormattedInputs)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this2.state = {\n      textmask: '(1  )    -    ',\n      numberformat: '1320'\n    };\n\n    _this2.handleChange = function (name) {\n      return function (event) {\n        _this2.setState(_defineProperty({}, name, event.target.value));\n      };\n    };\n\n    return _this2;\n  }\n\n  _createClass(FormattedInputs, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-4 col-sm-6 col-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.textmask,\n        inputComponent: TextMaskCustom,\n        onChange: this.handleChange('textmask'),\n        className: \"w-100 mb-3\",\n        inputProps: {\n          'aria-label': 'Description'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-lg-4 col-sm-6 col-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.numberformat,\n        onChange: this.handleChange('numberformat'),\n        inputComponent: NumberFormatCustom,\n        className: \"w-100 mb-3\",\n        inputProps: {\n          'aria-label': 'Description'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return FormattedInputs;\n}(React.Component);\n\nexport default FormattedInputs;","map":{"version":3,"sources":["C:\\Users\\Noelia\\Desktop\\Plantillas\\source\\src\\app\\routes\\components\\routes\\textFields\\formattedInputs\\FormattedInputs.js"],"names":["React","PropTypes","MaskedInput","NumberFormat","Input","TextMaskCustom","props","Component","NumberFormatCustom","values","onChange","target","value","propTypes","func","isRequired","FormattedInputs","state","textmask","numberformat","handleChange","name","event","setState"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;IAEMC,c;;;;;;;;;;;;;6BACK;AACP,aACE,oBAAC,WAAD,oBACM,KAAKC,KADX;AAEE,QAAA,IAAI,EAAE,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,IAArB,EAA2B,GAA3B,EAAgC,GAAhC,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,GAAvD,EAA4D,IAA5D,EAAkE,IAAlE,EAAwE,IAAxE,EAA8E,IAA9E,CAFR;AAGE,QAAA,eAAe,EAAE,QAHnB;AAIE,QAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAQD;;;;EAV0BN,KAAK,CAACO,S;;IAa7BC,kB;;;;;;;;;;;;;6BACK;AAAA;;AACP,aACE,oBAAC,YAAD,oBACM,KAAKF,KADX;AAEE,QAAA,aAAa,EAAE,uBAAAG,MAAM,EAAI;AACvB,UAAA,KAAI,CAACH,KAAL,CAAWI,QAAX,CAAoB;AAClBC,YAAAA,MAAM,EAAE;AACNC,cAAAA,KAAK,EAAEH,MAAM,CAACG;AADR;AADU,WAApB;AAKD,SARH;AASE,QAAA,iBAAiB,MATnB;AAUE,QAAA,MAAM,EAAC,GAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAcD;;;;EAhB8BZ,KAAK,CAACO,S;;AAmBvCC,kBAAkB,CAACK,SAAnB,GAA+B;AAC7BH,EAAAA,QAAQ,EAAET,SAAS,CAACa,IAAV,CAAeC;AADI,CAA/B;;IAIMC,e;;;;;;;;;;;;;;;;;WACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,gBADJ;AAENC,MAAAA,YAAY,EAAE;AAFR,K;;WAKRC,Y,GAAe,UAAAC,IAAI;AAAA,aAAI,UAAAC,KAAK,EAAI;AAC9B,eAAKC,QAAL,qBACGF,IADH,EACUC,KAAK,CAACX,MAAN,CAAaC,KADvB;AAGD,OAJkB;AAAA,K;;;;;;;6BAMV;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAE,KAAKK,KAAL,CAAWC,QADpB;AAEE,QAAA,cAAc,EAAEb,cAFlB;AAGE,QAAA,QAAQ,EAAE,KAAKe,YAAL,CAAkB,UAAlB,CAHZ;AAIE,QAAA,SAAS,EAAC,YAJZ;AAKE,QAAA,UAAU,EAAE;AACV,wBAAc;AADJ,SALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAaE;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,YADpB;AAEE,QAAA,QAAQ,EAAE,KAAKC,YAAL,CAAkB,cAAlB,CAFZ;AAGE,QAAA,cAAc,EAAEZ,kBAHlB;AAIE,QAAA,SAAS,EAAC,YAJZ;AAKE,QAAA,UAAU,EAAE;AACV,wBAAc;AADJ,SALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAbF,CADF;AA2BD;;;;EAxC2BR,KAAK,CAACO,S;;AA2CpC,eAAeS,eAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MaskedInput from 'react-text-mask';\r\nimport NumberFormat from 'react-number-format';\r\nimport Input from '@material-ui/core/Input';\r\n\r\nclass TextMaskCustom extends React.Component {\r\n  render() {\r\n    return (\r\n      <MaskedInput\r\n        {...this.props}\r\n        mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\r\n        placeholderChar={'\\u2000'}\r\n        showMask\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nclass NumberFormatCustom extends React.Component {\r\n  render() {\r\n    return (\r\n      <NumberFormat\r\n        {...this.props}\r\n        onValueChange={values => {\r\n          this.props.onChange({\r\n            target: {\r\n              value: values.value,\r\n            },\r\n          });\r\n        }}\r\n        thousandSeparator\r\n        prefix=\"$\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nclass FormattedInputs extends React.Component {\r\n  state = {\r\n    textmask: '(1  )    -    ',\r\n    numberformat: '1320',\r\n  };\r\n\r\n  handleChange = name => event => {\r\n    this.setState({\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-4 col-sm-6 col-12\">\r\n          <Input\r\n            value={this.state.textmask}\r\n            inputComponent={TextMaskCustom}\r\n            onChange={this.handleChange('textmask')}\r\n            className=\"w-100 mb-3\"\r\n            inputProps={{\r\n              'aria-label': 'Description',\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-lg-4 col-sm-6 col-12\">\r\n          <Input\r\n            value={this.state.numberformat}\r\n            onChange={this.handleChange('numberformat')}\r\n            inputComponent={NumberFormatCustom}\r\n            className=\"w-100 mb-3\"\r\n            inputProps={{\r\n              'aria-label': 'Description',\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormattedInputs;"]},"metadata":{},"sourceType":"module"}