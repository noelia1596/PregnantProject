{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\src\\\\app\\\\routes\\\\components\\\\routes\\\\dialogs\\\\simple\\\\SimpleDialog.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AddIcon from '@material-ui/icons/Add';\n\nvar SimpleDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SimpleDialog, _Component);\n\n  function SimpleDialog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SimpleDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SimpleDialog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleRequestClose = function () {\n      _this.props.onClose(_this.props.selectedValue);\n    };\n\n    _this.handleListItemClick = function (value) {\n      _this.props.onClose(value);\n    };\n\n    return _this;\n  }\n\n  _createClass(SimpleDialog, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          users = _this$props.users,\n          onClose = _this$props.onClose,\n          selectedValue = _this$props.selectedValue,\n          other = _objectWithoutProperties(_this$props, [\"classes\", \"users\", \"onClose\", \"selectedValue\"]);\n\n      return React.createElement(Dialog, Object.assign({\n        onClose: this.handleRequestClose\n      }, other, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Set backup account\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, users.map(function (user) {\n        return React.createElement(ListItem, {\n          button: true,\n          onClick: function onClick() {\n            return _this2.handleListItemClick(user.email);\n          },\n          key: user.email,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(ListItemAvatar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(Avatar, {\n          alt: \"Remy Sharp\",\n          src: user.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        })), React.createElement(ListItemText, {\n          primary: user.email,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }));\n      }), React.createElement(ListItem, {\n        button: true,\n        onClick: function onClick() {\n          return _this2.handleListItemClick('addAccount');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(ListItemAvatar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(AddIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }))), React.createElement(ListItemText, {\n        primary: \"Add Account\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return SimpleDialog;\n}(Component);\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func,\n  selectedValue: PropTypes.string\n};\nexport default SimpleDialog;","map":{"version":3,"sources":["C:\\Users\\Noelia\\Desktop\\compra\\source\\src\\app\\routes\\components\\routes\\dialogs\\simple\\SimpleDialog.js"],"names":["React","Component","PropTypes","Avatar","List","ListItem","ListItemAvatar","ListItemText","Dialog","DialogTitle","AddIcon","SimpleDialog","handleRequestClose","props","onClose","selectedValue","handleListItemClick","value","classes","users","other","map","user","email","image","propTypes","func","string"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;IAGMC,Y;;;;;;;;;;;;;;;;;;UACJC,kB,GAAqB,YAAM;AACzB,YAAKC,KAAL,CAAWC,OAAX,CAAmB,MAAKD,KAAL,CAAWE,aAA9B;AACD,K;;UAEDC,mB,GAAsB,UAAAC,KAAK,EAAI;AAC7B,YAAKJ,KAAL,CAAWC,OAAX,CAAmBG,KAAnB;AACD,K;;;;;;;6BAEQ;AAAA;;AAAA,wBACoD,KAAKJ,KADzD;AAAA,UACAK,OADA,eACAA,OADA;AAAA,UACSC,KADT,eACSA,KADT;AAAA,UACgBL,OADhB,eACgBA,OADhB;AAAA,UACyBC,aADzB,eACyBA,aADzB;AAAA,UAC2CK,KAD3C;;AAGP,aACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKR;AAAtB,SAA8CQ,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,KAAK,CAACE,GAAN,CAAU,UAAAC,IAAI;AAAA,eACb,oBAAC,QAAD;AAAU,UAAA,MAAM,MAAhB;AAAiB,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACN,mBAAL,CAAyBM,IAAI,CAACC,KAA9B,CAAN;AAAA,WAA1B;AAAsE,UAAA,GAAG,EAAED,IAAI,CAACC,KAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,MAAD;AAAQ,UAAA,GAAG,EAAC,YAAZ;AAAyB,UAAA,GAAG,EAAED,IAAI,CAACE,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,EAIE,oBAAC,YAAD;AAAc,UAAA,OAAO,EAAEF,IAAI,CAACC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,CADa;AAAA,OAAd,CADH,EASE,oBAAC,QAAD;AAAU,QAAA,MAAM,MAAhB;AAAiB,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACP,mBAAL,CAAyB,YAAzB,CAAN;AAAA,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,EAME,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CATF,CADF,CAFF,CADF;AAyBD;;;;EArCwBf,S;;AAwC3BU,YAAY,CAACc,SAAb,GAAyB;AACvBX,EAAAA,OAAO,EAAEZ,SAAS,CAACwB,IADI;AAEvBX,EAAAA,aAAa,EAAEb,SAAS,CAACyB;AAFF,CAAzB;AAIA,eAAehB,YAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\n\r\nclass SimpleDialog extends Component {\r\n  handleRequestClose = () => {\r\n    this.props.onClose(this.props.selectedValue);\r\n  };\r\n\r\n  handleListItemClick = value => {\r\n    this.props.onClose(value);\r\n  };\r\n\r\n  render() {\r\n    const {classes, users, onClose, selectedValue, ...other} = this.props;\r\n\r\n    return (\r\n      <Dialog onClose={this.handleRequestClose} {...other}>\r\n        <DialogTitle>Set backup account</DialogTitle>\r\n        <div>\r\n          <List>\r\n            {users.map(user =>\r\n              <ListItem button onClick={() => this.handleListItemClick(user.email)} key={user.email}>\r\n                <ListItemAvatar>\r\n                  <Avatar alt=\"Remy Sharp\" src={user.image}/>\r\n                </ListItemAvatar>\r\n                <ListItemText primary={user.email}/>\r\n              </ListItem>,\r\n            )}\r\n            <ListItem button onClick={() => this.handleListItemClick('addAccount')}>\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <AddIcon/>\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary=\"Add Account\"/>\r\n            </ListItem>\r\n          </List>\r\n        </div>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n  onClose: PropTypes.func,\r\n  selectedValue: PropTypes.string,\r\n};\r\nexport default SimpleDialog;\r\n"]},"metadata":{},"sourceType":"module"}