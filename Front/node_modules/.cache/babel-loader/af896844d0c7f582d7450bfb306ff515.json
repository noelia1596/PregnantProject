{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\src\\\\app\\\\routes\\\\contact\\\\redux\\\\index.js\";\nimport React, { Component } from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport { connect } from 'react-redux';\nimport IconButton from '@material-ui/core/IconButton';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport ContactList from 'components/contact/ContactList';\nimport AppModuleHeader from 'components/AppModuleHeader/index';\nimport AddContact from 'components/contact/AddContact';\nimport IntlMessages from 'util/IntlMessages';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { addFavourite, fetchContacts, filterContact, getAllContact, getUnselectedAllContact, handleRequestClose, onAddContact, onAllContactSelect, onContactClose, onContactSelect, onDeleteContact, onDeleteSelectedContact, onFilterOptionSelect, onSaveContact, onToggleDrawer, updateContactUser } from 'actions/Contact';\nimport CustomScrollbars from 'util/CustomScrollbars';\nvar contactId = 723812738;\nvar filterOptions = [{\n  id: 1,\n  name: 'All contacts',\n  icon: 'zmdi-menu'\n}, {\n  id: 2,\n  name: 'Frequently contacted',\n  icon: 'zmdi-time-restore'\n}, {\n  id: 3,\n  name: 'Starred contacts',\n  icon: 'zmdi-star'\n}];\n\nvar ContactWithRedux =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContactWithRedux, _Component);\n\n  function ContactWithRedux() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ContactWithRedux);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ContactWithRedux)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.ContactSideBar = function (user) {\n      return React.createElement(\"div\", {\n        className: \"module-side\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"module-side-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"module-logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"zmdi zmdi-account-box mr-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"chat.contacts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"module-side-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(CustomScrollbars, {\n        className: \"module-side-scroll scrollbar\",\n        style: {\n          height: _this.props.width >= 1200 ? 'calc(100vh - 200px)' : 'calc(100vh - 80px)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"module-add-task\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"jr-btn btn-block\",\n        variant: \"contained\",\n        color: \"primary\",\n        \"aria-label\": \"add\",\n        onClick: _this.onAddContact,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"zmdi zmdi-account-add zmdi-hc-fw\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Add New Contact\"))), React.createElement(\"div\", {\n        className: \"module-side-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"module-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, filterOptions.map(function (option) {\n        return React.createElement(\"li\", {\n          key: option.id,\n          className: \"nav-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"jr-link \".concat(option.id === _this.props.selectedSectionId ? 'active' : ''),\n          onClick: _this.onFilterOptionSelect.bind(_assertThisInitialized(_assertThisInitialized(_this)), option),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"zmdi \".concat(option.icon),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, option.name)));\n      }))))));\n    };\n\n    _this.addFavourite = function (data) {\n      _this.props.addFavourite(data);\n    };\n\n    _this.onContactSelect = function (data) {\n      _this.props.onContactSelect(data);\n    };\n\n    _this.onAddContact = function () {\n      _this.props.onAddContact();\n    };\n\n    _this.onContactClose = function () {\n      _this.props.onContactClose();\n    };\n\n    _this.onFilterOptionSelect = function (option) {\n      _this.props.onFilterOptionSelect(option);\n    };\n\n    _this.onSaveContact = function (data) {\n      _this.props.onSaveContact(data);\n    };\n\n    _this.onDeleteContact = function (data) {\n      _this.props.onDeleteContact(data);\n    };\n\n    _this.onDeleteSelectedContact = function () {\n      _this.props.onDeleteSelectedContact();\n    };\n\n    _this.filterContact = function (userName) {\n      if (userName === '') {\n        _this.onFilterOptionSelect(_this.props.filterOption);\n      } else {\n        _this.props.filterContact(userName);\n      }\n    };\n\n    _this.handleRequestClose = function () {\n      _this.props.handleRequestClose();\n    };\n\n    _this.onAllContactSelect = function () {\n      var selectAll = _this.props.selectedContacts < _this.props.contactList.length;\n\n      if (selectAll) {\n        _this.props.getAllContact();\n      } else {\n        _this.props.getUnselectedAllContact();\n      }\n    };\n\n    _this.onToggleDrawer = function () {\n      _this.props.onToggleDrawer();\n    };\n\n    return _this;\n  }\n\n  _createClass(ContactWithRedux, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.fetchContacts();\n    }\n  }, {\n    key: \"updateContactUser\",\n    value: function updateContactUser(evt) {\n      this.props.updateContactUser(evt.target.value);\n      this.props.filterContact(evt.target.value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          user = _this$props.user,\n          contactList = _this$props.contactList,\n          addContactState = _this$props.addContactState,\n          selectedContacts = _this$props.selectedContacts,\n          alertMessage = _this$props.alertMessage,\n          showMessage = _this$props.showMessage,\n          drawerState = _this$props.drawerState,\n          noContentFoundMessage = _this$props.noContentFoundMessage,\n          loader = _this$props.loader;\n      console.log(\"contactList--\", contactList);\n      return React.createElement(\"div\", {\n        className: \"app-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"app-module animated slideInUpTiny animation-duration-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"d-block d-xl-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Drawer, {\n        open: drawerState,\n        onClose: this.onToggleDrawer.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, this.ContactSideBar(user))), React.createElement(\"div\", {\n        className: \"app-module-sidenav d-none d-xl-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, this.ContactSideBar(user)), React.createElement(\"div\", {\n        className: \"module-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"module-box-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        className: \"drawer-btn d-block d-xl-none\",\n        \"aria-label\": \"Menu\",\n        onClick: this.onToggleDrawer.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"zmdi zmdi-menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      })), React.createElement(AppModuleHeader, {\n        placeholder: \"Search contact\",\n        notification: false,\n        apps: false,\n        user: this.props.user,\n        onChange: this.updateContactUser.bind(this),\n        value: this.props.searchUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"module-box-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"module-box-topbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        color: \"primary\",\n        indeterminate: selectedContacts > 0 && selectedContacts < contactList.length,\n        checked: selectedContacts > 0,\n        onChange: this.onAllContactSelect.bind(this),\n        value: \"SelectMail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }), selectedContacts > 0 && React.createElement(IconButton, {\n        className: \"icon-btn\",\n        onClick: this.onDeleteSelectedContact.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"zmdi zmdi-delete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }))), React.createElement(CustomScrollbars, {\n        className: \"module-list-scroll scrollbar\",\n        style: {\n          height: this.props.width >= 1200 ? 'calc(100vh - 265px)' : 'calc(100vh - 245px)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, loader ? React.createElement(\"div\", {\n        className: \"loader-view-block h-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"loader-view\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(CircularProgress, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }))) : contactList.length === 0 ? React.createElement(\"div\", {\n        className: \"h-100 d-flex align-items-center justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, noContentFoundMessage) : React.createElement(ContactList, {\n        contactList: contactList,\n        addFavourite: this.addFavourite.bind(this),\n        onContactSelect: this.onContactSelect.bind(this),\n        onDeleteContact: this.onDeleteContact.bind(this),\n        onSaveContact: this.onSaveContact.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }))))), React.createElement(AddContact, {\n        open: addContactState,\n        contact: {\n          'id': contactId++,\n          'name': '',\n          'thumb': '',\n          'email': '',\n          'phone': '',\n          'designation': '',\n          'selected': false,\n          'starred': false,\n          'frequently': false\n        },\n        onSaveContact: this.onSaveContact,\n        onContactClose: this.onContactClose,\n        onDeleteContact: this.onDeleteContact,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }), React.createElement(Snackbar, {\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'center'\n        },\n        open: showMessage,\n        autoHideDuration: 3000,\n        onClose: this.handleRequestClose,\n        ContentProps: {\n          'aria-describedby': 'message-id'\n        },\n        message: React.createElement(\"span\", {\n          id: \"message-id\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243\n          },\n          __self: this\n        }, alertMessage),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ContactWithRedux;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var contacts = _ref.contacts,\n      settings = _ref.settings;\n  var width = settings.width;\n  var loader = contacts.loader,\n      alertMessage = contacts.alertMessage,\n      showMessage = contacts.showMessage,\n      noContentFoundMessage = contacts.noContentFoundMessage,\n      selectedSectionId = contacts.selectedSectionId,\n      drawerState = contacts.drawerState,\n      user = contacts.user,\n      searchUser = contacts.searchUser,\n      filterOption = contacts.filterOption,\n      allContact = contacts.allContact,\n      contactList = contacts.contactList,\n      selectedContact = contacts.selectedContact,\n      selectedContacts = contacts.selectedContacts,\n      addContactState = contacts.addContactState;\n  return {\n    width: width,\n    loader: loader,\n    alertMessage: alertMessage,\n    showMessage: showMessage,\n    noContentFoundMessage: noContentFoundMessage,\n    selectedSectionId: selectedSectionId,\n    drawerState: drawerState,\n    user: user,\n    searchUser: searchUser,\n    filterOption: filterOption,\n    allContact: allContact,\n    contactList: contactList,\n    selectedContact: selectedContact,\n    selectedContacts: selectedContacts,\n    addContactState: addContactState\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchContacts: fetchContacts,\n  addFavourite: addFavourite,\n  onContactSelect: onContactSelect,\n  onAddContact: onAddContact,\n  onContactClose: onContactClose,\n  onFilterOptionSelect: onFilterOptionSelect,\n  onSaveContact: onSaveContact,\n  onDeleteContact: onDeleteContact,\n  onDeleteSelectedContact: onDeleteSelectedContact,\n  filterContact: filterContact,\n  getAllContact: getAllContact,\n  getUnselectedAllContact: getUnselectedAllContact,\n  onAllContactSelect: onAllContactSelect,\n  updateContactUser: updateContactUser,\n  onToggleDrawer: onToggleDrawer,\n  handleRequestClose: handleRequestClose\n})(ContactWithRedux);","map":{"version":3,"sources":["C:\\Users\\Noelia\\Desktop\\Plantillas\\source\\src\\app\\routes\\contact\\redux\\index.js"],"names":["React","Component","Drawer","connect","IconButton","Checkbox","Button","Snackbar","ContactList","AppModuleHeader","AddContact","IntlMessages","CircularProgress","addFavourite","fetchContacts","filterContact","getAllContact","getUnselectedAllContact","handleRequestClose","onAddContact","onAllContactSelect","onContactClose","onContactSelect","onDeleteContact","onDeleteSelectedContact","onFilterOptionSelect","onSaveContact","onToggleDrawer","updateContactUser","CustomScrollbars","contactId","filterOptions","id","name","icon","ContactWithRedux","ContactSideBar","user","height","props","width","map","option","selectedSectionId","bind","data","userName","filterOption","selectAll","selectedContacts","contactList","length","evt","target","value","addContactState","alertMessage","showMessage","drawerState","noContentFoundMessage","loader","console","log","searchUser","vertical","horizontal","mapStateToProps","contacts","settings","allContact","selectedContact"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport {connect} from 'react-redux'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport ContactList from 'components/contact/ContactList';\r\nimport AppModuleHeader from 'components/AppModuleHeader/index';\r\nimport AddContact from 'components/contact/AddContact';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {\r\n  addFavourite,\r\n  fetchContacts,\r\n  filterContact,\r\n  getAllContact,\r\n  getUnselectedAllContact,\r\n  handleRequestClose,\r\n  onAddContact,\r\n  onAllContactSelect,\r\n  onContactClose,\r\n  onContactSelect,\r\n  onDeleteContact,\r\n  onDeleteSelectedContact,\r\n  onFilterOptionSelect,\r\n  onSaveContact,\r\n  onToggleDrawer,\r\n  updateContactUser\r\n} from 'actions/Contact';\r\n\r\nimport CustomScrollbars from 'util/CustomScrollbars';\r\n\r\nlet contactId = 723812738;\r\n\r\nconst filterOptions = [\r\n  {\r\n    id: 1,\r\n    name: 'All contacts',\r\n    icon: 'zmdi-menu'\r\n  }, {\r\n    id: 2,\r\n    name: 'Frequently contacted',\r\n    icon: 'zmdi-time-restore'\r\n\r\n  }, {\r\n\r\n    id: 3,\r\n    name: 'Starred contacts',\r\n    icon: 'zmdi-star'\r\n  }\r\n];\r\n\r\nclass ContactWithRedux extends Component {\r\n\r\n  ContactSideBar = (user) => {\r\n    return <div className=\"module-side\">\r\n      <div className=\"module-side-header\">\r\n        <div className=\"module-logo\">\r\n          <i className=\"zmdi zmdi-account-box mr-4\"/>\r\n          <span><IntlMessages id=\"chat.contacts\"/></span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"module-side-content\">\r\n        <CustomScrollbars className=\"module-side-scroll scrollbar\"\r\n                          style={{height: this.props.width >= 1200 ? 'calc(100vh - 200px)' : 'calc(100vh - 80px)'}}>\r\n          <div className=\"module-add-task\">\r\n            <Button className=\"jr-btn btn-block\" variant=\"contained\" color=\"primary\" aria-label=\"add\"\r\n                    onClick={this.onAddContact}>\r\n              <i className=\"zmdi zmdi-account-add zmdi-hc-fw\"/>\r\n              <span>Add New Contact</span>\r\n            </Button>\r\n          </div>\r\n          <div className=\"module-side-nav\">\r\n            <ul className=\"module-nav\">\r\n              {filterOptions.map(option => <li key={option.id} className=\"nav-item\">\r\n                  <span\r\n                     className={`jr-link ${option.id === this.props.selectedSectionId ? 'active' : ''}`} onClick={\r\n                    this.onFilterOptionSelect.bind(this, option)\r\n                  }>\r\n                    <i className={`zmdi ${option.icon}`}/>\r\n                    <span>{option.name}</span>\r\n                  </span>\r\n                </li>\r\n              )}\r\n\r\n            </ul>\r\n          </div>\r\n        </CustomScrollbars>\r\n      </div>\r\n    </div>\r\n\r\n  };\r\n\r\n  addFavourite = (data) => {\r\n    this.props.addFavourite(data);\r\n  };\r\n  onContactSelect = (data) => {\r\n    this.props.onContactSelect(data);\r\n  };\r\n\r\n  onAddContact = () => {\r\n    this.props.onAddContact();\r\n  };\r\n  onContactClose = () => {\r\n    this.props.onContactClose();\r\n  };\r\n  onFilterOptionSelect = (option) => {\r\n    this.props.onFilterOptionSelect(option);\r\n  };\r\n  onSaveContact = (data) => {\r\n    this.props.onSaveContact(data);\r\n  };\r\n  onDeleteContact = (data) => {\r\n    this.props.onDeleteContact(data);\r\n  };\r\n  onDeleteSelectedContact = () => {\r\n    this.props.onDeleteSelectedContact();\r\n  };\r\n  filterContact = (userName) => {\r\n    if (userName === '') {\r\n      this.onFilterOptionSelect(this.props.filterOption);\r\n    } else {\r\n      this.props.filterContact(userName);\r\n    }\r\n  };\r\n  handleRequestClose = () => {\r\n    this.props.handleRequestClose();\r\n  };\r\n  onAllContactSelect = () => {\r\n    const selectAll = this.props.selectedContacts < this.props.contactList.length;\r\n    if (selectAll) {\r\n      this.props.getAllContact();\r\n    } else {\r\n      this.props.getUnselectedAllContact();\r\n    }\r\n  };\r\n  onToggleDrawer = () => {\r\n    this.props.onToggleDrawer();\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n\r\n  updateContactUser(evt) {\r\n    this.props.updateContactUser(evt.target.value);\r\n    this.props.filterContact(evt.target.value)\r\n  }\r\n\r\n  render() {\r\n    const {user, contactList, addContactState, selectedContacts, alertMessage, showMessage, drawerState, noContentFoundMessage, loader} = this.props;\r\n    console.log(\"contactList--\",contactList)\r\n    return (\r\n      <div className=\"app-wrapper\">\r\n        <div className=\"app-module animated slideInUpTiny animation-duration-3\">\r\n\r\n          <div className=\"d-block d-xl-none\">\r\n            <Drawer\r\n              open={drawerState}\r\n              onClose={this.onToggleDrawer.bind(this)}>\r\n              {this.ContactSideBar(user)}\r\n            </Drawer>\r\n          </div>\r\n          <div className=\"app-module-sidenav d-none d-xl-flex\">\r\n            {this.ContactSideBar(user)}\r\n          </div>\r\n\r\n          <div className=\"module-box\">\r\n            <div className=\"module-box-header\">\r\n              <IconButton className=\"drawer-btn d-block d-xl-none\" aria-label=\"Menu\"\r\n                          onClick={this.onToggleDrawer.bind(this)}>\r\n                <i className=\"zmdi zmdi-menu\"/>\r\n              </IconButton>\r\n              <AppModuleHeader placeholder=\"Search contact\" notification={false} apps={false}\r\n                               user={this.props.user}\r\n                               onChange={this.updateContactUser.bind(this)}\r\n                               value={this.props.searchUser}/>\r\n            </div>\r\n            <div className=\"module-box-content\">\r\n\r\n              <div className=\"module-box-topbar\">\r\n                <Checkbox color=\"primary\"\r\n                          indeterminate={selectedContacts > 0 && selectedContacts < contactList.length}\r\n                          checked={selectedContacts > 0}\r\n                          onChange={this.onAllContactSelect.bind(this)}\r\n                          value=\"SelectMail\"/>\r\n\r\n\r\n                {selectedContacts > 0 &&\r\n                <IconButton className=\"icon-btn\"\r\n                  onClick={this.onDeleteSelectedContact.bind(this)}>\r\n                  <i className=\"zmdi zmdi-delete\"/>\r\n                </IconButton>}\r\n\r\n              </div>\r\n              <CustomScrollbars className=\"module-list-scroll scrollbar\"\r\n                                style={{height: this.props.width >= 1200 ? 'calc(100vh - 265px)' : 'calc(100vh - 245px)'}}>\r\n                {loader ?\r\n                  <div className=\"loader-view-block h-100\">\r\n                    <div className=\"loader-view\">\r\n                      <CircularProgress/>\r\n                    </div>\r\n                  </div>\r\n                  :\r\n                  contactList.length === 0 ?\r\n                    <div className=\"h-100 d-flex align-items-center justify-content-center\">\r\n                      {noContentFoundMessage}\r\n                    </div>\r\n                    : <ContactList contactList={contactList}\r\n                                   addFavourite={this.addFavourite.bind(this)}\r\n                                   onContactSelect={this.onContactSelect.bind(this)}\r\n                                   onDeleteContact={this.onDeleteContact.bind(this)}\r\n                                   onSaveContact={this.onSaveContact.bind(this)}/>\r\n                }\r\n              </CustomScrollbars>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <AddContact open={addContactState} contact={{\r\n          'id': contactId++,\r\n          'name': '',\r\n          'thumb': '',\r\n          'email': '',\r\n          'phone': '',\r\n          'designation': '',\r\n          'selected': false,\r\n          'starred': false,\r\n          'frequently': false,\r\n        }} onSaveContact={this.onSaveContact}\r\n                    onContactClose={this.onContactClose} onDeleteContact={this.onDeleteContact}/>\r\n        <Snackbar\r\n          anchorOrigin={{vertical: 'top', horizontal: 'center'}}\r\n          open={showMessage}\r\n          autoHideDuration={3000}\r\n          onClose={this.handleRequestClose}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id',\r\n          }}\r\n          message={<span id=\"message-id\">{alertMessage}</span>}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = ({contacts, settings}) => {\r\n  const {width} = settings;\r\n  const {\r\n    loader,\r\n    alertMessage,\r\n    showMessage,\r\n    noContentFoundMessage,\r\n    selectedSectionId,\r\n    drawerState,\r\n    user,\r\n    searchUser,\r\n    filterOption,\r\n    allContact,\r\n    contactList,\r\n    selectedContact,\r\n    selectedContacts,\r\n    addContactState\r\n  } = contacts;\r\n  return {\r\n    width,\r\n    loader,\r\n    alertMessage,\r\n    showMessage,\r\n    noContentFoundMessage,\r\n    selectedSectionId,\r\n    drawerState,\r\n    user,\r\n    searchUser,\r\n    filterOption,\r\n    allContact,\r\n    contactList,\r\n    selectedContact,\r\n    selectedContacts,\r\n    addContactState\r\n  }\r\n};\r\nexport default connect(mapStateToProps, {\r\n  fetchContacts,\r\n  addFavourite,\r\n  onContactSelect,\r\n  onAddContact,\r\n  onContactClose,\r\n  onFilterOptionSelect,\r\n  onSaveContact,\r\n  onDeleteContact,\r\n  onDeleteSelectedContact,\r\n  filterContact,\r\n  getAllContact,\r\n  getUnselectedAllContact,\r\n  onAllContactSelect,\r\n  updateContactUser,\r\n  onToggleDrawer,\r\n  handleRequestClose\r\n})(ContactWithRedux);"]},"metadata":{},"sourceType":"module"}