{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\src\\\\app\\\\routes\\\\map\\\\routes\\\\eventHanlder\\\\Components\\\\EventHandler.js\";\nimport React, { Component } from \"react\";\nimport { GoogleMap, InfoWindow, withGoogleMap } from \"react-google-maps\";\nvar google = window.google;\nvar GettingPropertiesExampleGoogleMap = withGoogleMap(function (props) {\n  return React.createElement(GoogleMap, {\n    ref: props.onMapMounted,\n    onZoomChanged: props.onZoomChanged,\n    defaultCenter: props.center,\n    zoom: props.zoom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(InfoWindow, {\n    defaultPosition: props.center,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, props.content)));\n});\n/*\r\n * https://developers.google.com/maps/documentation/javascript/examples/event-properties\r\n *\r\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\r\n */\n\nvar EventHandler =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EventHandler, _Component);\n\n  function EventHandler() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EventHandler);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EventHandler)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      zoom: 15,\n      content: \"Change the zoom level\"\n    };\n    _this.handleMapMounted = _this.handleMapMounted.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleZoomChanged = _this.handleZoomChanged.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EventHandler, [{\n    key: \"handleMapMounted\",\n    value: function handleMapMounted(map) {\n      this._map = map;\n    }\n  }, {\n    key: \"handleZoomChanged\",\n    value: function handleZoomChanged() {\n      var nextZoom = this._map.getZoom();\n\n      if (nextZoom !== this.state.zoom) {\n        // Notice: Check zoom equality here,\n        // or it will fire zoom_changed event infinitely\n        this.setState({\n          zoom: nextZoom,\n          content: \"Zoom: \".concat(nextZoom)\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(GettingPropertiesExampleGoogleMap, {\n        containerElement: React.createElement(\"div\", {\n          className: \"embed-responsive embed-responsive-21by9\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }),\n        mapElement: React.createElement(\"div\", {\n          className: \"embed-responsive-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }),\n        onMapMounted: this.handleMapMounted,\n        onZoomChanged: this.handleZoomChanged,\n        center: new google.maps.LatLng(47.646935, -122.303763),\n        zoom: this.state.zoom,\n        content: this.state.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return EventHandler;\n}(Component);\n\nexport { EventHandler as default };","map":{"version":3,"sources":["C:\\Users\\Noelia\\Desktop\\jumbo-react-3.0.1\\source\\src\\app\\routes\\map\\routes\\eventHanlder\\Components\\EventHandler.js"],"names":["React","Component","GoogleMap","InfoWindow","withGoogleMap","google","window","GettingPropertiesExampleGoogleMap","props","onMapMounted","onZoomChanged","center","zoom","content","EventHandler","state","handleMapMounted","bind","handleZoomChanged","map","_map","nextZoom","getZoom","setState","maps","LatLng"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,EAAmBC,UAAnB,EAA+BC,aAA/B,QAAmD,mBAAnD;AAEA,IAAMC,MAAM,GAAGC,MAAM,CAACD,MAAtB;AAEA,IAAME,iCAAiC,GAAGH,aAAa,CAAC,UAAAI,KAAK;AAAA,SAC3D,oBAAC,SAAD;AACE,IAAA,GAAG,EAAEA,KAAK,CAACC,YADb;AAEE,IAAA,aAAa,EAAED,KAAK,CAACE,aAFvB;AAGE,IAAA,aAAa,EAAEF,KAAK,CAACG,MAHvB;AAIE,IAAA,IAAI,EAAEH,KAAK,CAACI,IAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,UAAD;AACE,IAAA,eAAe,EAAEJ,KAAK,CAACG,MADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMH,KAAK,CAACK,OAAZ,CAHF,CANF,CAD2D;AAAA,CAAN,CAAvD;AAeA;;;;;;IAKqBC,Y;;;;;;;;;;;;;;;;;UAEnBC,K,GAAQ;AACNH,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,OAAO;AAFD,K;UAKRG,gB,GAAmB,MAAKA,gBAAL,CAAsBC,IAAtB,uD;UACnBC,iB,GAAoB,MAAKA,iBAAL,CAAuBD,IAAvB,uD;;;;;;qCAEHE,G,EAAK;AACpB,WAAKC,IAAL,GAAYD,GAAZ;AACD;;;wCAEmB;AAClB,UAAME,QAAQ,GAAG,KAAKD,IAAL,CAAUE,OAAV,EAAjB;;AACA,UAAID,QAAQ,KAAK,KAAKN,KAAL,CAAWH,IAA5B,EAAkC;AAChC;AACA;AACA,aAAKW,QAAL,CAAc;AACZX,UAAAA,IAAI,EAAES,QADM;AAEZR,UAAAA,OAAO,kBAAWQ,QAAX;AAFK,SAAd;AAID;AACF;;;6BAEQ;AACP,aACE,oBAAC,iCAAD;AACE,QAAA,gBAAgB,EACd;AAAK,UAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAIE,QAAA,UAAU,EAAE;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJd;AAKE,QAAA,YAAY,EAAE,KAAKL,gBALrB;AAME,QAAA,aAAa,EAAE,KAAKE,iBANtB;AAOE,QAAA,MAAM,EAAE,IAAIb,MAAM,CAACmB,IAAP,CAAYC,MAAhB,CAAuB,SAAvB,EAAkC,CAAC,UAAnC,CAPV;AAQE,QAAA,IAAI,EAAE,KAAKV,KAAL,CAAWH,IARnB;AASE,QAAA,OAAO,EAAE,KAAKG,KAAL,CAAWF,OATtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAaD;;;;EAxCuCZ,S;;SAArBa,Y","sourcesContent":["import React, {Component} from \"react\";\r\nimport {GoogleMap, InfoWindow, withGoogleMap} from \"react-google-maps\";\r\n\r\nconst google = window.google;\r\n\r\nconst GettingPropertiesExampleGoogleMap = withGoogleMap(props => (\r\n  <GoogleMap\r\n    ref={props.onMapMounted}\r\n    onZoomChanged={props.onZoomChanged}\r\n    defaultCenter={props.center}\r\n    zoom={props.zoom}\r\n  >\r\n    <InfoWindow\r\n      defaultPosition={props.center}\r\n    >\r\n      <div>{props.content}</div>\r\n    </InfoWindow>\r\n  </GoogleMap>\r\n));\r\n\r\n/*\r\n * https://developers.google.com/maps/documentation/javascript/examples/event-properties\r\n *\r\n * Add <script src=\"https://maps.googleapis.com/maps/api/js\"></script> to your HTML to provide google.maps reference\r\n */\r\nexport default class EventHandler extends Component {\r\n\r\n  state = {\r\n    zoom: 15,\r\n    content: `Change the zoom level`,\r\n  };\r\n\r\n  handleMapMounted = this.handleMapMounted.bind(this);\r\n  handleZoomChanged = this.handleZoomChanged.bind(this);\r\n\r\n  handleMapMounted(map) {\r\n    this._map = map;\r\n  }\r\n\r\n  handleZoomChanged() {\r\n    const nextZoom = this._map.getZoom();\r\n    if (nextZoom !== this.state.zoom) {\r\n      // Notice: Check zoom equality here,\r\n      // or it will fire zoom_changed event infinitely\r\n      this.setState({\r\n        zoom: nextZoom,\r\n        content: `Zoom: ${nextZoom}`,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <GettingPropertiesExampleGoogleMap\r\n        containerElement={\r\n          <div className=\"embed-responsive embed-responsive-21by9\"/>\r\n        }\r\n        mapElement={<div className=\"embed-responsive-item\"/>}\r\n        onMapMounted={this.handleMapMounted}\r\n        onZoomChanged={this.handleZoomChanged}\r\n        center={new google.maps.LatLng(47.646935, -122.303763)}\r\n        zoom={this.state.zoom}\r\n        content={this.state.content}\r\n      />\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}