{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\src\\\\components\\\\contact\\\\ContactList\\\\ContactCell\\\\index.js\";\nimport React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AddContact from '../../AddContact/index';\n\nvar ContactCell =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ContactCell, _React$Component);\n\n  function ContactCell() {\n    var _this;\n\n    _classCallCheck(this, ContactCell);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ContactCell).call(this));\n\n    _this.onContactOptionSelect = function (event) {\n      _this.setState({\n        menuState: true,\n        anchorEl: event.currentTarget\n      });\n    };\n\n    _this.handleRequestClose = function () {\n      _this.setState({\n        menuState: false\n      });\n    };\n\n    _this.onContactClose = function () {\n      _this.setState({\n        addContactState: false\n      });\n    };\n\n    _this.onDeleteContact = function (contact) {\n      _this.setState({\n        addContactState: false\n      });\n\n      _this.props.onDeleteContact(contact);\n    };\n\n    _this.onEditContact = function () {\n      _this.setState({\n        menuState: false,\n        addContactState: true\n      });\n    };\n\n    _this.state = {\n      anchorEl: undefined,\n      menuState: false,\n      addContactState: false\n    };\n    return _this;\n  }\n\n  _createClass(ContactCell, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          contact = _this$props.contact,\n          addFavourite = _this$props.addFavourite,\n          onContactSelect = _this$props.onContactSelect,\n          onSaveContact = _this$props.onSaveContact;\n      var _this$state = this.state,\n          menuState = _this$state.menuState,\n          anchorEl = _this$state.anchorEl,\n          addContactState = _this$state.addContactState;\n      var name = contact.name,\n          thumb = contact.thumb,\n          email = contact.email,\n          phone = contact.phone,\n          designation = contact.designation,\n          starred = contact.starred;\n      console.log(\"thumb-->\", thumb);\n      var options = ['Edit', 'Delete'];\n      return React.createElement(\"div\", {\n        className: \"contact-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        color: \"primary\",\n        checked: contact.selected,\n        value: \"checkedF\",\n        onClick: function onClick() {\n          onContactSelect(contact);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-auto px-1 actions d-none d-xs-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        className: \"icon-btn p-1\",\n        onClick: function onClick() {\n          addFavourite(contact);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, starred ? React.createElement(\"i\", {\n        className: \"zmdi zmdi-star\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }) : React.createElement(\"i\", {\n        className: \"zmdi zmdi-star-outline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }))), thumb === null || thumb === '' ? React.createElement(\"div\", {\n        className: \"rounded-circle size-40 bg-blue text-center text-white mx-1 mx-md-3\",\n        style: {\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, name.charAt(0).toUpperCase()) : React.createElement(\"img\", {\n        className: \"rounded-circle size-40 mx-1 mx-md-3\",\n        alt: name,\n        src: thumb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col con-inf-mw-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"text-truncate contact-name text-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, name), React.createElement(\"span\", {\n        className: \"d-inline-block toolbar-separator\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"\\xA0\"), React.createElement(\"span\", {\n        className: \"text-truncate job-title text-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, designation)), React.createElement(\"div\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"email d-inline-block mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, email, \",\"), React.createElement(\"span\", {\n        className: \"phone d-inline-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, phone))), React.createElement(\"div\", {\n        className: \"col-auto px-1 actions d-none d-sm-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        className: \"icon-btn p-2\",\n        onClick: this.onContactOptionSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"zmdi zmdi-more-vert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })), React.createElement(Menu, {\n        id: \"long-menu\",\n        anchorEl: anchorEl,\n        open: menuState,\n        onClose: this.handleRequestClose,\n        MenuListProps: {\n          style: {\n            width: 100\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, options.map(function (option) {\n        return React.createElement(MenuItem, {\n          key: option,\n          onClick: function onClick() {\n            if (option === 'Edit') {\n              _this2.onEditContact();\n            } else {\n              _this2.handleRequestClose();\n\n              _this2.onDeleteContact(contact);\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, option);\n      })), addContactState && React.createElement(AddContact, {\n        open: addContactState,\n        contact: contact,\n        onSaveContact: onSaveContact,\n        onContactClose: this.onContactClose,\n        onDeleteContact: this.onDeleteContact,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ContactCell;\n}(React.Component);\n\nexport default ContactCell;","map":{"version":3,"sources":["C:\\Users\\Noelia\\Desktop\\Plantillas\\source\\src\\components\\contact\\ContactList\\ContactCell\\index.js"],"names":["React","Checkbox","IconButton","Menu","MenuItem","AddContact","ContactCell","onContactOptionSelect","event","setState","menuState","anchorEl","currentTarget","handleRequestClose","onContactClose","addContactState","onDeleteContact","contact","props","onEditContact","state","undefined","addFavourite","onContactSelect","onSaveContact","name","thumb","email","phone","designation","starred","console","log","options","selected","fontSize","charAt","toUpperCase","style","width","map","option","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport AddContact from '../../AddContact/index';\r\n\r\nclass ContactCell extends React.Component {\r\n\r\n  onContactOptionSelect = event => {\r\n    this.setState({menuState: true, anchorEl: event.currentTarget});\r\n  };\r\n  handleRequestClose = () => {\r\n    this.setState({menuState: false});\r\n  };\r\n  onContactClose = () => {\r\n    this.setState({addContactState: false});\r\n  };\r\n  onDeleteContact = (contact) => {\r\n    this.setState({addContactState: false});\r\n    this.props.onDeleteContact(contact);\r\n  };\r\n  onEditContact = () => {\r\n    this.setState({menuState: false, addContactState: true});\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      anchorEl: undefined,\r\n      menuState: false,\r\n      addContactState: false,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {contact, addFavourite, onContactSelect, onSaveContact} = this.props;\r\n    const {menuState, anchorEl, addContactState} = this.state;\r\n    const {name, thumb, email, phone, designation, starred} = contact;\r\n    console.log(\"thumb-->\",thumb)\r\n\r\n    const options = [\r\n      'Edit',\r\n      'Delete',\r\n    ];\r\n    return (\r\n\r\n      <div className=\"contact-item\">\r\n\r\n        <Checkbox color=\"primary\"\r\n                  checked={contact.selected}\r\n                  value=\"checkedF\"\r\n                  onClick={() => {\r\n                    onContactSelect(contact)\r\n                  }}\r\n        />\r\n        <div className=\"col-auto px-1 actions d-none d-xs-flex\">\r\n          <IconButton className=\"icon-btn p-1\" onClick={() => {\r\n            addFavourite(contact)\r\n          }}>\r\n            {starred ? <i className=\"zmdi zmdi-star\"/> : <i className=\"zmdi zmdi-star-outline\"/>}\r\n          </IconButton>\r\n        </div>\r\n        {(thumb === null || thumb === '') ?\r\n          <div className=\"rounded-circle size-40 bg-blue text-center text-white mx-1 mx-md-3\"\r\n               style={{fontSize: 20}}>\r\n            {name.charAt(0).toUpperCase()}\r\n          </div> :\r\n          <img className=\"rounded-circle size-40 mx-1 mx-md-3\" alt={name} src={thumb}/>}\r\n\r\n        <div className=\"col con-inf-mw-100\">\r\n          <p className=\"mb-0\">\r\n                        <span className=\"text-truncate contact-name text-dark\">\r\n                            {name}\r\n                        </span>\r\n            <span className=\"d-inline-block toolbar-separator\">&nbsp;</span>\r\n            <span className=\"text-truncate job-title text-dark\">\r\n                            {designation}\r\n                        </span>\r\n          </p>\r\n\r\n          <div className=\"text-muted\">\r\n                        <span className=\"email d-inline-block mr-2\">\r\n                            {email},\r\n                        </span>\r\n\r\n            <span className=\"phone d-inline-block\">\r\n                            {phone}\r\n                        </span>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div className=\"col-auto px-1 actions d-none d-sm-flex\">\r\n          <IconButton className=\"icon-btn p-2\" onClick={this.onContactOptionSelect}>\r\n            <i className=\"zmdi zmdi-more-vert\"/>\r\n          </IconButton>\r\n\r\n          <Menu id=\"long-menu\"\r\n                anchorEl={anchorEl}\r\n                open={menuState}\r\n                onClose={this.handleRequestClose}\r\n\r\n                MenuListProps={{\r\n                  style: {\r\n                    width: 100,\r\n                  },\r\n                }}>\r\n            {options.map(option =>\r\n              <MenuItem key={option} onClick={() => {\r\n                if (option === 'Edit') {\r\n                  this.onEditContact()\r\n                } else {\r\n                  this.handleRequestClose();\r\n                  this.onDeleteContact(contact)\r\n                }\r\n              }\r\n              }>\r\n                {option}\r\n              </MenuItem>,\r\n            )}\r\n          </Menu>\r\n          {addContactState &&\r\n          <AddContact open={addContactState} contact={contact} onSaveContact={onSaveContact}\r\n                      onContactClose={this.onContactClose} onDeleteContact={this.onDeleteContact}/>}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContactCell;"]},"metadata":{},"sourceType":"module"}