{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\src\\\\app\\\\routes\\\\components\\\\routes\\\\stepper\\\\nonLinear\\\\HorizontalNonLinearAlternativeLabelStepper.js\";\nimport React from 'react';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepButton from '@material-ui/core/StepButton';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nfunction getSteps() {\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return 'Step 1: Select campaign settings...';\n\n    case 1:\n      return 'Step 2: What is an ad group anyways?';\n\n    case 2:\n      return 'Step 3: This is the bit I really care about!';\n\n    default:\n      return 'Unknown step';\n  }\n}\n\nvar HorizontalNonLinearAlternativeLabelStepper =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HorizontalNonLinearAlternativeLabelStepper, _React$Component);\n\n  function HorizontalNonLinearAlternativeLabelStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, HorizontalNonLinearAlternativeLabelStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(HorizontalNonLinearAlternativeLabelStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      activeStep: 0,\n      completed: new Set(),\n      skipped: new Set()\n    };\n\n    _this.totalSteps = function () {\n      return getSteps().length;\n    };\n\n    _this.isStepOptional = function (step) {\n      return step === 1;\n    };\n\n    _this.handleSkip = function () {\n      var activeStep = _this.state.activeStep;\n\n      if (!_this.isStepOptional(activeStep)) {\n        // You probably want to guard against something like this\n        // it should never occur unless someone's actively trying to break something.\n        throw new Error(\"You can't skip a step that isn't optional.\");\n      }\n\n      var skipped = new Set(_this.state.skipped);\n      skipped.add(activeStep);\n\n      _this.setState({\n        activeStep: _this.state.activeStep + 1,\n        skipped: skipped\n      });\n    };\n\n    _this.handleNext = function () {\n      var activeStep;\n\n      if (_this.isLastStep() && !_this.allStepsCompleted()) {\n        // It's the last step, but not all steps have been completed\n        // find the first step that has been completed\n        var steps = getSteps();\n        activeStep = steps.findIndex(function (step, i) {\n          return !_this.state.completed.has(i);\n        });\n      } else {\n        activeStep = _this.state.activeStep + 1;\n      }\n\n      _this.setState({\n        activeStep: activeStep\n      });\n    };\n\n    _this.handleBack = function () {\n      _this.setState({\n        activeStep: _this.state.activeStep - 1\n      });\n    };\n\n    _this.handleStep = function (step) {\n      return function () {\n        _this.setState({\n          activeStep: step\n        });\n      };\n    };\n\n    _this.handleComplete = function () {\n      var completed = new Set(_this.state.completed);\n      completed.add(_this.state.activeStep);\n\n      _this.setState({\n        completed: completed\n      });\n      /**\r\n       * Sigh... it would be much nicer to replace the following if conditional with\r\n       * `if (!this.allStepsComplete())` however state is not set when we do this,\r\n       * thus we have to resort to not being very DRY.\r\n       */\n\n\n      if (completed.size !== _this.totalSteps() - _this.skippedSteps()) {\n        _this.handleNext();\n      }\n    };\n\n    _this.handleReset = function () {\n      _this.setState({\n        activeStep: 0,\n        completed: new Set(),\n        skipped: new Set()\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(HorizontalNonLinearAlternativeLabelStepper, [{\n    key: \"isStepComplete\",\n    value: function isStepComplete(step) {\n      return this.state.completed.has(step);\n    }\n  }, {\n    key: \"completedSteps\",\n    value: function completedSteps() {\n      return this.state.completed.size;\n    }\n  }, {\n    key: \"allStepsCompleted\",\n    value: function allStepsCompleted() {\n      return this.completedSteps() === this.totalSteps() - this.skippedSteps();\n    }\n  }, {\n    key: \"isLastStep\",\n    value: function isLastStep() {\n      return this.state.activeStep === this.totalSteps() - 1;\n    }\n  }, {\n    key: \"isStepSkipped\",\n    value: function isStepSkipped(step) {\n      return this.state.skipped.has(step);\n    }\n  }, {\n    key: \"skippedSteps\",\n    value: function skippedSteps() {\n      return this.state.skipped.size;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var steps = getSteps();\n      var activeStep = this.state.activeStep;\n      return React.createElement(\"div\", {\n        className: \"w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Stepper, {\n        alternativeLabel: true,\n        nonLinear: true,\n        activeStep: activeStep,\n        className: \"horizontal-stepper-linear\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, steps.map(function (label, index) {\n        var props = {};\n        var labelProps = {};\n\n        if (_this2.isStepOptional(index)) {\n          labelProps.optional = React.createElement(Typography, {\n            variant: \"caption\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }, \"Optional\");\n        }\n\n        if (_this2.isStepSkipped(index)) {\n          props.completed = false;\n        }\n\n        return React.createElement(Step, Object.assign({\n          key: label,\n          className: \"horizontal-stepper \".concat(index === activeStep ? 'active' : '')\n        }, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }), React.createElement(StepButton, Object.assign({\n          className: \"stepperbutton\",\n          onClick: _this2.handleStep(index),\n          completed: _this2.isStepComplete(index)\n        }, labelProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }), label));\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, this.allStepsCompleted() ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: \"my-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"All steps completed - you\\\"re finished\"), React.createElement(Button, {\n        onClick: this.handleReset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Reset\")) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: \"my-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, getStepContent(activeStep)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(Button, {\n        disabled: activeStep === 0,\n        onClick: this.handleBack,\n        className: \"jr-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Back\"), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleNext,\n        className: \"jr-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Next\"), this.isStepOptional(activeStep) && !this.state.completed.has(this.state.activeStep) && React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleSkip,\n        className: \"jr-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Skip\"), activeStep !== steps.length && (this.state.completed.has(this.state.activeStep) ? React.createElement(Typography, {\n        variant: \"caption\",\n        className: \"my-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Step \", activeStep + 1, \" already completed\") : React.createElement(Button, {\n        className: \"jr-btn\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleComplete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, this.completedSteps() === this.totalSteps() - 1 ? 'Finish' : 'Complete Step'))))));\n    }\n  }]);\n\n  return HorizontalNonLinearAlternativeLabelStepper;\n}(React.Component);\n\nexport default HorizontalNonLinearAlternativeLabelStepper;","map":{"version":3,"sources":["C:\\Users\\Noelia\\Desktop\\jumbo-react-3.0.1\\source\\src\\app\\routes\\components\\routes\\stepper\\nonLinear\\HorizontalNonLinearAlternativeLabelStepper.js"],"names":["React","Stepper","Step","StepButton","Button","Typography","getSteps","getStepContent","step","HorizontalNonLinearAlternativeLabelStepper","state","activeStep","completed","Set","skipped","totalSteps","length","isStepOptional","handleSkip","Error","add","setState","handleNext","isLastStep","allStepsCompleted","steps","findIndex","i","has","handleBack","handleStep","handleComplete","size","skippedSteps","handleReset","completedSteps","map","label","index","props","labelProps","optional","isStepSkipped","isStepComplete","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepButton from '@material-ui/core/StepButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nfunction getSteps() {\r\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return 'Step 1: Select campaign settings...';\r\n    case 1:\r\n      return 'Step 2: What is an ad group anyways?';\r\n    case 2:\r\n      return 'Step 3: This is the bit I really care about!';\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nclass HorizontalNonLinearAlternativeLabelStepper extends React.Component {\r\n  state = {\r\n    activeStep: 0,\r\n    completed: new Set(),\r\n    skipped: new Set(),\r\n  };\r\n\r\n  totalSteps = () => {\r\n    return getSteps().length;\r\n  };\r\n  isStepOptional = step => {\r\n    return step === 1;\r\n  };\r\n  handleSkip = () => {\r\n    const {activeStep} = this.state;\r\n    if (!this.isStepOptional(activeStep)) {\r\n      // You probably want to guard against something like this\r\n      // it should never occur unless someone's actively trying to break something.\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n    const skipped = new Set(this.state.skipped);\r\n    skipped.add(activeStep);\r\n    this.setState({\r\n      activeStep: this.state.activeStep + 1,\r\n      skipped,\r\n    });\r\n  };\r\n  handleNext = () => {\r\n    let activeStep;\r\n\r\n    if (this.isLastStep() && !this.allStepsCompleted()) {\r\n      // It's the last step, but not all steps have been completed\r\n      // find the first step that has been completed\r\n      const steps = getSteps();\r\n      activeStep = steps.findIndex((step, i) => !this.state.completed.has(i));\r\n    } else {\r\n      activeStep = this.state.activeStep + 1;\r\n    }\r\n    this.setState({\r\n      activeStep,\r\n    });\r\n  };\r\n  handleBack = () => {\r\n    this.setState({\r\n      activeStep: this.state.activeStep - 1,\r\n    });\r\n  };\r\n  handleStep = step => () => {\r\n    this.setState({\r\n      activeStep: step,\r\n    });\r\n  };\r\n  handleComplete = () => {\r\n    const completed = new Set(this.state.completed);\r\n    completed.add(this.state.activeStep);\r\n    this.setState({\r\n      completed,\r\n    });\r\n    /**\r\n     * Sigh... it would be much nicer to replace the following if conditional with\r\n     * `if (!this.allStepsComplete())` however state is not set when we do this,\r\n     * thus we have to resort to not being very DRY.\r\n     */\r\n    if (completed.size !== this.totalSteps() - this.skippedSteps()) {\r\n      this.handleNext();\r\n    }\r\n  };\r\n  handleReset = () => {\r\n    this.setState({\r\n      activeStep: 0,\r\n      completed: new Set(),\r\n      skipped: new Set(),\r\n    });\r\n  };\r\n\r\n  isStepComplete(step) {\r\n    return this.state.completed.has(step);\r\n  }\r\n\r\n  completedSteps() {\r\n    return this.state.completed.size;\r\n  }\r\n\r\n  allStepsCompleted() {\r\n    return this.completedSteps() === this.totalSteps() - this.skippedSteps();\r\n  }\r\n\r\n  isLastStep() {\r\n    return this.state.activeStep === this.totalSteps() - 1;\r\n  }\r\n\r\n  isStepSkipped(step) {\r\n    return this.state.skipped.has(step);\r\n  }\r\n\r\n  skippedSteps() {\r\n    return this.state.skipped.size;\r\n  }\r\n\r\n  render() {\r\n    const steps = getSteps();\r\n    const {activeStep} = this.state;\r\n\r\n    return (\r\n      <div className=\"w-100\">\r\n        <Stepper alternativeLabel nonLinear activeStep={activeStep} className=\"horizontal-stepper-linear\">\r\n          {steps.map((label, index) => {\r\n            const props = {};\r\n            const labelProps = {};\r\n            if (this.isStepOptional(index)) {\r\n              labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\r\n            }\r\n            if (this.isStepSkipped(index)) {\r\n              props.completed = false;\r\n            }\r\n            return (\r\n              <Step key={label}\r\n                    className={`horizontal-stepper ${index === activeStep ? 'active' : ''}`} {...props}>\r\n                <StepButton className=\"stepperbutton\" onClick={this.handleStep(index)}\r\n                            completed={this.isStepComplete(index)}{...labelProps}>\r\n                  {label}\r\n                </StepButton>\r\n              </Step>\r\n            );\r\n          })}\r\n        </Stepper>\r\n        <div>\r\n          {this.allStepsCompleted() ? (\r\n            <div>\r\n              <Typography className=\"my-2\">\r\n                All steps completed - you&quot;re finished\r\n              </Typography>\r\n              <Button onClick={this.handleReset}>Reset</Button>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <Typography className=\"my-2\">{getStepContent(activeStep)}</Typography>\r\n              <div>\r\n                <Button\r\n                  disabled={activeStep === 0}\r\n                  onClick={this.handleBack}\r\n                  className=\"jr-btn\"\r\n                >\r\n                  Back\r\n                </Button>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleNext} className=\"jr-btn\">\r\n                  Next\r\n                </Button>\r\n                {this.isStepOptional(activeStep) &&\r\n                !this.state.completed.has(this.state.activeStep) && (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.handleSkip}\r\n                    className=\"jr-btn\"\r\n                  >\r\n                    Skip\r\n                  </Button>\r\n                )}\r\n                {activeStep !== steps.length &&\r\n                (this.state.completed.has(this.state.activeStep) ? (\r\n                  <Typography variant=\"caption\" className=\"my-2\">\r\n                    Step {activeStep + 1} already completed\r\n                  </Typography>\r\n                ) : (\r\n                  <Button className=\"jr-btn\" variant=\"contained\" color=\"primary\"\r\n                          onClick={this.handleComplete}>\r\n                    {this.completedSteps() === this.totalSteps() - 1 ? 'Finish' : 'Complete Step'}\r\n                  </Button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HorizontalNonLinearAlternativeLabelStepper;"]},"metadata":{},"sourceType":"module"}