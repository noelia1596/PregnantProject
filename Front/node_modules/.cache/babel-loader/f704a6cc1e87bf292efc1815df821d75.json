{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\src\\\\app\\\\routes\\\\components\\\\routes\\\\chips\\\\chipsWithInputBox\\\\ChipsWithInputBox.js\";\nimport React, { Component } from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\nimport Input from '@material-ui/core/Input';\nvar count = 5;\n\nvar chipsWithInputBox =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(chipsWithInputBox, _Component);\n\n  function chipsWithInputBox() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, chipsWithInputBox);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(chipsWithInputBox)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: '',\n      chipData: [{\n        key: 0,\n        name: 'Domnic Harris'\n      }, {\n        key: 1,\n        name: 'Garry Sobars'\n      }, {\n        key: 2,\n        name: 'Stella Johnson'\n      }, {\n        key: 3,\n        name: 'Alex Dolgove'\n      }, {\n        key: 4,\n        name: 'John Smith'\n      }]\n    };\n\n    _this.handleRequestDelete = function (data) {\n      return function () {\n        var chipData = _toConsumableArray(_this.state.chipData);\n\n        var chipToDelete = chipData.indexOf(data);\n        chipData.splice(chipToDelete, 1);\n\n        _this.setState({\n          chipData: chipData\n        });\n      };\n    };\n\n    _this.onValueChange = function (e) {\n      _this.setState({\n        name: e.target.value\n      });\n    };\n\n    _this._handleKeyPress = function (e) {\n      if (e.key === 'Enter') {\n        _this.setState({\n          name: '',\n          chipData: _this.state.chipData.concat({\n            key: count++,\n            name: e.target.value\n          })\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(chipsWithInputBox, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"manage-margin d-flex flex-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, this.state.chipData.map(function (data) {\n        return React.createElement(Chip, {\n          avatar: React.createElement(Avatar, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, data.name.charAt(0).toUpperCase()),\n          label: data.name,\n          key: data.key,\n          onDelete: _this2.handleRequestDelete(data),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        });\n      }), React.createElement(Input, {\n        type: \"text\",\n        placeholder: \"add more user\",\n        onChange: this.onValueChange.bind(this),\n        value: this.state.name,\n        onKeyPress: this._handleKeyPress.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return chipsWithInputBox;\n}(Component);\n\nexport default chipsWithInputBox;","map":{"version":3,"sources":["C:\\Users\\Noelia\\Desktop\\compra\\source\\src\\app\\routes\\components\\routes\\chips\\chipsWithInputBox\\ChipsWithInputBox.js"],"names":["React","Component","Chip","Avatar","Input","count","chipsWithInputBox","state","name","chipData","key","handleRequestDelete","data","chipToDelete","indexOf","splice","setState","onValueChange","e","target","value","_handleKeyPress","concat","map","charAt","toUpperCase","bind"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Input from '@material-ui/core/Input';\r\n\r\nlet count = 5;\r\n\r\nclass chipsWithInputBox extends Component {\r\n  state = {\r\n    name: '',\r\n    chipData: [\r\n      {key: 0, name: 'Domnic Harris'},\r\n      {key: 1, name: 'Garry Sobars'},\r\n      {key: 2, name: 'Stella Johnson'},\r\n      {key: 3, name: 'Alex Dolgove'},\r\n      {key: 4, name: 'John Smith'},\r\n    ],\r\n  };\r\n\r\n  handleRequestDelete = data => () => {\r\n    const chipData = [...this.state.chipData];\r\n    const chipToDelete = chipData.indexOf(data);\r\n    chipData.splice(chipToDelete, 1);\r\n    this.setState({chipData});\r\n  };\r\n\r\n  onValueChange = (e) => {\r\n    this.setState({name: e.target.value});\r\n  };\r\n\r\n  _handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.setState({\r\n        name: '',\r\n        chipData: this.state.chipData.concat({key: count++, name: e.target.value})\r\n      })\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"manage-margin d-flex flex-wrap\">\r\n        {this.state.chipData.map(data => {\r\n          return (\r\n            <Chip\r\n              avatar={<Avatar>{data.name.charAt(0).toUpperCase()}</Avatar>}\r\n              label={data.name}\r\n              key={data.key}\r\n              onDelete={this.handleRequestDelete(data)}\r\n            />\r\n          );\r\n        })}\r\n        <Input type=\"text\" placeholder=\"add more user\"\r\n               onChange={this.onValueChange.bind(this)} value={this.state.name}\r\n               onKeyPress={this._handleKeyPress.bind(this)}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default chipsWithInputBox;"]},"metadata":{},"sourceType":"module"}