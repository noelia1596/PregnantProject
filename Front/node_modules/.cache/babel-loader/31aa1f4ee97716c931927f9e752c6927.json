{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\src\\\\app\\\\routes\\\\mail\\\\basic\\\\index.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Drawer from '@material-ui/core/Drawer';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { connect } from 'react-redux';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport mails from '../data/mails';\nimport folders from '../data/folders';\nimport filters from '../data/filters';\nimport labels from '../data/labels';\nimport options from '../data/options';\nimport MailList from 'components/mail/MailList';\nimport ComposeMail from 'components/mail/Compose/index';\nimport AppModuleHeader from 'components/AppModuleHeader/index';\nimport MailDetail from 'components/mail/MailDetail/index';\nimport IntlMessages from 'util/IntlMessages';\nimport CustomScrollbars from 'util/CustomScrollbars';\n\nvar Mail =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Mail, _Component);\n\n  function Mail() {\n    var _this;\n\n    _classCallCheck(this, Mail);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Mail).call(this));\n\n    _this.MailSideBar = function () {\n      return React.createElement(\"div\", {\n        className: \"module-side\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"module-side-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"module-logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"zmdi zmdi-email mr-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"mail.mailbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"module-side-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(CustomScrollbars, {\n        className: \"module-side-scroll scrollbar\",\n        style: {\n          height: _this.props.width >= 1200 ? 'calc(100vh - 200px)' : 'calc(100vh - 80px)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"module-add-task\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: \"btn-block\",\n        onClick: function onClick() {\n          _this.setState({\n            composeMail: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"zmdi zmdi-edit zmdi-hc-fw\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(IntlMessages, {\n        id: \"mail.compose\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), \" \")), React.createElement(\"ul\", {\n        className: \"module-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, _this.getNavFolders(), React.createElement(\"li\", {\n        className: \"module-nav-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"mail.filters\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })), _this.getNavFilters(), React.createElement(\"li\", {\n        className: \"module-nav-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"mail.labels\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), _this.getNavLabels()))));\n    };\n\n    _this.onDeleteMail = function () {\n      var mails = _this.state.allMail.map(function (mail) {\n        return mail.selected && mail.folder === _this.state.selectedFolder ? _objectSpread({}, mail, {\n          folder: 4,\n          selected: false\n        }) : mail;\n      });\n\n      _this.setState({\n        alertMessage: 'Mail Deleted Successfully',\n        showMessage: true,\n        selectedMails: 0,\n        allMail: mails,\n        folderMails: mails.filter(function (mail) {\n          return mail.folder === _this.state.selectedFolder;\n        })\n      });\n    };\n\n    _this.getNavFolders = function () {\n      return folders.map(function (folder, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          onClick: function onClick() {\n            var filterMails = _this.state.allMail.filter(function (mail) {\n              return mail.folder === folder.id;\n            });\n\n            _this.setState({\n              selectedFolder: folder.id,\n              noContentFoundMessage: 'No mail found in selected folder',\n              currentMail: null,\n              loader: true,\n              folderMails: filterMails\n            });\n\n            setTimeout(function () {\n              _this.setState({\n                loader: false\n              });\n            }, 1500);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"jr-link \".concat(_this.state.selectedFolder === folder.id ? 'active' : ''),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"zmdi zmdi-\".concat(folder.icon),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, folder.title)));\n      });\n    };\n\n    _this.onFolderMenuItemSelect = function (folderId) {\n      _this.handleRequestClose();\n\n      var mails = _this.state.allMail.map(function (mail) {\n        return mail.selected && mail.folder === _this.state.selectedFolder ? _objectSpread({}, mail, {\n          folder: folderId,\n          selected: false\n        }) : mail;\n      });\n\n      _this.setState({\n        selectedMails: 0,\n        allMail: mails,\n        noContentFoundMessage: 'No mail found in selected folder',\n        alertMessage: 'Mail has been moved successfully',\n        showMessage: true,\n        folderMails: mails.filter(function (mail) {\n          return mail.folder === _this.state.selectedFolder;\n        })\n      });\n    };\n\n    _this.onLabelMenuItemSelect = function (label) {\n      _this.handleRequestClose();\n\n      var mails = _this.state.allMail.map(function (mail) {\n        if (mail.selected && mail.folder === _this.state.selectedFolder) {\n          if (mail.labels.includes(label.id)) {\n            return _objectSpread({}, mail, {\n              labels: _this.removeLabel(mail, label.id)\n            });\n          } else {\n            return _objectSpread({}, mail, {\n              labels: _this.addLabel(mail, label.id)\n            });\n          }\n        } else {\n          return mail;\n        }\n      });\n\n      _this.setState({\n        noContentFoundMessage: 'No mail found in selected label',\n        alertMessage: 'Label Updated Successfully',\n        showMessage: true,\n        allMail: mails,\n        folderMails: mails.filter(function (mail) {\n          return mail.folder === _this.state.selectedFolder;\n        })\n      });\n    };\n\n    _this.handleRequestClose = function () {\n      _this.setState({\n        composeMail: false,\n        showMessage: false,\n        folderMenuState: false,\n        labelMenuState: false,\n        optionMenuState: false\n      });\n    };\n\n    _this.getNavFilters = function () {\n      return filters.map(function (filter, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          onClick: function onClick() {\n            var filterMails = _this.state.allMail.filter(function (mail) {\n              if (filter.id === 0 && mail.starred) {\n                return mail;\n              } else if (filter.id === 1 && mail.important) {\n                return mail;\n              }\n\n              return null;\n            });\n\n            _this.setState({\n              noContentFoundMessage: 'No mail found in selected filter',\n              loader: true,\n              folderMails: filterMails\n            });\n\n            setTimeout(function () {\n              _this.setState({\n                loader: false\n              });\n            }, 1500);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"jr-link\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"zmdi zmdi-\".concat(filter.icon),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, filter.title)));\n      });\n    };\n\n    _this.onFolderSelect = function (event) {\n      _this.setState({\n        anchorEl: event.currentTarget,\n        folderMenuState: !_this.state.folderMenuState\n      });\n    };\n\n    _this.onLabelSelect = function (event) {\n      _this.setState({\n        anchorEl: event.currentTarget,\n        labelMenuState: !_this.state.labelMenuState\n      });\n    };\n\n    _this.onOptionMenuSelect = function (event) {\n      _this.setState({\n        anchorEl: event.currentTarget,\n        optionMenuState: !_this.state.optionMenuState\n      });\n    };\n\n    _this.onOptionMenuItemSelect = function (option) {\n      switch (option.title) {\n        case 'All':\n          _this.handleRequestClose();\n\n          _this.getAllMail();\n\n          break;\n\n        case 'None':\n          _this.handleRequestClose();\n\n          _this.getUnselectedAllMail();\n\n          break;\n\n        case 'Read':\n          _this.handleRequestClose();\n\n          _this.getReadMail();\n\n          break;\n\n        case 'Unread':\n          _this.handleRequestClose();\n\n          _this.getUnreadMail();\n\n          break;\n\n        case 'Starred':\n          _this.handleRequestClose();\n\n          _this.getStarredMail();\n\n          break;\n\n        case 'Unstarred':\n          _this.handleRequestClose();\n\n          _this.getUnStarredMail();\n\n          break;\n\n        case 'Important':\n          _this.handleRequestClose();\n\n          _this.getImportantMail();\n\n          break;\n\n        case 'Unimportant':\n          _this.handleRequestClose();\n\n          _this.getUnimportantMail();\n\n          break;\n\n        default:\n          _this.handleRequestClose();\n\n          _this.getAllMail();\n\n      }\n    };\n\n    _this.getAllMail = function () {\n      var mails = _this.state.allMail.map(function (mail) {\n        return mail.folder === _this.state.selectedFolder ? _objectSpread({}, mail, {\n          selected: true\n        }) : mail;\n      });\n\n      _this.setState({\n        selectedMails: mails.length,\n        allMail: mails,\n        optionName: 'All',\n        folderMails: mails.filter(function (mail) {\n          return mail.folder === _this.state.selectedFolder;\n        })\n      });\n    };\n\n    _this.getUnselectedAllMail = function () {\n      var mails = _this.state.allMail.map(function (mail) {\n        return mail.folder === _this.state.selectedFolder ? _objectSpread({}, mail, {\n          selected: false\n        }) : mail;\n      });\n\n      _this.setState({\n        selectedMails: 0,\n        allMail: mails,\n        optionName: 'None',\n        folderMails: mails.filter(function (mail) {\n          return mail.folder === _this.state.selectedFolder;\n        })\n      });\n    };\n\n    _this.getReadMail = function () {\n      var selectedMail = 0;\n\n      var mails = _this.state.allMail.filter(function (mail) {\n        return mail.folder === _this.state.selectedFolder;\n      });\n\n      mails = mails.map(function (mail) {\n        if (mail.read) {\n          selectedMail++;\n          return _objectSpread({}, mail, {\n            selected: true\n          });\n        }\n\n        return _objectSpread({}, mail, {\n          selected: false\n        });\n      });\n\n      _this.setState({\n        selectedMails: selectedMail,\n        allMail: mails,\n        optionName: 'Read',\n        folderMails: mails.filter(function (mail) {\n          return mail.folder === _this.state.selectedFolder;\n        })\n      });\n\n      return mails;\n    };\n\n    _this.getUnreadMail = function () {\n      var selectedMail = 0;\n\n      var mails = _this.state.allMail.filter(function (mail) {\n        return mail.folder === _this.state.selectedFolder;\n      });\n\n      mails = mails.map(function (mail) {\n        if (!mail.read) {\n          selectedMail++;\n          return _objectSpread({}, mail, {\n            selected: true\n          });\n        }\n\n        return _objectSpread({}, mail, {\n          selected: false\n        });\n      });\n\n      _this.setState({\n        selectedMails: selectedMail,\n        allMail: mails,\n        optionName: 'Unread',\n        folderMails: mails.filter(function (mail) {\n          return mail.folder === _this.state.selectedFolder;\n        })\n      });\n\n      return mails;\n    };\n\n    _this.getStarredMail = function () {\n      var selectedMail = 0;\n\n      var mails = _this.state.allMail.filter(function (mail) {\n        return mail.folder === _this.state.selectedFolder;\n      });\n\n      mails = mails.map(function (mail) {\n        if (mail.starred) {\n          selectedMail++;\n          return _objectSpread({}, mail, {\n            selected: true\n          });\n        }\n\n        return _objectSpread({}, mail, {\n          selected: false\n        });\n      });\n\n      _this.setState({\n        selectedMails: selectedMail,\n        allMail: mails,\n        optionName: 'Starred',\n        folderMails: mails.filter(function (mail) {\n          return mail.folder === _this.state.selectedFolder;\n        })\n      });\n\n      return mails;\n    };\n\n    _this.getUnStarredMail = function () {\n      var selectedMail = 0;\n\n      var mails = _this.state.allMail.filter(function (mail) {\n        return mail.folder === _this.state.selectedFolder;\n      });\n\n      mails = mails.map(function (mail) {\n        if (!mail.starred) {\n          selectedMail++;\n          return _objectSpread({}, mail, {\n            selected: true\n          });\n        }\n\n        return _objectSpread({}, mail, {\n          selected: false\n        });\n      });\n\n      _this.setState({\n        selectedMails: selectedMail,\n        allMail: mails,\n        optionName: 'UnStarred',\n        folderMails: mails.filter(function (mail) {\n          return mail.folder === _this.state.selectedFolder;\n        })\n      });\n\n      return mails;\n    };\n\n    _this.getImportantMail = function () {\n      var selectedMail = 0;\n\n      var mails = _this.state.allMail.filter(function (mail) {\n        return mail.folder === _this.state.selectedFolder;\n      });\n\n      mails = mails.map(function (mail) {\n        if (mail.important) {\n          selectedMail++;\n          return _objectSpread({}, mail, {\n            selected: true\n          });\n        }\n\n        return _objectSpread({}, mail, {\n          selected: false\n        });\n      });\n\n      _this.setState({\n        selectedMails: selectedMail,\n        allMail: mails,\n        optionName: 'Important',\n        folderMails: mails.filter(function (mail) {\n          return mail.folder === _this.state.selectedFolder;\n        })\n      });\n\n      return mails;\n    };\n\n    _this.getUnimportantMail = function () {\n      var selectedMail = 0;\n\n      var mails = _this.state.allMail.filter(function (mail) {\n        return mail.folder === _this.state.selectedFolder;\n      });\n\n      mails = mails.map(function (mail) {\n        if (!mail.important) {\n          selectedMail++;\n          return _objectSpread({}, mail, {\n            selected: true\n          });\n        }\n\n        return _objectSpread({}, mail, {\n          selected: false\n        });\n      });\n\n      _this.setState({\n        selectedMails: selectedMail,\n        optionName: 'Unimportant',\n        allMail: mails,\n        noContentFoundMessage: 'No Mail found in selected Label',\n        folderMails: mails.filter(function (mail) {\n          return mail.folder === _this.state.selectedFolder;\n        })\n      });\n\n      return mails;\n    };\n\n    _this.getNavLabels = function () {\n      return labels.map(function (label, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          onClick: function onClick() {\n            var filterMails = _this.state.allMail.filter(function (mail) {\n              return mail.labels.includes(label.id);\n            });\n\n            _this.setState({\n              loader: true,\n              noContentFoundMessage: 'No mail found in selected label',\n              folderMails: filterMails\n            });\n\n            setTimeout(function () {\n              _this.setState({\n                loader: false\n              });\n            }, 1500);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 373\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"jr-link\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 385\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"zmdi zmdi-circle text-\".concat(label.color),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 386\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 387\n          },\n          __self: this\n        }, label.title)));\n      });\n    };\n\n    _this.searchMail = function (searchText) {\n      if (searchText === '') {\n        _this.setState({\n          folderMails: _this.state.allMail.filter(function (mail) {\n            return !mail.deleted;\n          })\n        });\n      } else {\n        var searchMails = _this.state.allMail.filter(function (mail) {\n          return !mail.deleted && mail.subject.toLowerCase().indexOf(searchText.toLowerCase()) > -1;\n        });\n\n        _this.setState({\n          folderMails: searchMails\n        });\n      }\n    };\n\n    _this.displayMail = function (currentMail, folderMails, noContentFoundMessage) {\n      return React.createElement(\"div\", {\n        className: \"module-box-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, currentMail === null ? folderMails.length === 0 ? React.createElement(\"div\", {\n        className: \"d-flex align-items-center justify-content-center\",\n        style: {\n          height: _this.props.width >= 1200 ? 'calc(100vh - 265px)' : 'calc(100vh - 245px)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }, noContentFoundMessage) : React.createElement(MailList, {\n        mails: folderMails,\n        onStartSelect: _this.onStartSelect.bind(_assertThisInitialized(_assertThisInitialized(_this))),\n        onMailSelect: _this.onMailSelect.bind(_assertThisInitialized(_assertThisInitialized(_this))),\n        width: _this.props.width,\n        onMailChecked: _this.onMailChecked.bind(_assertThisInitialized(_assertThisInitialized(_this))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }) : React.createElement(MailDetail, {\n        mail: currentMail,\n        onStartSelect: _this.onStartSelect.bind(_assertThisInitialized(_assertThisInitialized(_this))),\n        width: _this.props.width,\n        onImportantSelect: _this.onImportantSelect.bind(_assertThisInitialized(_assertThisInitialized(_this))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }));\n    };\n\n    _this.getMailActions = function () {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        onClick: _this.onFolderSelect.bind(_assertThisInitialized(_assertThisInitialized(_this))),\n        className: \"icon-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"zmdi zmdi-folder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      })), React.createElement(IconButton, {\n        onClick: _this.onDeleteMail.bind(_assertThisInitialized(_assertThisInitialized(_this))),\n        className: \"icon-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"zmdi zmdi-delete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      })), React.createElement(IconButton, {\n        onClick: _this.onLabelSelect.bind(_assertThisInitialized(_assertThisInitialized(_this))),\n        className: \"icon-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"zmdi zmdi-label-alt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      })));\n    };\n\n    _this.state = {\n      searchMail: '',\n      noContentFoundMessage: 'No mail found in selected folder',\n      alertMessage: '',\n      showMessage: false,\n      drawerState: false,\n      optionName: 'None',\n      anchorEl: null,\n      allMail: mails,\n      loader: true,\n      currentMail: null,\n      user: {\n        name: 'Robert Johnson',\n        email: 'robert@example.com',\n        avatar: 'https://via.placeholder.com/150x150'\n      },\n      selectedMails: 0,\n      selectedFolder: 0,\n      composeMail: false,\n      labelMenuState: false,\n      folderMenuState: false,\n      optionMenuState: false,\n      folderMails: mails.filter(function (mail) {\n        return mail.folder === 0;\n      })\n    };\n    return _this;\n  }\n\n  _createClass(Mail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      setTimeout(function () {\n        _this2.setState({\n          loader: false\n        });\n      }, 1500);\n    }\n  }, {\n    key: \"onMailChecked\",\n    value: function onMailChecked(data) {\n      data.selected = !data.selected;\n      var selectedMail = 0;\n      var mails = this.state.folderMails.map(function (mail) {\n        if (mail.selected) {\n          selectedMail++;\n        }\n\n        if (mail.id === data.id) {\n          if (mail.selected) {\n            selectedMail++;\n          }\n\n          return data;\n        } else {\n          return mail;\n        }\n      });\n      this.setState({\n        selectedMails: selectedMail,\n        folderMails: mails\n      });\n    }\n  }, {\n    key: \"onAllMailSelect\",\n    value: function onAllMailSelect() {\n      var selectAll = this.state.selectedMails <= this.state.folderMails.length;\n\n      if (selectAll) {\n        this.getAllMail();\n      } else {\n        this.getUnselectedAllMail();\n      }\n    }\n  }, {\n    key: \"removeLabel\",\n    value: function removeLabel(mail, label) {\n      mail.labels.splice(mail.labels.indexOf(label), 1);\n\n      if (this.state.currentMail !== null && mail.id === this.state.currentMail.id) {\n        this.setState({\n          currentMail: _objectSpread({}, mail, {\n            labels: mail.labels\n          })\n        });\n      }\n\n      return mail.labels;\n    }\n  }, {\n    key: \"onStartSelect\",\n    value: function onStartSelect(data) {\n      data.starred = !data.starred;\n      this.setState({\n        alertMessage: data.starred ? 'Mail Mark as Star' : 'Mail Remove as Star',\n        showMessage: true,\n        folderMails: this.state.folderMails.map(function (mail) {\n          return mail.id === data.id ? data : mail;\n        })\n      });\n    }\n  }, {\n    key: \"onImportantSelect\",\n    value: function onImportantSelect(data) {\n      data.important = !data.important;\n      this.setState({\n        alertMessage: data.important ? 'Mail Mark as Important' : 'Mail Remove as Important',\n        showMessage: true,\n        folderMails: this.state.folderMails.map(function (mail) {\n          return mail.id === data.id ? data : mail;\n        })\n      });\n    }\n  }, {\n    key: \"onMailSend\",\n    value: function onMailSend(data) {\n      this.setState({\n        alertMessage: 'Mail Sent Successfully',\n        showMessage: true,\n        folderMails: this.state.allMail.concat(data),\n        allMail: this.state.allMail.concat(data)\n      });\n    }\n  }, {\n    key: \"onMailSelect\",\n    value: function onMailSelect(mail) {\n      var _this3 = this;\n\n      this.setState({\n        loader: true,\n        currentMail: mail\n      });\n      setTimeout(function () {\n        _this3.setState({\n          loader: false\n        });\n      }, 1500);\n    }\n  }, {\n    key: \"addLabel\",\n    value: function addLabel(mail, label) {\n      if (this.state.currentMail !== null && mail.id === this.state.currentMail.id) {\n        this.setState({\n          currentMail: _objectSpread({}, mail, {\n            labels: mail.labels.concat(label)\n          })\n        });\n      }\n\n      return mail.labels.concat(label);\n    }\n  }, {\n    key: \"updateSearch\",\n    value: function updateSearch(evt) {\n      this.setState({\n        searchMail: evt.target.value\n      });\n      this.searchMail(evt.target.value);\n    }\n  }, {\n    key: \"onToggleDrawer\",\n    value: function onToggleDrawer() {\n      this.setState({\n        drawerState: !this.state.drawerState\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          selectedMails = _this$state.selectedMails,\n          loader = _this$state.loader,\n          currentMail = _this$state.currentMail,\n          folderMails = _this$state.folderMails,\n          composeMail = _this$state.composeMail,\n          user = _this$state.user,\n          alertMessage = _this$state.alertMessage,\n          showMessage = _this$state.showMessage,\n          noContentFoundMessage = _this$state.noContentFoundMessage;\n      return React.createElement(\"div\", {\n        className: \"app-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"animated slideInUpTiny animation-duration-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"app-module\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"d-block d-xl-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590\n        },\n        __self: this\n      }, React.createElement(Drawer, {\n        open: this.state.drawerState,\n        onClose: this.onToggleDrawer.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591\n        },\n        __self: this\n      }, this.MailSideBar())), React.createElement(\"div\", {\n        className: \"app-module-sidenav d-none d-xl-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597\n        },\n        __self: this\n      }, this.MailSideBar()), React.createElement(\"div\", {\n        className: \"module-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"module-box-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        className: \"drawer-btn d-block d-xl-none\",\n        \"aria-label\": \"Menu\",\n        onClick: this.onToggleDrawer.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"zmdi zmdi-menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 607\n        },\n        __self: this\n      })), React.createElement(AppModuleHeader, {\n        placeholder: \"Search mails\",\n        user: this.state.user,\n        onChange: this.updateSearch.bind(this),\n        value: this.state.searchMail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"module-box-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"module-box-topbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616\n        },\n        __self: this\n      }, this.state.currentMail === null ? React.createElement(\"div\", {\n        className: \"d-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        color: \"primary\",\n        indeterminate: selectedMails > 0 && selectedMails < folderMails.length,\n        checked: selectedMails > 0,\n        onChange: this.onAllMailSelect.bind(this),\n        value: \"SelectMail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 619\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"d-flex align-items-center\",\n        onClick: this.onOptionMenuSelect.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"px-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625\n        },\n        __self: this\n      }, \" \", this.state.optionName), React.createElement(IconButton, {\n        className: \"icon-btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 626\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"zmdi zmdi-caret-down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627\n        },\n        __self: this\n      })))) : React.createElement(IconButton, {\n        className: \"icon-btn\",\n        onClick: function onClick() {\n          _this4.setState({\n            currentMail: null\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"zmdi zmdi-arrow-back\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638\n        },\n        __self: this\n      })), selectedMails > 0 && this.getMailActions(), React.createElement(Menu, {\n        id: \"option-menu\",\n        anchorEl: this.state.anchorEl,\n        open: this.state.optionMenuState,\n        onClose: this.handleRequestClose,\n        MenuListProps: {\n          style: {\n            width: 150\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645\n        },\n        __self: this\n      }, options.map(function (option) {\n        return React.createElement(MenuItem, {\n          key: option.title,\n          onClick: _this4.onOptionMenuItemSelect.bind(_this4, option),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 655\n          },\n          __self: this\n        }, option.title);\n      })), React.createElement(Menu, {\n        id: \"folder-menu\",\n        anchorEl: this.state.anchorEl,\n        open: this.state.folderMenuState,\n        onClose: this.handleRequestClose,\n        MenuListProps: {\n          style: {\n            width: 150\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662\n        },\n        __self: this\n      }, folders.map(function (folder) {\n        return React.createElement(MenuItem, {\n          key: folder.id,\n          onClick: _this4.onFolderMenuItemSelect.bind(_this4, folder.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 672\n          },\n          __self: this\n        }, folder.title);\n      })), React.createElement(Menu, {\n        id: \"label-menu\",\n        anchorEl: this.state.anchorEl,\n        open: this.state.labelMenuState,\n        onClose: this.handleRequestClose,\n        MenuListProps: {\n          style: {\n            width: 150\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678\n        },\n        __self: this\n      }, labels.map(function (label) {\n        return React.createElement(MenuItem, {\n          key: label.id,\n          onClick: _this4.onLabelMenuItemSelect.bind(_this4, label),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 688\n          },\n          __self: this\n        }, label.title);\n      }))), loader ? React.createElement(\"div\", {\n        className: \"loader-view\",\n        style: {\n          height: this.props.width >= 1200 ? 'calc(100vh - 265px)' : 'calc(100vh - 245px)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 697\n        },\n        __self: this\n      }, React.createElement(CircularProgress, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 699\n        },\n        __self: this\n      })) : this.displayMail(currentMail, folderMails, noContentFoundMessage), React.createElement(ComposeMail, {\n        open: composeMail,\n        user: user,\n        onClose: this.handleRequestClose.bind(this),\n        onMailSend: this.onMailSend.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 702\n        },\n        __self: this\n      })))), React.createElement(Snackbar, {\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'center'\n        },\n        open: showMessage,\n        autoHideDuration: 3000,\n        onClose: this.handleRequestClose,\n        ContentProps: {\n          'aria-describedby': 'message-id'\n        },\n        message: React.createElement(\"span\", {\n          id: \"message-id\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 717\n          },\n          __self: this\n        }, alertMessage),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 709\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Mail;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var settings = _ref.settings;\n  var width = settings.width;\n  return {\n    width: width\n  };\n};\n\nexport default connect(mapStateToProps)(Mail);","map":{"version":3,"sources":["C:\\Users\\Noelia\\Desktop\\compra\\source\\src\\app\\routes\\mail\\basic\\index.js"],"names":["React","Component","Button","Drawer","Checkbox","Snackbar","connect","IconButton","Menu","MenuItem","CircularProgress","mails","folders","filters","labels","options","MailList","ComposeMail","AppModuleHeader","MailDetail","IntlMessages","CustomScrollbars","Mail","MailSideBar","height","props","width","setState","composeMail","getNavFolders","getNavFilters","getNavLabels","onDeleteMail","state","allMail","map","mail","selected","folder","selectedFolder","alertMessage","showMessage","selectedMails","folderMails","filter","index","filterMails","id","noContentFoundMessage","currentMail","loader","setTimeout","icon","title","onFolderMenuItemSelect","folderId","handleRequestClose","onLabelMenuItemSelect","label","includes","removeLabel","addLabel","folderMenuState","labelMenuState","optionMenuState","starred","important","onFolderSelect","event","anchorEl","currentTarget","onLabelSelect","onOptionMenuSelect","onOptionMenuItemSelect","option","getAllMail","getUnselectedAllMail","getReadMail","getUnreadMail","getStarredMail","getUnStarredMail","getImportantMail","getUnimportantMail","length","optionName","selectedMail","read","color","searchMail","searchText","deleted","searchMails","subject","toLowerCase","indexOf","displayMail","onStartSelect","bind","onMailSelect","onMailChecked","onImportantSelect","getMailActions","drawerState","user","name","email","avatar","data","selectAll","splice","concat","evt","target","value","onToggleDrawer","updateSearch","onAllMailSelect","style","onMailSend","vertical","horizontal","mapStateToProps","settings"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AAEA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;;IAGMC,I;;;;;AA8ZJ,kBAAc;AAAA;;AAAA;;AACZ;;AADY,UA5ZdC,WA4Zc,GA5ZA,YAAM;AAClB,aAAO;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEL;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN,CAFF,CADF,CAFK,EAUL;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AAAkB,QAAA,SAAS,EAAC,8BAA5B;AACkB,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE,MAAKC,KAAL,CAAWC,KAAX,IAAoB,IAApB,GAA2B,qBAA3B,GAAmD;AAA5D,SADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAA4C,QAAA,SAAS,EAAC,WAAtD;AACQ,QAAA,OAAO,EAAE,mBAAM;AACb,gBAAKC,QAAL,CAAc;AAACC,YAAAA,WAAW,EAAE;AAAd,WAAd;AACD,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AAAG,QAAA,SAAS,EAAC,2BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,MADF,CAFF,EAWE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEG,MAAKC,aAAL,EAFH,EAIE;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,EAQG,MAAKC,aAAL,EARH,EAUE;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAVF,EAcG,MAAKC,YAAL,EAdH,CAXF,CADF,CAVK,CAAP;AA0CD,KAiXa;;AAAA,UA/WdC,YA+Wc,GA/WC,YAAM;AACnB,UAAMrB,KAAK,GAAG,MAAKsB,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAuB,UAAAC,IAAI;AAAA,eACvCA,IAAI,CAACC,QAAL,IAAkBD,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA7C,qBACMH,IADN;AACYE,UAAAA,MAAM,EAAE,CADpB;AACuBD,UAAAA,QAAQ,EAAE;AADjC,aAC2CD,IAFJ;AAAA,OAA3B,CAAd;;AAIA,YAAKT,QAAL,CAAc;AACZa,QAAAA,YAAY,EAAE,2BADF;AAEZC,QAAAA,WAAW,EAAE,IAFD;AAGZC,QAAAA,aAAa,EAAE,CAHH;AAIZR,QAAAA,OAAO,EAAEvB,KAJG;AAKZgC,QAAAA,WAAW,EAAEhC,KAAK,CAACiC,MAAN,CAAa,UAAAR,IAAI;AAAA,iBAAIA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA/B;AAAA,SAAjB;AALD,OAAd;AAOD,KAmWa;;AAAA,UAlWdV,aAkWc,GAlWE,YAAM;AACpB,aAAOjB,OAAO,CAACuB,GAAR,CAAY,UAACG,MAAD,EAASO,KAAT;AAAA,eACjB;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAgB,UAAA,OAAO,EAAE,mBAAM;AAC7B,gBAAMC,WAAW,GAAG,MAAKb,KAAL,CAAWC,OAAX,CAAmBU,MAAnB,CAA0B,UAAAR,IAAI;AAAA,qBAAIA,IAAI,CAACE,MAAL,KAAgBA,MAAM,CAACS,EAA3B;AAAA,aAA9B,CAApB;;AACA,kBAAKpB,QAAL,CAAc;AACZY,cAAAA,cAAc,EAAED,MAAM,CAACS,EADX;AAEZC,cAAAA,qBAAqB,EAAE,kCAFX;AAGZC,cAAAA,WAAW,EAAE,IAHD;AAIZC,cAAAA,MAAM,EAAE,IAJI;AAKZP,cAAAA,WAAW,EAAEG;AALD,aAAd;;AAOAK,YAAAA,UAAU,CAAC,YAAM;AACf,oBAAKxB,QAAL,CAAc;AAACuB,gBAAAA,MAAM,EAAE;AAAT,eAAd;AACD,aAFS,EAEP,IAFO,CAAV;AAGD,WAZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAcE;AAAM,UAAA,SAAS,oBAAa,MAAKjB,KAAL,CAAWM,cAAX,KAA8BD,MAAM,CAACS,EAArC,GAA0C,QAA1C,GAAqD,EAAlE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,sBAAeT,MAAM,CAACc,IAAtB,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOd,MAAM,CAACe,KAAd,CAFF,CAdF,CADiB;AAAA,OAAZ,CAAP;AAqBD,KA4Ua;;AAAA,UA3UdC,sBA2Uc,GA3UW,UAACC,QAAD,EAAc;AACrC,YAAKC,kBAAL;;AACA,UAAM7C,KAAK,GAAG,MAAKsB,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAuB,UAAAC,IAAI;AAAA,eACvCA,IAAI,CAACC,QAAL,IAAkBD,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA7C,qBACMH,IADN;AACYE,UAAAA,MAAM,EAAEiB,QADpB;AAC8BlB,UAAAA,QAAQ,EAAE;AADxC,aACkDD,IAFX;AAAA,OAA3B,CAAd;;AAIA,YAAKT,QAAL,CAAc;AACZe,QAAAA,aAAa,EAAE,CADH;AAEZR,QAAAA,OAAO,EAAEvB,KAFG;AAGZqC,QAAAA,qBAAqB,EAAE,kCAHX;AAIZR,QAAAA,YAAY,EAAE,kCAJF;AAKZC,QAAAA,WAAW,EAAE,IALD;AAMZE,QAAAA,WAAW,EAAEhC,KAAK,CAACiC,MAAN,CAAa,UAAAR,IAAI;AAAA,iBAAIA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA/B;AAAA,SAAjB;AAND,OAAd;AAQD,KA6Ta;;AAAA,UA5TdkB,qBA4Tc,GA5TU,UAACC,KAAD,EAAW;AACjC,YAAKF,kBAAL;;AACA,UAAM7C,KAAK,GAAG,MAAKsB,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAuB,UAAAC,IAAI,EAAI;AACzC,YAAIA,IAAI,CAACC,QAAL,IAAkBD,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAAjD,EAAkE;AAChE,cAAIH,IAAI,CAACtB,MAAL,CAAY6C,QAAZ,CAAqBD,KAAK,CAACX,EAA3B,CAAJ,EAAoC;AAClC,qCAAWX,IAAX;AAAiBtB,cAAAA,MAAM,EAAE,MAAK8C,WAAL,CAAiBxB,IAAjB,EAAuBsB,KAAK,CAACX,EAA7B;AAAzB;AACD,WAFD,MAEO;AACL,qCAAWX,IAAX;AAAiBtB,cAAAA,MAAM,EAAE,MAAK+C,QAAL,CAAczB,IAAd,EAAoBsB,KAAK,CAACX,EAA1B;AAAzB;AACD;AACF,SAND,MAMO;AACL,iBAAOX,IAAP;AACD;AACF,OAVW,CAAd;;AAYA,YAAKT,QAAL,CAAc;AACZqB,QAAAA,qBAAqB,EAAE,iCADX;AAEZR,QAAAA,YAAY,EAAE,4BAFF;AAGZC,QAAAA,WAAW,EAAE,IAHD;AAIZP,QAAAA,OAAO,EAAEvB,KAJG;AAKZgC,QAAAA,WAAW,EAAEhC,KAAK,CAACiC,MAAN,CAAa,UAAAR,IAAI;AAAA,iBAAIA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA/B;AAAA,SAAjB;AALD,OAAd;AAOD,KAuSa;;AAAA,UAtSdiB,kBAsSc,GAtSO,YAAM;AACzB,YAAK7B,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAE,KADD;AAEZa,QAAAA,WAAW,EAAE,KAFD;AAGZqB,QAAAA,eAAe,EAAE,KAHL;AAIZC,QAAAA,cAAc,EAAE,KAJJ;AAKZC,QAAAA,eAAe,EAAE;AALL,OAAd;AAOD,KA8Ra;;AAAA,UA7RdlC,aA6Rc,GA7RE,YAAM;AACpB,aAAOjB,OAAO,CAACsB,GAAR,CAAY,UAACS,MAAD,EAASC,KAAT;AAAA,eACjB;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAgB,UAAA,OAAO,EAAE,mBAAM;AAC7B,gBAAMC,WAAW,GAAG,MAAKb,KAAL,CAAWC,OAAX,CAAmBU,MAAnB,CAA0B,UAAAR,IAAI,EAAI;AACpD,kBAAIQ,MAAM,CAACG,EAAP,KAAc,CAAd,IAAmBX,IAAI,CAAC6B,OAA5B,EAAqC;AACnC,uBAAO7B,IAAP;AACD,eAFD,MAEO,IAAIQ,MAAM,CAACG,EAAP,KAAc,CAAd,IAAmBX,IAAI,CAAC8B,SAA5B,EAAuC;AAC5C,uBAAO9B,IAAP;AACD;;AACD,qBAAO,IAAP;AACD,aAPmB,CAApB;;AAQA,kBAAKT,QAAL,CAAc;AACZqB,cAAAA,qBAAqB,EAAE,kCADX;AAEZE,cAAAA,MAAM,EAAE,IAFI;AAGZP,cAAAA,WAAW,EAAEG;AAHD,aAAd;;AAKAK,YAAAA,UAAU,CAAC,YAAM;AACf,oBAAKxB,QAAL,CAAc;AAACuB,gBAAAA,MAAM,EAAE;AAAT,eAAd;AACD,aAFS,EAEP,IAFO,CAAV;AAGD,WAjBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAmBE;AAAM,UAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,sBAAeN,MAAM,CAACQ,IAAtB,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOR,MAAM,CAACS,KAAd,CAFF,CAnBF,CADiB;AAAA,OAAZ,CAAP;AA0BD,KAkQa;;AAAA,UAjQdc,cAiQc,GAjQG,UAAAC,KAAK,EAAI;AACxB,YAAKzC,QAAL,CAAc;AACZ0C,QAAAA,QAAQ,EAAED,KAAK,CAACE,aADJ;AAEZR,QAAAA,eAAe,EAAE,CAAC,MAAK7B,KAAL,CAAW6B;AAFjB,OAAd;AAID,KA4Pa;;AAAA,UA3PdS,aA2Pc,GA3PE,UAAAH,KAAK,EAAI;AACvB,YAAKzC,QAAL,CAAc;AACZ0C,QAAAA,QAAQ,EAAED,KAAK,CAACE,aADJ;AAEZP,QAAAA,cAAc,EAAE,CAAC,MAAK9B,KAAL,CAAW8B;AAFhB,OAAd;AAID,KAsPa;;AAAA,UArPdS,kBAqPc,GArPO,UAAAJ,KAAK,EAAI;AAC5B,YAAKzC,QAAL,CAAc;AACZ0C,QAAAA,QAAQ,EAAED,KAAK,CAACE,aADJ;AAEZN,QAAAA,eAAe,EAAE,CAAC,MAAK/B,KAAL,CAAW+B;AAFjB,OAAd;AAID,KAgPa;;AAAA,UA/OdS,sBA+Oc,GA/OW,UAACC,MAAD,EAAY;AACnC,cAAQA,MAAM,CAACrB,KAAf;AACE,aAAK,KAAL;AACE,gBAAKG,kBAAL;;AACA,gBAAKmB,UAAL;;AACA;;AACF,aAAK,MAAL;AACE,gBAAKnB,kBAAL;;AACA,gBAAKoB,oBAAL;;AACA;;AACF,aAAK,MAAL;AACE,gBAAKpB,kBAAL;;AACA,gBAAKqB,WAAL;;AACA;;AACF,aAAK,QAAL;AACE,gBAAKrB,kBAAL;;AACA,gBAAKsB,aAAL;;AACA;;AACF,aAAK,SAAL;AACE,gBAAKtB,kBAAL;;AACA,gBAAKuB,cAAL;;AACA;;AACF,aAAK,WAAL;AACE,gBAAKvB,kBAAL;;AACA,gBAAKwB,gBAAL;;AACA;;AACF,aAAK,WAAL;AACE,gBAAKxB,kBAAL;;AACA,gBAAKyB,gBAAL;;AACA;;AACF,aAAK,aAAL;AACE,gBAAKzB,kBAAL;;AACA,gBAAK0B,kBAAL;;AACA;;AACF;AAAU,gBAAK1B,kBAAL;;AACR,gBAAKmB,UAAL;;AAlCJ;AAoCD,KA0Ma;;AAAA,UAzMdA,UAyMc,GAzMD,YAAM;AACjB,UAAIhE,KAAK,GAAG,MAAKsB,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAuB,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA3B,qBACxCH,IADwC;AAE3CC,UAAAA,QAAQ,EAAE;AAFiC,aAGzCD,IAH+B;AAAA,OAAvB,CAAZ;;AAIA,YAAKT,QAAL,CAAc;AACZe,QAAAA,aAAa,EAAE/B,KAAK,CAACwE,MADT;AAEZjD,QAAAA,OAAO,EAAEvB,KAFG;AAGZyE,QAAAA,UAAU,EAAE,KAHA;AAIZzC,QAAAA,WAAW,EAAEhC,KAAK,CAACiC,MAAN,CAAa,UAAAR,IAAI;AAAA,iBAAIA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA/B;AAAA,SAAjB;AAJD,OAAd;AAMD,KA8La;;AAAA,UA7LdqC,oBA6Lc,GA7LS,YAAM;AAC3B,UAAIjE,KAAK,GAAG,MAAKsB,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAuB,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA3B,qBACxCH,IADwC;AAE3CC,UAAAA,QAAQ,EAAE;AAFiC,aAGzCD,IAH+B;AAAA,OAAvB,CAAZ;;AAIA,YAAKT,QAAL,CAAc;AACZe,QAAAA,aAAa,EAAE,CADH;AAEZR,QAAAA,OAAO,EAAEvB,KAFG;AAGZyE,QAAAA,UAAU,EAAE,MAHA;AAIZzC,QAAAA,WAAW,EAAEhC,KAAK,CAACiC,MAAN,CAAa,UAAAR,IAAI;AAAA,iBAAIA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA/B;AAAA,SAAjB;AAJD,OAAd;AAMD,KAkLa;;AAAA,UAjLdsC,WAiLc,GAjLA,YAAM;AAClB,UAAIQ,YAAY,GAAG,CAAnB;;AACA,UAAI1E,KAAK,GAAG,MAAKsB,KAAL,CAAWC,OAAX,CAAmBU,MAAnB,CAA0B,UAAAR,IAAI;AAAA,eAAIA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA/B;AAAA,OAA9B,CAAZ;;AACA5B,MAAAA,KAAK,GAAGA,KAAK,CAACwB,GAAN,CAAU,UAACC,IAAD,EAAU;AAC1B,YAAIA,IAAI,CAACkD,IAAT,EAAe;AACbD,UAAAA,YAAY;AACZ,mCAAWjD,IAAX;AAAiBC,YAAAA,QAAQ,EAAE;AAA3B;AACD;;AACD,iCAAWD,IAAX;AAAiBC,UAAAA,QAAQ,EAAE;AAA3B;AACD,OANO,CAAR;;AAOA,YAAKV,QAAL,CAAc;AACZe,QAAAA,aAAa,EAAE2C,YADH;AAEZnD,QAAAA,OAAO,EAAEvB,KAFG;AAGZyE,QAAAA,UAAU,EAAE,MAHA;AAIZzC,QAAAA,WAAW,EAAEhC,KAAK,CAACiC,MAAN,CAAa,UAAAR,IAAI;AAAA,iBAAIA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA/B;AAAA,SAAjB;AAJD,OAAd;;AAMA,aAAO5B,KAAP;AACD,KAgKa;;AAAA,UA/JdmE,aA+Jc,GA/JE,YAAM;AACpB,UAAIO,YAAY,GAAG,CAAnB;;AACA,UAAI1E,KAAK,GAAG,MAAKsB,KAAL,CAAWC,OAAX,CAAmBU,MAAnB,CAA0B,UAAAR,IAAI;AAAA,eAAIA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA/B;AAAA,OAA9B,CAAZ;;AACA5B,MAAAA,KAAK,GAAGA,KAAK,CAACwB,GAAN,CAAU,UAACC,IAAD,EAAU;AAC1B,YAAI,CAACA,IAAI,CAACkD,IAAV,EAAgB;AACdD,UAAAA,YAAY;AACZ,mCAAWjD,IAAX;AAAiBC,YAAAA,QAAQ,EAAE;AAA3B;AACD;;AACD,iCAAWD,IAAX;AAAiBC,UAAAA,QAAQ,EAAE;AAA3B;AACD,OANO,CAAR;;AAOA,YAAKV,QAAL,CAAc;AACZe,QAAAA,aAAa,EAAE2C,YADH;AAEZnD,QAAAA,OAAO,EAAEvB,KAFG;AAGZyE,QAAAA,UAAU,EAAE,QAHA;AAIZzC,QAAAA,WAAW,EAAEhC,KAAK,CAACiC,MAAN,CAAa,UAAAR,IAAI;AAAA,iBAAIA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA/B;AAAA,SAAjB;AAJD,OAAd;;AAMA,aAAO5B,KAAP;AACD,KA8Ia;;AAAA,UA7IdoE,cA6Ic,GA7IG,YAAM;AACrB,UAAIM,YAAY,GAAG,CAAnB;;AACA,UAAI1E,KAAK,GAAG,MAAKsB,KAAL,CAAWC,OAAX,CAAmBU,MAAnB,CAA0B,UAAAR,IAAI;AAAA,eAAIA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA/B;AAAA,OAA9B,CAAZ;;AACA5B,MAAAA,KAAK,GAAGA,KAAK,CAACwB,GAAN,CAAU,UAACC,IAAD,EAAU;AAC1B,YAAIA,IAAI,CAAC6B,OAAT,EAAkB;AAChBoB,UAAAA,YAAY;AACZ,mCAAWjD,IAAX;AAAiBC,YAAAA,QAAQ,EAAE;AAA3B;AACD;;AACD,iCAAWD,IAAX;AAAiBC,UAAAA,QAAQ,EAAE;AAA3B;AACD,OANO,CAAR;;AAOA,YAAKV,QAAL,CAAc;AACZe,QAAAA,aAAa,EAAE2C,YADH;AAEZnD,QAAAA,OAAO,EAAEvB,KAFG;AAGZyE,QAAAA,UAAU,EAAE,SAHA;AAIZzC,QAAAA,WAAW,EAAEhC,KAAK,CAACiC,MAAN,CAAa,UAAAR,IAAI;AAAA,iBAAIA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA/B;AAAA,SAAjB;AAJD,OAAd;;AAMA,aAAO5B,KAAP;AACD,KA4Ha;;AAAA,UA3HdqE,gBA2Hc,GA3HK,YAAM;AACvB,UAAIK,YAAY,GAAG,CAAnB;;AACA,UAAI1E,KAAK,GAAG,MAAKsB,KAAL,CAAWC,OAAX,CAAmBU,MAAnB,CAA0B,UAAAR,IAAI;AAAA,eAAIA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA/B;AAAA,OAA9B,CAAZ;;AACA5B,MAAAA,KAAK,GAAGA,KAAK,CAACwB,GAAN,CAAU,UAACC,IAAD,EAAU;AAC1B,YAAI,CAACA,IAAI,CAAC6B,OAAV,EAAmB;AACjBoB,UAAAA,YAAY;AACZ,mCAAWjD,IAAX;AAAiBC,YAAAA,QAAQ,EAAE;AAA3B;AACD;;AACD,iCAAWD,IAAX;AAAiBC,UAAAA,QAAQ,EAAE;AAA3B;AACD,OANO,CAAR;;AAOA,YAAKV,QAAL,CAAc;AACZe,QAAAA,aAAa,EAAE2C,YADH;AAEZnD,QAAAA,OAAO,EAAEvB,KAFG;AAGZyE,QAAAA,UAAU,EAAE,WAHA;AAIZzC,QAAAA,WAAW,EAAEhC,KAAK,CAACiC,MAAN,CAAa,UAAAR,IAAI;AAAA,iBAAIA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA/B;AAAA,SAAjB;AAJD,OAAd;;AAMA,aAAO5B,KAAP;AACD,KA0Ga;;AAAA,UAzGdsE,gBAyGc,GAzGK,YAAM;AACvB,UAAII,YAAY,GAAG,CAAnB;;AACA,UAAI1E,KAAK,GAAG,MAAKsB,KAAL,CAAWC,OAAX,CAAmBU,MAAnB,CAA0B,UAAAR,IAAI;AAAA,eAAIA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA/B;AAAA,OAA9B,CAAZ;;AACA5B,MAAAA,KAAK,GAAGA,KAAK,CAACwB,GAAN,CAAU,UAACC,IAAD,EAAU;AAC1B,YAAIA,IAAI,CAAC8B,SAAT,EAAoB;AAClBmB,UAAAA,YAAY;AACZ,mCAAWjD,IAAX;AAAiBC,YAAAA,QAAQ,EAAE;AAA3B;AACD;;AACD,iCAAWD,IAAX;AAAiBC,UAAAA,QAAQ,EAAE;AAA3B;AACD,OANO,CAAR;;AAOA,YAAKV,QAAL,CAAc;AACZe,QAAAA,aAAa,EAAE2C,YADH;AAEZnD,QAAAA,OAAO,EAAEvB,KAFG;AAGZyE,QAAAA,UAAU,EAAE,WAHA;AAIZzC,QAAAA,WAAW,EAAEhC,KAAK,CAACiC,MAAN,CAAa,UAAAR,IAAI;AAAA,iBAAIA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA/B;AAAA,SAAjB;AAJD,OAAd;;AAMA,aAAO5B,KAAP;AACD,KAwFa;;AAAA,UAvFduE,kBAuFc,GAvFO,YAAM;AACzB,UAAIG,YAAY,GAAG,CAAnB;;AACA,UAAI1E,KAAK,GAAG,MAAKsB,KAAL,CAAWC,OAAX,CAAmBU,MAAnB,CAA0B,UAAAR,IAAI;AAAA,eAAIA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA/B;AAAA,OAA9B,CAAZ;;AACA5B,MAAAA,KAAK,GAAGA,KAAK,CAACwB,GAAN,CAAU,UAACC,IAAD,EAAU;AAC1B,YAAI,CAACA,IAAI,CAAC8B,SAAV,EAAqB;AACnBmB,UAAAA,YAAY;AACZ,mCAAWjD,IAAX;AAAiBC,YAAAA,QAAQ,EAAE;AAA3B;AACD;;AACD,iCAAWD,IAAX;AAAiBC,UAAAA,QAAQ,EAAE;AAA3B;AACD,OANO,CAAR;;AAOA,YAAKV,QAAL,CAAc;AACZe,QAAAA,aAAa,EAAE2C,YADH;AAEZD,QAAAA,UAAU,EAAE,aAFA;AAGZlD,QAAAA,OAAO,EAAEvB,KAHG;AAIZqC,QAAAA,qBAAqB,EAAE,iCAJX;AAKZL,QAAAA,WAAW,EAAEhC,KAAK,CAACiC,MAAN,CAAa,UAAAR,IAAI;AAAA,iBAAIA,IAAI,CAACE,MAAL,KAAgB,MAAKL,KAAL,CAAWM,cAA/B;AAAA,SAAjB;AALD,OAAd;;AAOA,aAAO5B,KAAP;AACD,KAqEa;;AAAA,UApEdoB,YAoEc,GApEC,YAAM;AACnB,aAAOjB,MAAM,CAACqB,GAAP,CAAW,UAACuB,KAAD,EAAQb,KAAR;AAAA,eAChB;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAgB,UAAA,OAAO,EAAE,mBAAM;AAC7B,gBAAMC,WAAW,GAAG,MAAKb,KAAL,CAAWC,OAAX,CAAmBU,MAAnB,CAA0B,UAAAR,IAAI;AAAA,qBAAIA,IAAI,CAACtB,MAAL,CAAY6C,QAAZ,CAAqBD,KAAK,CAACX,EAA3B,CAAJ;AAAA,aAA9B,CAApB;;AACA,kBAAKpB,QAAL,CAAc;AACZuB,cAAAA,MAAM,EAAE,IADI;AAEZF,cAAAA,qBAAqB,EAAE,iCAFX;AAGZL,cAAAA,WAAW,EAAEG;AAHD,aAAd;;AAKAK,YAAAA,UAAU,CAAC,YAAM;AACf,oBAAKxB,QAAL,CAAc;AAACuB,gBAAAA,MAAM,EAAE;AAAT,eAAd;AACD,aAFS,EAEP,IAFO,CAAV;AAGD,WAVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAYE;AAAM,UAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,kCAA2BQ,KAAK,CAAC6B,KAAjC,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAO7B,KAAK,CAACL,KAAb,CAFF,CAZF,CADgB;AAAA,OAAX,CAAP;AAmBD,KAgDa;;AAAA,UA/CdmC,UA+Cc,GA/CD,UAACC,UAAD,EAAgB;AAC3B,UAAIA,UAAU,KAAK,EAAnB,EAAuB;AACrB,cAAK9D,QAAL,CAAc;AAACgB,UAAAA,WAAW,EAAE,MAAKV,KAAL,CAAWC,OAAX,CAAmBU,MAAnB,CAA0B,UAACR,IAAD;AAAA,mBAAU,CAACA,IAAI,CAACsD,OAAhB;AAAA,WAA1B;AAAd,SAAd;AACD,OAFD,MAEO;AACL,YAAMC,WAAW,GAAG,MAAK1D,KAAL,CAAWC,OAAX,CAAmBU,MAAnB,CAA0B,UAACR,IAAD;AAAA,iBAC5C,CAACA,IAAI,CAACsD,OAAN,IAAiBtD,IAAI,CAACwD,OAAL,CAAaC,WAAb,GAA2BC,OAA3B,CAAmCL,UAAU,CAACI,WAAX,EAAnC,IAA+D,CAAC,CADrC;AAAA,SAA1B,CAApB;;AAEA,cAAKlE,QAAL,CAAc;AACZgB,UAAAA,WAAW,EAAEgD;AADD,SAAd;AAGD;AACF,KAqCa;;AAAA,UApCdI,WAoCc,GApCA,UAAC9C,WAAD,EAAcN,WAAd,EAA2BK,qBAA3B,EAAqD;AACjE,aAAQ;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACLC,WAAW,KAAK,IAAhB,GACCN,WAAW,CAACwC,MAAZ,KAAuB,CAAvB,GACE;AAAK,QAAA,SAAS,EAAC,kDAAf;AACK,QAAA,KAAK,EAAE;AAAC3D,UAAAA,MAAM,EAAE,MAAKC,KAAL,CAAWC,KAAX,IAAoB,IAApB,GAA2B,qBAA3B,GAAmD;AAA5D,SADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEGsB,qBAFH,CADF,GAME,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEL,WAAjB;AAA8B,QAAA,aAAa,EAAE,MAAKqD,aAAL,CAAmBC,IAAnB,uDAA7C;AACU,QAAA,YAAY,EAAE,MAAKC,YAAL,CAAkBD,IAAlB,uDADxB;AAEU,QAAA,KAAK,EAAE,MAAKxE,KAAL,CAAWC,KAF5B;AAGU,QAAA,aAAa,EAAE,MAAKyE,aAAL,CAAmBF,IAAnB,uDAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPH,GAYC,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAEhD,WAAlB;AAA+B,QAAA,aAAa,EAAE,MAAK+C,aAAL,CAAmBC,IAAnB,uDAA9C;AACY,QAAA,KAAK,EAAE,MAAKxE,KAAL,CAAWC,KAD9B;AAEY,QAAA,iBAAiB,EAAE,MAAK0E,iBAAL,CAAuBH,IAAvB,uDAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbI,CAAR;AAiBD,KAkBa;;AAAA,UAjBZI,cAiBY,GAjBK,YAAM;AACvB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACL,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAE,MAAKlC,cAAL,CAAoB8B,IAApB,uDAArB;AAAqD,QAAA,SAAS,EAAC,UAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADK,EAKL,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAE,MAAKjE,YAAL,CAAkBiE,IAAlB,uDAArB;AAAmD,QAAA,SAAS,EAAC,UAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CALK,EASL,oBAAC,UAAD;AACE,QAAA,OAAO,EAAE,MAAK1B,aAAL,CAAmB0B,IAAnB,uDADX;AAC0C,QAAA,SAAS,EAAC,UADpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAG,QAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CATK,CAAP;AAcD,KAEa;;AAEZ,UAAKhE,KAAL,GAAa;AACXuD,MAAAA,UAAU,EAAE,EADD;AAEXxC,MAAAA,qBAAqB,EAAE,kCAFZ;AAGXR,MAAAA,YAAY,EAAE,EAHH;AAIXC,MAAAA,WAAW,EAAE,KAJF;AAKX6D,MAAAA,WAAW,EAAE,KALF;AAMXlB,MAAAA,UAAU,EAAE,MAND;AAOXf,MAAAA,QAAQ,EAAE,IAPC;AAQXnC,MAAAA,OAAO,EAAEvB,KARE;AASXuC,MAAAA,MAAM,EAAE,IATG;AAUXD,MAAAA,WAAW,EAAE,IAVF;AAWXsD,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE,gBADF;AAEJC,QAAAA,KAAK,EAAE,oBAFH;AAGJC,QAAAA,MAAM,EAAG;AAHL,OAXK;AAgBXhE,MAAAA,aAAa,EAAE,CAhBJ;AAiBXH,MAAAA,cAAc,EAAE,CAjBL;AAkBXX,MAAAA,WAAW,EAAE,KAlBF;AAmBXmC,MAAAA,cAAc,EAAE,KAnBL;AAoBXD,MAAAA,eAAe,EAAE,KApBN;AAqBXE,MAAAA,eAAe,EAAE,KArBN;AAsBXrB,MAAAA,WAAW,EAAEhC,KAAK,CAACiC,MAAN,CAAa,UAAAR,IAAI;AAAA,eAAIA,IAAI,CAACE,MAAL,KAAgB,CAApB;AAAA,OAAjB;AAtBF,KAAb;AAFY;AA0Bb;;;;wCAEmB;AAAA;;AAClBa,MAAAA,UAAU,CAAC,YAAM;AACf,QAAA,MAAI,CAACxB,QAAL,CAAc;AAACuB,UAAAA,MAAM,EAAE;AAAT,SAAd;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;;;kCAEayD,I,EAAM;AAClBA,MAAAA,IAAI,CAACtE,QAAL,GAAgB,CAACsE,IAAI,CAACtE,QAAtB;AACA,UAAIgD,YAAY,GAAG,CAAnB;AACA,UAAM1E,KAAK,GAAG,KAAKsB,KAAL,CAAWU,WAAX,CAAuBR,GAAvB,CAA2B,UAAAC,IAAI,EAAI;AAC7C,YAAIA,IAAI,CAACC,QAAT,EAAmB;AACjBgD,UAAAA,YAAY;AACb;;AACD,YAAIjD,IAAI,CAACW,EAAL,KAAY4D,IAAI,CAAC5D,EAArB,EAAyB;AACvB,cAAIX,IAAI,CAACC,QAAT,EAAmB;AACjBgD,YAAAA,YAAY;AACb;;AACD,iBAAOsB,IAAP;AACD,SALD,MAKO;AACL,iBAAOvE,IAAP;AACD;AACF,OAZW,CAAd;AAcA,WAAKT,QAAL,CAAc;AACZe,QAAAA,aAAa,EAAE2C,YADH;AAEZ1C,QAAAA,WAAW,EAAEhC;AAFD,OAAd;AAID;;;sCAEiB;AAChB,UAAMiG,SAAS,GAAG,KAAK3E,KAAL,CAAWS,aAAX,IAA4B,KAAKT,KAAL,CAAWU,WAAX,CAAuBwC,MAArE;;AACA,UAAIyB,SAAJ,EAAe;AACb,aAAKjC,UAAL;AACD,OAFD,MAEO;AACL,aAAKC,oBAAL;AACD;AACF;;;gCAEWxC,I,EAAMsB,K,EAAO;AACvBtB,MAAAA,IAAI,CAACtB,MAAL,CAAY+F,MAAZ,CAAmBzE,IAAI,CAACtB,MAAL,CAAYgF,OAAZ,CAAoBpC,KAApB,CAAnB,EAA+C,CAA/C;;AACA,UAAI,KAAKzB,KAAL,CAAWgB,WAAX,KAA2B,IAA3B,IAAmCb,IAAI,CAACW,EAAL,KAAY,KAAKd,KAAL,CAAWgB,WAAX,CAAuBF,EAA1E,EAA8E;AAC5E,aAAKpB,QAAL,CAAc;AACZsB,UAAAA,WAAW,oBAAMb,IAAN;AAAYtB,YAAAA,MAAM,EAAEsB,IAAI,CAACtB;AAAzB;AADC,SAAd;AAGD;;AACD,aAAOsB,IAAI,CAACtB,MAAZ;AACD;;;kCAEa6F,I,EAAM;AAClBA,MAAAA,IAAI,CAAC1C,OAAL,GAAe,CAAC0C,IAAI,CAAC1C,OAArB;AACA,WAAKtC,QAAL,CAAc;AACZa,QAAAA,YAAY,EAAEmE,IAAI,CAAC1C,OAAL,GAAe,mBAAf,GAAqC,qBADvC;AAEZxB,QAAAA,WAAW,EAAE,IAFD;AAGZE,QAAAA,WAAW,EAAE,KAAKV,KAAL,CAAWU,WAAX,CAAuBR,GAAvB,CAA2B,UAAAC,IAAI;AAAA,iBAC1CA,IAAI,CAACW,EAAL,KAAY4D,IAAI,CAAC5D,EAAjB,GACE4D,IADF,GACSvE,IAFiC;AAAA,SAA/B;AAHD,OAAd;AAQD;;;sCAEiBuE,I,EAAM;AACtBA,MAAAA,IAAI,CAACzC,SAAL,GAAiB,CAACyC,IAAI,CAACzC,SAAvB;AACA,WAAKvC,QAAL,CAAc;AACZa,QAAAA,YAAY,EAAEmE,IAAI,CAACzC,SAAL,GAAiB,wBAAjB,GAA4C,0BAD9C;AAEZzB,QAAAA,WAAW,EAAE,IAFD;AAGZE,QAAAA,WAAW,EAAE,KAAKV,KAAL,CAAWU,WAAX,CAAuBR,GAAvB,CAA2B,UAAAC,IAAI;AAAA,iBAC1CA,IAAI,CAACW,EAAL,KAAY4D,IAAI,CAAC5D,EAAjB,GACE4D,IADF,GACSvE,IAFiC;AAAA,SAA/B;AAHD,OAAd;AAQD;;;+BAEUuE,I,EAAM;AACf,WAAKhF,QAAL,CACE;AACEa,QAAAA,YAAY,EAAE,wBADhB;AAEEC,QAAAA,WAAW,EAAE,IAFf;AAGEE,QAAAA,WAAW,EAAE,KAAKV,KAAL,CAAWC,OAAX,CAAmB4E,MAAnB,CAA0BH,IAA1B,CAHf;AAIEzE,QAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,CAAmB4E,MAAnB,CAA0BH,IAA1B;AAJX,OADF;AAQD;;;iCAEYvE,I,EAAM;AAAA;;AACjB,WAAKT,QAAL,CAAc;AACZuB,QAAAA,MAAM,EAAE,IADI;AAEZD,QAAAA,WAAW,EAAEb;AAFD,OAAd;AAIAe,MAAAA,UAAU,CAAC,YAAM;AACf,QAAA,MAAI,CAACxB,QAAL,CAAc;AAACuB,UAAAA,MAAM,EAAE;AAAT,SAAd;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;;;6BAEQd,I,EAAMsB,K,EAAO;AACpB,UAAI,KAAKzB,KAAL,CAAWgB,WAAX,KAA2B,IAA3B,IAAmCb,IAAI,CAACW,EAAL,KAAY,KAAKd,KAAL,CAAWgB,WAAX,CAAuBF,EAA1E,EAA8E;AAC5E,aAAKpB,QAAL,CAAc;AACZsB,UAAAA,WAAW,oBAAMb,IAAN;AAAYtB,YAAAA,MAAM,EAAEsB,IAAI,CAACtB,MAAL,CAAYgG,MAAZ,CAAmBpD,KAAnB;AAApB;AADC,SAAd;AAGD;;AACD,aAAOtB,IAAI,CAACtB,MAAL,CAAYgG,MAAZ,CAAmBpD,KAAnB,CAAP;AACD;;;iCAEYqD,G,EAAK;AAChB,WAAKpF,QAAL,CAAc;AACZ6D,QAAAA,UAAU,EAAEuB,GAAG,CAACC,MAAJ,CAAWC;AADX,OAAd;AAGA,WAAKzB,UAAL,CAAgBuB,GAAG,CAACC,MAAJ,CAAWC,KAA3B;AACD;;;qCAEgB;AACf,WAAKtF,QAAL,CAAc;AACZ2E,QAAAA,WAAW,EAAE,CAAC,KAAKrE,KAAL,CAAWqE;AADb,OAAd;AAGD;;;6BAEQ;AAAA;;AAAA,wBACwH,KAAKrE,KAD7H;AAAA,UACAS,aADA,eACAA,aADA;AAAA,UACeQ,MADf,eACeA,MADf;AAAA,UACuBD,WADvB,eACuBA,WADvB;AAAA,UACoCN,WADpC,eACoCA,WADpC;AAAA,UACiDf,WADjD,eACiDA,WADjD;AAAA,UAC8D2E,IAD9D,eAC8DA,IAD9D;AAAA,UACoE/D,YADpE,eACoEA,YADpE;AAAA,UACkFC,WADlF,eACkFA,WADlF;AAAA,UAC+FO,qBAD/F,eAC+FA,qBAD/F;AAEP,aAEE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,6CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAE,KAAKf,KAAL,CAAWqE,WADnB;AAEE,QAAA,OAAO,EAAE,KAAKY,cAAL,CAAoBjB,IAApB,CAAyB,IAAzB,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGG,KAAK1E,WAAL,EAHH,CADF,CAFF,EASE;AAAK,QAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKA,WAAL,EADH,CATF,EAaE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,8BAAtB;AAAqD,sBAAW,MAAhE;AACY,QAAA,OAAO,EAAE,KAAK2F,cAAL,CAAoBjB,IAApB,CAAyB,IAAzB,CADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAFF,EAME,oBAAC,eAAD;AAAiB,QAAA,WAAW,EAAC,cAA7B;AAA4C,QAAA,IAAI,EAAE,KAAKhE,KAAL,CAAWsE,IAA7D;AACiB,QAAA,QAAQ,EAAE,KAAKY,YAAL,CAAkBlB,IAAlB,CAAuB,IAAvB,CAD3B;AAEiB,QAAA,KAAK,EAAE,KAAKhE,KAAL,CAAWuD,UAFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CAFF,EAcE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKvD,KAAL,CAAWgB,WAAX,KAA2B,IAA3B,GACC;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAC,SAAhB;AACU,QAAA,aAAa,EAAEP,aAAa,GAAG,CAAhB,IAAqBA,aAAa,GAAGC,WAAW,CAACwC,MAD1E;AAEU,QAAA,OAAO,EAAEzC,aAAa,GAAG,CAFnC;AAGU,QAAA,QAAQ,EAAE,KAAK0E,eAAL,CAAqBnB,IAArB,CAA0B,IAA1B,CAHpB;AAIU,QAAA,KAAK,EAAC,YAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME;AAAK,QAAA,SAAS,EAAC,2BAAf;AAA2C,QAAA,OAAO,EAAE,KAAKzB,kBAAL,CAAwByB,IAAxB,CAA6B,IAA7B,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAyB,KAAKhE,KAAL,CAAWmD,UAApC,CADF,EAEE,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,CANF,CADD,GAeC,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,UAAtB;AACE,QAAA,OAAO,EAAE,mBAAM;AACb,UAAA,MAAI,CAACzD,QAAL,CAAc;AACZsB,YAAAA,WAAW,EAAE;AADD,WAAd;AAGD,SALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME;AAAG,QAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CAhBJ,EA0BIP,aAAa,GAAG,CAAjB,IAAuB,KAAK2D,cAAL,EA1B1B,EA6BE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,aAAT;AACM,QAAA,QAAQ,EAAE,KAAKpE,KAAL,CAAWoC,QAD3B;AAEM,QAAA,IAAI,EAAE,KAAKpC,KAAL,CAAW+B,eAFvB;AAGM,QAAA,OAAO,EAAE,KAAKR,kBAHpB;AAIM,QAAA,aAAa,EAAE;AACb6D,UAAAA,KAAK,EAAE;AACL3F,YAAAA,KAAK,EAAE;AADF;AADM,SAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASGX,OAAO,CAACoB,GAAR,CAAY,UAAAuC,MAAM;AAAA,eACjB,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,MAAM,CAACrB,KAAtB;AACU,UAAA,OAAO,EAAE,MAAI,CAACoB,sBAAL,CAA4BwB,IAA5B,CAAiC,MAAjC,EAAuCvB,MAAvC,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEGA,MAAM,CAACrB,KAFV,CADiB;AAAA,OAAlB,CATH,CA7BF,EA8CE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,aAAT;AACM,QAAA,QAAQ,EAAE,KAAKpB,KAAL,CAAWoC,QAD3B;AAEM,QAAA,IAAI,EAAE,KAAKpC,KAAL,CAAW6B,eAFvB;AAGM,QAAA,OAAO,EAAE,KAAKN,kBAHpB;AAIM,QAAA,aAAa,EAAE;AACb6D,UAAAA,KAAK,EAAE;AACL3F,YAAAA,KAAK,EAAE;AADF;AADM,SAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASGd,OAAO,CAACuB,GAAR,CAAY,UAAAG,MAAM;AAAA,eACjB,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,MAAM,CAACS,EAAtB;AACU,UAAA,OAAO,EAAE,MAAI,CAACO,sBAAL,CAA4B2C,IAA5B,CAAiC,MAAjC,EAAuC3D,MAAM,CAACS,EAA9C,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEGT,MAAM,CAACe,KAFV,CADiB;AAAA,OAAlB,CATH,CA9CF,EA8DE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,YAAT;AACM,QAAA,QAAQ,EAAE,KAAKpB,KAAL,CAAWoC,QAD3B;AAEM,QAAA,IAAI,EAAE,KAAKpC,KAAL,CAAW8B,cAFvB;AAGM,QAAA,OAAO,EAAE,KAAKP,kBAHpB;AAIM,QAAA,aAAa,EAAE;AACb6D,UAAAA,KAAK,EAAE;AACL3F,YAAAA,KAAK,EAAE;AADF;AADM,SAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASGZ,MAAM,CAACqB,GAAP,CAAW,UAAAuB,KAAK;AAAA,eACf,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,KAAK,CAACX,EAArB;AACU,UAAA,OAAO,EAAE,MAAI,CAACU,qBAAL,CAA2BwC,IAA3B,CAAgC,MAAhC,EAAsCvC,KAAtC,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEGA,KAAK,CAACL,KAFT,CADe;AAAA,OAAhB,CATH,CA9DF,CADF,EAiFGH,MAAM,GACL;AAAK,QAAA,SAAS,EAAC,aAAf;AACK,QAAA,KAAK,EAAE;AAAC1B,UAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,KAAX,IAAoB,IAApB,GAA2B,qBAA3B,GAAmD;AAA5D,SADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADK,GAII,KAAKqE,WAAL,CAAiB9C,WAAjB,EAA8BN,WAA9B,EAA2CK,qBAA3C,CArFb,EAuFE,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAEpB,WAAnB;AAAgC,QAAA,IAAI,EAAE2E,IAAtC;AACa,QAAA,OAAO,EAAE,KAAK/C,kBAAL,CAAwByC,IAAxB,CAA6B,IAA7B,CADtB;AAEa,QAAA,UAAU,EAAE,KAAKqB,UAAL,CAAgBrB,IAAhB,CAAqB,IAArB,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAvFF,CAdF,CAbF,CADF,EA0HE,oBAAC,QAAD;AACE,QAAA,YAAY,EAAE;AAACsB,UAAAA,QAAQ,EAAE,KAAX;AAAkBC,UAAAA,UAAU,EAAE;AAA9B,SADhB;AAEE,QAAA,IAAI,EAAE/E,WAFR;AAGE,QAAA,gBAAgB,EAAE,IAHpB;AAIE,QAAA,OAAO,EAAE,KAAKe,kBAJhB;AAKE,QAAA,YAAY,EAAE;AACZ,8BAAoB;AADR,SALhB;AAQE,QAAA,OAAO,EAAE;AAAM,UAAA,EAAE,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuBhB,YAAvB,CARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1HF,CADF,CAFF;AA0ID;;;;EAzrBgBvC,S;;AA4rBnB,IAAMwH,eAAe,GAAG,SAAlBA,eAAkB,OAAgB;AAAA,MAAdC,QAAc,QAAdA,QAAc;AAAA,MAC/BhG,KAD+B,GACtBgG,QADsB,CAC/BhG,KAD+B;AAEtC,SAAO;AAACA,IAAAA,KAAK,EAALA;AAAD,GAAP;AACD,CAHD;;AAIA,eAAepB,OAAO,CAACmH,eAAD,CAAP,CAAyBnG,IAAzB,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport {connect} from 'react-redux';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport mails from '../data/mails';\r\nimport folders from '../data/folders';\r\nimport filters from '../data/filters';\r\nimport labels from '../data/labels';\r\nimport options from '../data/options';\r\nimport MailList from 'components/mail/MailList';\r\n\r\nimport ComposeMail from 'components/mail/Compose/index';\r\nimport AppModuleHeader from 'components/AppModuleHeader/index';\r\nimport MailDetail from 'components/mail/MailDetail/index';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport CustomScrollbars from 'util/CustomScrollbars';\r\n\r\n\r\nclass Mail extends Component {\r\n\r\n  MailSideBar = () => {\r\n    return <div className=\"module-side\">\r\n\r\n      <div className=\"module-side-header\">\r\n        <div className=\"module-logo\">\r\n          <i className=\"zmdi zmdi-email mr-3\"/>\r\n          <span><IntlMessages id=\"mail.mailbox\"/></span>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className=\"module-side-content\">\r\n        <CustomScrollbars className=\"module-side-scroll scrollbar\"\r\n                          style={{height: this.props.width >= 1200 ? 'calc(100vh - 200px)' : 'calc(100vh - 80px)'}}>\r\n          <div className=\"module-add-task\">\r\n            <Button variant=\"contained\" color=\"primary\" className=\"btn-block\"\r\n                    onClick={() => {\r\n                      this.setState({composeMail: true})\r\n                    }}>\r\n              <i className=\"zmdi zmdi-edit zmdi-hc-fw\"/>\r\n              <IntlMessages id=\"mail.compose\"/> </Button>\r\n          </div>\r\n\r\n          <ul className=\"module-nav\">\r\n\r\n            {this.getNavFolders()}\r\n\r\n            <li className=\"module-nav-label\">\r\n              <IntlMessages id=\"mail.filters\"/>\r\n            </li>\r\n\r\n            {this.getNavFilters()}\r\n\r\n            <li className=\"module-nav-label\">\r\n              <IntlMessages id=\"mail.labels\"/>\r\n            </li>\r\n\r\n            {this.getNavLabels()}\r\n\r\n          </ul>\r\n        </CustomScrollbars>\r\n      </div>\r\n    </div>\r\n  };\r\n\r\n  onDeleteMail = () => {\r\n    const mails = this.state.allMail.map(mail =>\r\n      mail.selected && (mail.folder === this.state.selectedFolder) ?\r\n        {...mail, folder: 4, selected: false,} : mail\r\n    );\r\n    this.setState({\r\n      alertMessage: 'Mail Deleted Successfully',\r\n      showMessage: true,\r\n      selectedMails: 0,\r\n      allMail: mails,\r\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\r\n    });\r\n  };\r\n  getNavFolders = () => {\r\n    return folders.map((folder, index) =>\r\n      <li key={index} onClick={() => {\r\n        const filterMails = this.state.allMail.filter(mail => mail.folder === folder.id);\r\n        this.setState({\r\n          selectedFolder: folder.id,\r\n          noContentFoundMessage: 'No mail found in selected folder',\r\n          currentMail: null,\r\n          loader: true,\r\n          folderMails: filterMails\r\n        });\r\n        setTimeout(() => {\r\n          this.setState({loader: false});\r\n        }, 1500);\r\n      }\r\n      }>\r\n        <span className={`jr-link ${this.state.selectedFolder === folder.id ? 'active' : ''}`}>\r\n          <i className={`zmdi zmdi-${folder.icon}`}/>\r\n          <span>{folder.title}</span>\r\n        </span>\r\n      </li>\r\n    )\r\n  };\r\n  onFolderMenuItemSelect = (folderId) => {\r\n    this.handleRequestClose();\r\n    const mails = this.state.allMail.map(mail =>\r\n      mail.selected && (mail.folder === this.state.selectedFolder) ?\r\n        {...mail, folder: folderId, selected: false,} : mail\r\n    );\r\n    this.setState({\r\n      selectedMails: 0,\r\n      allMail: mails,\r\n      noContentFoundMessage: 'No mail found in selected folder',\r\n      alertMessage: 'Mail has been moved successfully',\r\n      showMessage: true,\r\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\r\n    });\r\n  };\r\n  onLabelMenuItemSelect = (label) => {\r\n    this.handleRequestClose();\r\n    const mails = this.state.allMail.map(mail => {\r\n        if (mail.selected && (mail.folder === this.state.selectedFolder)) {\r\n          if (mail.labels.includes(label.id)) {\r\n            return {...mail, labels: this.removeLabel(mail, label.id)};\r\n          } else {\r\n            return {...mail, labels: this.addLabel(mail, label.id)};\r\n          }\r\n        } else {\r\n          return mail;\r\n        }\r\n      }\r\n    );\r\n    this.setState({\r\n      noContentFoundMessage: 'No mail found in selected label',\r\n      alertMessage: 'Label Updated Successfully',\r\n      showMessage: true,\r\n      allMail: mails,\r\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\r\n    });\r\n  };\r\n  handleRequestClose = () => {\r\n    this.setState({\r\n      composeMail: false,\r\n      showMessage: false,\r\n      folderMenuState: false,\r\n      labelMenuState: false,\r\n      optionMenuState: false\r\n    });\r\n  };\r\n  getNavFilters = () => {\r\n    return filters.map((filter, index) =>\r\n      <li key={index} onClick={() => {\r\n        const filterMails = this.state.allMail.filter(mail => {\r\n          if (filter.id === 0 && mail.starred) {\r\n            return mail\r\n          } else if (filter.id === 1 && mail.important) {\r\n            return mail\r\n          }\r\n          return null;\r\n        });\r\n        this.setState({\r\n          noContentFoundMessage: 'No mail found in selected filter',\r\n          loader: true,\r\n          folderMails: filterMails\r\n        });\r\n        setTimeout(() => {\r\n          this.setState({loader: false});\r\n        }, 1500);\r\n      }\r\n      }>\r\n        <span className=\"jr-link\">\r\n          <i className={`zmdi zmdi-${filter.icon}`}/>\r\n          <span>{filter.title}</span>\r\n        </span>\r\n      </li>\r\n    )\r\n  };\r\n  onFolderSelect = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      folderMenuState: !this.state.folderMenuState\r\n    })\r\n  };\r\n  onLabelSelect = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      labelMenuState: !this.state.labelMenuState\r\n    })\r\n  };\r\n  onOptionMenuSelect = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      optionMenuState: !this.state.optionMenuState\r\n    })\r\n  };\r\n  onOptionMenuItemSelect = (option) => {\r\n    switch (option.title) {\r\n      case 'All':\r\n        this.handleRequestClose();\r\n        this.getAllMail();\r\n        break;\r\n      case 'None':\r\n        this.handleRequestClose();\r\n        this.getUnselectedAllMail();\r\n        break;\r\n      case 'Read':\r\n        this.handleRequestClose();\r\n        this.getReadMail();\r\n        break;\r\n      case 'Unread':\r\n        this.handleRequestClose();\r\n        this.getUnreadMail();\r\n        break;\r\n      case 'Starred':\r\n        this.handleRequestClose();\r\n        this.getStarredMail();\r\n        break;\r\n      case 'Unstarred':\r\n        this.handleRequestClose();\r\n        this.getUnStarredMail();\r\n        break;\r\n      case 'Important':\r\n        this.handleRequestClose();\r\n        this.getImportantMail();\r\n        break;\r\n      case 'Unimportant':\r\n        this.handleRequestClose();\r\n        this.getUnimportantMail();\r\n        break;\r\n      default:  this.handleRequestClose();\r\n        this.getAllMail();\r\n    }\r\n  };\r\n  getAllMail = () => {\r\n    let mails = this.state.allMail.map((mail) => mail.folder === this.state.selectedFolder ? {\r\n      ...mail,\r\n      selected: true\r\n    } : mail);\r\n    this.setState({\r\n      selectedMails: mails.length,\r\n      allMail: mails,\r\n      optionName: 'All',\r\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\r\n    });\r\n  };\r\n  getUnselectedAllMail = () => {\r\n    let mails = this.state.allMail.map((mail) => mail.folder === this.state.selectedFolder ? {\r\n      ...mail,\r\n      selected: false\r\n    } : mail);\r\n    this.setState({\r\n      selectedMails: 0,\r\n      allMail: mails,\r\n      optionName: 'None',\r\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\r\n    });\r\n  };\r\n  getReadMail = () => {\r\n    let selectedMail = 0;\r\n    let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\r\n    mails = mails.map((mail) => {\r\n      if (mail.read) {\r\n        selectedMail++;\r\n        return {...mail, selected: true};\r\n      }\r\n      return {...mail, selected: false}\r\n    });\r\n    this.setState({\r\n      selectedMails: selectedMail,\r\n      allMail: mails,\r\n      optionName: 'Read',\r\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\r\n    });\r\n    return mails;\r\n  };\r\n  getUnreadMail = () => {\r\n    let selectedMail = 0;\r\n    let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\r\n    mails = mails.map((mail) => {\r\n      if (!mail.read) {\r\n        selectedMail++;\r\n        return {...mail, selected: true};\r\n      }\r\n      return {...mail, selected: false}\r\n    });\r\n    this.setState({\r\n      selectedMails: selectedMail,\r\n      allMail: mails,\r\n      optionName: 'Unread',\r\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\r\n    });\r\n    return mails;\r\n  };\r\n  getStarredMail = () => {\r\n    let selectedMail = 0;\r\n    let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\r\n    mails = mails.map((mail) => {\r\n      if (mail.starred) {\r\n        selectedMail++;\r\n        return {...mail, selected: true};\r\n      }\r\n      return {...mail, selected: false}\r\n    });\r\n    this.setState({\r\n      selectedMails: selectedMail,\r\n      allMail: mails,\r\n      optionName: 'Starred',\r\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\r\n    });\r\n    return mails;\r\n  };\r\n  getUnStarredMail = () => {\r\n    let selectedMail = 0;\r\n    let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\r\n    mails = mails.map((mail) => {\r\n      if (!mail.starred) {\r\n        selectedMail++;\r\n        return {...mail, selected: true};\r\n      }\r\n      return {...mail, selected: false}\r\n    });\r\n    this.setState({\r\n      selectedMails: selectedMail,\r\n      allMail: mails,\r\n      optionName: 'UnStarred',\r\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\r\n    });\r\n    return mails;\r\n  };\r\n  getImportantMail = () => {\r\n    let selectedMail = 0;\r\n    let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\r\n    mails = mails.map((mail) => {\r\n      if (mail.important) {\r\n        selectedMail++;\r\n        return {...mail, selected: true};\r\n      }\r\n      return {...mail, selected: false}\r\n    });\r\n    this.setState({\r\n      selectedMails: selectedMail,\r\n      allMail: mails,\r\n      optionName: 'Important',\r\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\r\n    });\r\n    return mails;\r\n  };\r\n  getUnimportantMail = () => {\r\n    let selectedMail = 0;\r\n    let mails = this.state.allMail.filter(mail => mail.folder === this.state.selectedFolder);\r\n    mails = mails.map((mail) => {\r\n      if (!mail.important) {\r\n        selectedMail++;\r\n        return {...mail, selected: true};\r\n      }\r\n      return {...mail, selected: false}\r\n    });\r\n    this.setState({\r\n      selectedMails: selectedMail,\r\n      optionName: 'Unimportant',\r\n      allMail: mails,\r\n      noContentFoundMessage: 'No Mail found in selected Label',\r\n      folderMails: mails.filter(mail => mail.folder === this.state.selectedFolder)\r\n    });\r\n    return mails;\r\n  };\r\n  getNavLabels = () => {\r\n    return labels.map((label, index) =>\r\n      <li key={index} onClick={() => {\r\n        const filterMails = this.state.allMail.filter(mail => mail.labels.includes(label.id));\r\n        this.setState({\r\n          loader: true,\r\n          noContentFoundMessage: 'No mail found in selected label',\r\n          folderMails: filterMails\r\n        });\r\n        setTimeout(() => {\r\n          this.setState({loader: false});\r\n        }, 1500);\r\n      }\r\n      }>\r\n        <span className=\"jr-link\">\r\n          <i className={`zmdi zmdi-circle text-${label.color}`}/>\r\n          <span>{label.title}</span>\r\n        </span>\r\n      </li>\r\n    )\r\n  };\r\n  searchMail = (searchText) => {\r\n    if (searchText === '') {\r\n      this.setState({folderMails: this.state.allMail.filter((mail) => !mail.deleted)});\r\n    } else {\r\n      const searchMails = this.state.allMail.filter((mail) =>\r\n        !mail.deleted && mail.subject.toLowerCase().indexOf(searchText.toLowerCase()) > -1);\r\n      this.setState({\r\n        folderMails: searchMails\r\n      });\r\n    }\r\n  };\r\n  displayMail = (currentMail, folderMails, noContentFoundMessage) => {\r\n    return (<div className=\"module-box-column\">\r\n      {currentMail === null ?\r\n        folderMails.length === 0 ?\r\n          <div className=\"d-flex align-items-center justify-content-center\"\r\n               style={{height: this.props.width >= 1200 ? 'calc(100vh - 265px)' : 'calc(100vh - 245px)'}}>\r\n            {noContentFoundMessage}\r\n          </div>\r\n          :\r\n          <MailList mails={folderMails} onStartSelect={this.onStartSelect.bind(this)}\r\n                    onMailSelect={this.onMailSelect.bind(this)}\r\n                    width={this.props.width}\r\n                    onMailChecked={this.onMailChecked.bind(this)}/>\r\n        :\r\n        <MailDetail mail={currentMail} onStartSelect={this.onStartSelect.bind(this)}\r\n                    width={this.props.width}\r\n                    onImportantSelect={this.onImportantSelect.bind(this)}/>}\r\n    </div>)\r\n  };\r\n    getMailActions = () => {\r\n    return <div>\r\n      <IconButton onClick={this.onFolderSelect.bind(this)} className=\"icon-btn\">\r\n        <i className=\"zmdi zmdi-folder\"/>\r\n      </IconButton>\r\n\r\n      <IconButton onClick={this.onDeleteMail.bind(this)} className=\"icon-btn\">\r\n        <i className=\"zmdi zmdi-delete\"/>\r\n      </IconButton>\r\n\r\n      <IconButton\r\n        onClick={this.onLabelSelect.bind(this)} className=\"icon-btn\">\r\n        <i className=\"zmdi zmdi-label-alt\"/>\r\n      </IconButton>\r\n    </div>\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      searchMail: '',\r\n      noContentFoundMessage: 'No mail found in selected folder',\r\n      alertMessage: '',\r\n      showMessage: false,\r\n      drawerState: false,\r\n      optionName: 'None',\r\n      anchorEl: null,\r\n      allMail: mails,\r\n      loader: true,\r\n      currentMail: null,\r\n      user: {\r\n        name: 'Robert Johnson',\r\n        email: 'robert@example.com',\r\n        avatar:  'https://via.placeholder.com/150x150'\r\n      },\r\n      selectedMails: 0,\r\n      selectedFolder: 0,\r\n      composeMail: false,\r\n      labelMenuState: false,\r\n      folderMenuState: false,\r\n      optionMenuState: false,\r\n      folderMails: mails.filter(mail => mail.folder === 0)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.setState({loader: false});\r\n    }, 1500);\r\n  }\r\n\r\n  onMailChecked(data) {\r\n    data.selected = !data.selected;\r\n    let selectedMail = 0;\r\n    const mails = this.state.folderMails.map(mail => {\r\n        if (mail.selected) {\r\n          selectedMail++;\r\n        }\r\n        if (mail.id === data.id) {\r\n          if (mail.selected) {\r\n            selectedMail++;\r\n          }\r\n          return data;\r\n        } else {\r\n          return mail;\r\n        }\r\n      }\r\n    );\r\n    this.setState({\r\n      selectedMails: selectedMail,\r\n      folderMails: mails\r\n    });\r\n  }\r\n\r\n  onAllMailSelect() {\r\n    const selectAll = this.state.selectedMails <= this.state.folderMails.length;\r\n    if (selectAll) {\r\n      this.getAllMail();\r\n    } else {\r\n      this.getUnselectedAllMail();\r\n    }\r\n  }\r\n\r\n  removeLabel(mail, label) {\r\n    mail.labels.splice(mail.labels.indexOf(label), 1);\r\n    if (this.state.currentMail !== null && mail.id === this.state.currentMail.id) {\r\n      this.setState({\r\n        currentMail: {...mail, labels: mail.labels}\r\n      })\r\n    }\r\n    return mail.labels;\r\n  }\r\n\r\n  onStartSelect(data) {\r\n    data.starred = !data.starred;\r\n    this.setState({\r\n      alertMessage: data.starred ? 'Mail Mark as Star' : 'Mail Remove as Star',\r\n      showMessage: true,\r\n      folderMails: this.state.folderMails.map(mail =>\r\n        mail.id === data.id ?\r\n          data : mail\r\n      )\r\n    });\r\n  }\r\n\r\n  onImportantSelect(data) {\r\n    data.important = !data.important;\r\n    this.setState({\r\n      alertMessage: data.important ? 'Mail Mark as Important' : 'Mail Remove as Important',\r\n      showMessage: true,\r\n      folderMails: this.state.folderMails.map(mail =>\r\n        mail.id === data.id ?\r\n          data : mail\r\n      )\r\n    });\r\n  }\r\n\r\n  onMailSend(data) {\r\n    this.setState(\r\n      {\r\n        alertMessage: 'Mail Sent Successfully',\r\n        showMessage: true,\r\n        folderMails: this.state.allMail.concat(data),\r\n        allMail: this.state.allMail.concat(data)\r\n      }\r\n    );\r\n  }\r\n\r\n  onMailSelect(mail) {\r\n    this.setState({\r\n      loader: true,\r\n      currentMail: mail,\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({loader: false});\r\n    }, 1500);\r\n  }\r\n\r\n  addLabel(mail, label) {\r\n    if (this.state.currentMail !== null && mail.id === this.state.currentMail.id) {\r\n      this.setState({\r\n        currentMail: {...mail, labels: mail.labels.concat(label)}\r\n      })\r\n    }\r\n    return mail.labels.concat(label)\r\n  }\r\n\r\n  updateSearch(evt) {\r\n    this.setState({\r\n      searchMail: evt.target.value,\r\n    });\r\n    this.searchMail(evt.target.value)\r\n  }\r\n\r\n  onToggleDrawer() {\r\n    this.setState({\r\n      drawerState: !this.state.drawerState\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {selectedMails, loader, currentMail, folderMails, composeMail, user, alertMessage, showMessage, noContentFoundMessage} = this.state;\r\n    return (\r\n\r\n      <div className=\"app-wrapper\">\r\n        <div className=\"animated slideInUpTiny animation-duration-3\">\r\n          <div className=\"app-module\">\r\n\r\n            <div className=\"d-block d-xl-none\">\r\n              <Drawer\r\n                open={this.state.drawerState}\r\n                onClose={this.onToggleDrawer.bind(this)}>\r\n                {this.MailSideBar()}\r\n              </Drawer>\r\n            </div>\r\n            <div className=\"app-module-sidenav d-none d-xl-flex\">\r\n              {this.MailSideBar()}\r\n            </div>\r\n\r\n            <div className=\"module-box\">\r\n\r\n              <div className=\"module-box-header\">\r\n\r\n                <IconButton className=\"drawer-btn d-block d-xl-none\" aria-label=\"Menu\"\r\n                            onClick={this.onToggleDrawer.bind(this)}>\r\n                  <i className=\"zmdi zmdi-menu\"/>\r\n                </IconButton>\r\n                <AppModuleHeader placeholder=\"Search mails\" user={this.state.user}\r\n                                 onChange={this.updateSearch.bind(this)}\r\n                                 value={this.state.searchMail}/>\r\n\r\n              </div>\r\n\r\n              <div className=\"module-box-content\">\r\n                <div className=\"module-box-topbar\">\r\n                  {this.state.currentMail === null ?\r\n                    <div className=\"d-flex\">\r\n                      <Checkbox color=\"primary\"\r\n                                indeterminate={selectedMails > 0 && selectedMails < folderMails.length}\r\n                                checked={selectedMails > 0}\r\n                                onChange={this.onAllMailSelect.bind(this)}\r\n                                value=\"SelectMail\"/>\r\n                      <div className=\"d-flex align-items-center\" onClick={this.onOptionMenuSelect.bind(this)}>\r\n                        <span className=\"px-2\"> {this.state.optionName}</span>\r\n                        <IconButton className=\"icon-btn-sm\">\r\n                          <i className=\"zmdi zmdi-caret-down\"/>\r\n                        </IconButton>\r\n                      </div>\r\n                    </div>\r\n                    :\r\n                    <IconButton className=\"icon-btn\"\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          currentMail: null\r\n                        })\r\n                      }}>\r\n                      <i className=\"zmdi zmdi-arrow-back\"/>\r\n                    </IconButton>\r\n                  }\r\n\r\n                  {(selectedMails > 0) && this.getMailActions()}\r\n\r\n\r\n                  <Menu id=\"option-menu\"\r\n                        anchorEl={this.state.anchorEl}\r\n                        open={this.state.optionMenuState}\r\n                        onClose={this.handleRequestClose}\r\n                        MenuListProps={{\r\n                          style: {\r\n                            width: 150,\r\n                          },\r\n                        }}>\r\n                    {options.map(option =>\r\n                      <MenuItem key={option.title}\r\n                                onClick={this.onOptionMenuItemSelect.bind(this, option)}>\r\n                        {option.title}\r\n                      </MenuItem>,\r\n                    )}\r\n                  </Menu>\r\n\r\n                  <Menu id=\"folder-menu\"\r\n                        anchorEl={this.state.anchorEl}\r\n                        open={this.state.folderMenuState}\r\n                        onClose={this.handleRequestClose}\r\n                        MenuListProps={{\r\n                          style: {\r\n                            width: 150,\r\n                          },\r\n                        }}>\r\n                    {folders.map(folder =>\r\n                      <MenuItem key={folder.id}\r\n                                onClick={this.onFolderMenuItemSelect.bind(this, folder.id)}>\r\n                        {folder.title}\r\n                      </MenuItem>,\r\n                    )}\r\n                  </Menu>\r\n                  <Menu id=\"label-menu\"\r\n                        anchorEl={this.state.anchorEl}\r\n                        open={this.state.labelMenuState}\r\n                        onClose={this.handleRequestClose}\r\n                        MenuListProps={{\r\n                          style: {\r\n                            width: 150,\r\n                          },\r\n                        }}>\r\n                    {labels.map(label =>\r\n                      <MenuItem key={label.id}\r\n                                onClick={this.onLabelMenuItemSelect.bind(this, label)}>\r\n                        {label.title}\r\n                      </MenuItem>,\r\n                    )}\r\n                  </Menu>\r\n                </div>\r\n\r\n                {loader ?\r\n                  <div className=\"loader-view\"\r\n                       style={{height: this.props.width >= 1200 ? 'calc(100vh - 265px)' : 'calc(100vh - 245px)'}}>\r\n                    <CircularProgress/>\r\n                  </div> : this.displayMail(currentMail, folderMails, noContentFoundMessage)}\r\n\r\n                <ComposeMail open={composeMail} user={user}\r\n                             onClose={this.handleRequestClose.bind(this)}\r\n                             onMailSend={this.onMailSend.bind(this)}/>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Snackbar\r\n            anchorOrigin={{vertical: 'top', horizontal: 'center'}}\r\n            open={showMessage}\r\n            autoHideDuration={3000}\r\n            onClose={this.handleRequestClose}\r\n            ContentProps={{\r\n              'aria-describedby': 'message-id',\r\n            }}\r\n            message={<span id=\"message-id\">{alertMessage}</span>}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({settings}) => {\r\n  const {width} = settings;\r\n  return {width}\r\n};\r\nexport default connect(mapStateToProps)(Mail);"]},"metadata":{},"sourceType":"module"}