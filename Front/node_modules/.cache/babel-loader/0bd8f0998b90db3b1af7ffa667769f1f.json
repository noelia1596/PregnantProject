{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\src\\\\app\\\\routes\\\\dashboard\\\\routes\\\\CRM\\\\BubbleMap\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { ComposableMap, Geographies, Geography, Marker, Markers, ZoomableGroup } from \"react-simple-maps\";\nimport { scaleLinear } from \"d3-scale\";\nimport cities from \"./static/world-most-populous-cities.json\";\nimport geography from \"./static/world-50m.json\";\nvar wrapperStyles = {\n  width: \"100%\",\n  maxWidth: 980,\n  margin: \"0 auto\"\n};\nvar cityScale = scaleLinear().domain([0, 37843000]).range([1, 25]);\n\nvar BubbleMap =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BubbleMap, _Component);\n\n  function BubbleMap() {\n    _classCallCheck(this, BubbleMap);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BubbleMap).apply(this, arguments));\n  }\n\n  _createClass(BubbleMap, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: wrapperStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(ComposableMap, {\n        projectionConfig: {\n          scale: 180\n        },\n        width: 980,\n        height: 450,\n        style: {\n          width: \"100%\",\n          height: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(ZoomableGroup, {\n        center: [0, 20],\n        disablePanning: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Geographies, {\n        geography: geography,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, function (geographies, projection) {\n        return geographies.map(function (geography, i) {\n          return geography.id !== \"ATA\" && React.createElement(Geography, {\n            key: i,\n            geography: geography,\n            projection: projection,\n            style: {\n              default: {\n                fill: \"#ECEFF1\",\n                stroke: \"#607D8B\",\n                strokeWidth: 0.75,\n                outline: \"none\"\n              },\n              hover: {\n                fill: \"#ECEFF1\",\n                stroke: \"#607D8B\",\n                strokeWidth: 0.75,\n                outline: \"none\"\n              },\n              pressed: {\n                fill: \"#ECEFF1\",\n                stroke: \"#607D8B\",\n                strokeWidth: 0.75,\n                outline: \"none\"\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          });\n        });\n      }), React.createElement(Markers, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, cities.map(function (city, i) {\n        return React.createElement(Marker, {\n          key: i,\n          marker: city,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(\"circle\", {\n          cx: 0,\n          cy: 0,\n          r: cityScale(city.population),\n          fill: \"rgba(255,87,34,0.8)\",\n          stroke: \"#607D8B\",\n          strokeWidth: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }));\n      })))));\n    }\n  }]);\n\n  return BubbleMap;\n}(Component);\n\nexport default BubbleMap;","map":{"version":3,"sources":["C:\\Users\\Noelia\\Desktop\\compra\\source\\src\\app\\routes\\dashboard\\routes\\CRM\\BubbleMap\\index.js"],"names":["React","Component","ComposableMap","Geographies","Geography","Marker","Markers","ZoomableGroup","scaleLinear","cities","geography","wrapperStyles","width","maxWidth","margin","cityScale","domain","range","BubbleMap","scale","height","geographies","projection","map","i","id","default","fill","stroke","strokeWidth","outline","hover","pressed","city","population"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {ComposableMap, Geographies, Geography, Marker, Markers, ZoomableGroup} from \"react-simple-maps\";\r\nimport {scaleLinear} from \"d3-scale\";\r\nimport cities from \"./static/world-most-populous-cities.json\";\r\nimport geography from \"./static/world-50m.json\";\r\n\r\nconst wrapperStyles = {\r\n  width: \"100%\",\r\n  maxWidth: 980,\r\n  margin: \"0 auto\",\r\n}\r\n\r\nconst cityScale = scaleLinear()\r\n  .domain([0, 37843000])\r\n  .range([1, 25])\r\n\r\nclass BubbleMap extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div style={wrapperStyles}>\r\n        <ComposableMap\r\n          projectionConfig={{scale: 180}}\r\n          width={980}\r\n          height={450}\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"auto\",\r\n          }}\r\n        >\r\n          <ZoomableGroup center={[0, 20]} disablePanning>\r\n            <Geographies geography={geography}>\r\n              {(geographies, projection) =>\r\n                geographies.map((geography, i) =>\r\n                  geography.id !== \"ATA\" && (\r\n                    <Geography\r\n                      key={i}\r\n                      geography={geography}\r\n                      projection={projection}\r\n                      style={{\r\n                        default: {\r\n                          fill: \"#ECEFF1\",\r\n                          stroke: \"#607D8B\",\r\n                          strokeWidth: 0.75,\r\n                          outline: \"none\",\r\n                        },\r\n                        hover: {\r\n                          fill: \"#ECEFF1\",\r\n                          stroke: \"#607D8B\",\r\n                          strokeWidth: 0.75,\r\n                          outline: \"none\",\r\n                        },\r\n                        pressed: {\r\n                          fill: \"#ECEFF1\",\r\n                          stroke: \"#607D8B\",\r\n                          strokeWidth: 0.75,\r\n                          outline: \"none\",\r\n                        },\r\n                      }}\r\n                    />\r\n                  ))}\r\n            </Geographies>\r\n            <Markers>\r\n              {\r\n                cities.map((city, i) => (\r\n                  <Marker key={i} marker={city}>\r\n                    <circle\r\n                      cx={0}\r\n                      cy={0}\r\n                      r={cityScale(city.population)}\r\n                      fill=\"rgba(255,87,34,0.8)\"\r\n                      stroke=\"#607D8B\"\r\n                      strokeWidth=\"2\"\r\n                    />\r\n                  </Marker>\r\n                ))\r\n              }\r\n            </Markers>\r\n          </ZoomableGroup>\r\n        </ComposableMap>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BubbleMap\r\n"]},"metadata":{},"sourceType":"module"}