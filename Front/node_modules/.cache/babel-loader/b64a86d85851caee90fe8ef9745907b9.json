{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\jumbo-react-3.0.1\\\\source\\\\src\\\\app\\\\routes\\\\charts\\\\routes\\\\area\\\\Components\\\\PercentAreaChart.js\";\nimport React from 'react';\nimport { Area, AreaChart, CartesianGrid, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nvar data = [{\n  month: '2015.01',\n  a: 4000,\n  b: 2400,\n  c: 2400\n}, {\n  month: '2015.02',\n  a: 3000,\n  b: 1398,\n  c: 2210\n}, {\n  month: '2015.03',\n  a: 2000,\n  b: 9800,\n  c: 2290\n}, {\n  month: '2015.04',\n  a: 2780,\n  b: 3908,\n  c: 2000\n}, {\n  month: '2015.05',\n  a: 1890,\n  b: 4800,\n  c: 2181\n}, {\n  month: '2015.06',\n  a: 2390,\n  b: 3800,\n  c: 2500\n}, {\n  month: '2015.07',\n  a: 3490,\n  b: 4300,\n  c: 2100\n}];\n\nvar getPercent = function getPercent(value, total) {\n  var ratio = total > 0 ? value / total : 0;\n  return toPercent(ratio, 2);\n};\n\nvar toPercent = function toPercent(decimal) {\n  var fixed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return \"\".concat((decimal * 100).toFixed(fixed), \"%\");\n};\n\nvar renderTooltipContent = function renderTooltipContent(o) {\n  var payload = o.payload,\n      label = o.label;\n  var total = payload.reduce(function (result, entry) {\n    return result + entry.value;\n  }, 0);\n  return React.createElement(\"div\", {\n    className: \"customized-tooltip-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"total\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"\".concat(label, \" (Total: \").concat(total, \")\")), React.createElement(\"ul\", {\n    className: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, payload.map(function (entry, index) {\n    return React.createElement(\"li\", {\n      key: \"item-\".concat(index),\n      style: {\n        color: entry.color\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"\".concat(entry.name, \": \").concat(entry.value, \"(\").concat(getPercent(entry.value, total), \")\"));\n  })));\n};\n\nvar PercentAreaChart = function PercentAreaChart() {\n  return React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 200,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(AreaChart, {\n    data: data,\n    stackOffset: \"expand\",\n    margin: {\n      top: 10,\n      right: 0,\n      left: -25,\n      bottom: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(XAxis, {\n    dataKey: \"month\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    tickFormatter: toPercent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    content: renderTooltipContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Area, {\n    type: \"monotone\",\n    dataKey: \"a\",\n    stackId: \"1\",\n    stroke: \"#3367d6\",\n    fill: \"#3367d6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(Area, {\n    type: \"monotone\",\n    dataKey: \"b\",\n    stackId: \"1\",\n    stroke: \"#59AA2B\",\n    fill: \"#59AA2B\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(Area, {\n    type: \"monotone\",\n    dataKey: \"c\",\n    stackId: \"1\",\n    stroke: \"#ffc658\",\n    fill: \"#ffc658\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })));\n};\n\nexport default PercentAreaChart;","map":{"version":3,"sources":["C:\\Users\\Noelia\\Desktop\\jumbo-react-3.0.1\\source\\src\\app\\routes\\charts\\routes\\area\\Components\\PercentAreaChart.js"],"names":["React","Area","AreaChart","CartesianGrid","ResponsiveContainer","Tooltip","XAxis","YAxis","data","month","a","b","c","getPercent","value","total","ratio","toPercent","decimal","fixed","toFixed","renderTooltipContent","o","payload","label","reduce","result","entry","map","index","color","name","PercentAreaChart","top","right","left","bottom"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,SAAd,EAAyBC,aAAzB,EAAwCC,mBAAxC,EAA6DC,OAA7D,EAAsEC,KAAtE,EAA6EC,KAA7E,QAAyF,UAAzF;AAEA,IAAMC,IAAI,GAAG,CACX;AAACC,EAAAA,KAAK,EAAE,SAAR;AAAmBC,EAAAA,CAAC,EAAE,IAAtB;AAA4BC,EAAAA,CAAC,EAAE,IAA/B;AAAqCC,EAAAA,CAAC,EAAE;AAAxC,CADW,EAEX;AAACH,EAAAA,KAAK,EAAE,SAAR;AAAmBC,EAAAA,CAAC,EAAE,IAAtB;AAA4BC,EAAAA,CAAC,EAAE,IAA/B;AAAqCC,EAAAA,CAAC,EAAE;AAAxC,CAFW,EAGX;AAACH,EAAAA,KAAK,EAAE,SAAR;AAAmBC,EAAAA,CAAC,EAAE,IAAtB;AAA4BC,EAAAA,CAAC,EAAE,IAA/B;AAAqCC,EAAAA,CAAC,EAAE;AAAxC,CAHW,EAIX;AAACH,EAAAA,KAAK,EAAE,SAAR;AAAmBC,EAAAA,CAAC,EAAE,IAAtB;AAA4BC,EAAAA,CAAC,EAAE,IAA/B;AAAqCC,EAAAA,CAAC,EAAE;AAAxC,CAJW,EAKX;AAACH,EAAAA,KAAK,EAAE,SAAR;AAAmBC,EAAAA,CAAC,EAAE,IAAtB;AAA4BC,EAAAA,CAAC,EAAE,IAA/B;AAAqCC,EAAAA,CAAC,EAAE;AAAxC,CALW,EAMX;AAACH,EAAAA,KAAK,EAAE,SAAR;AAAmBC,EAAAA,CAAC,EAAE,IAAtB;AAA4BC,EAAAA,CAAC,EAAE,IAA/B;AAAqCC,EAAAA,CAAC,EAAE;AAAxC,CANW,EAOX;AAACH,EAAAA,KAAK,EAAE,SAAR;AAAmBC,EAAAA,CAAC,EAAE,IAAtB;AAA4BC,EAAAA,CAAC,EAAE,IAA/B;AAAqCC,EAAAA,CAAC,EAAE;AAAxC,CAPW,CAAb;;AAUA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAQC,KAAR,EAAkB;AACnC,MAAMC,KAAK,GAAGD,KAAK,GAAG,CAAR,GAAYD,KAAK,GAAGC,KAApB,GAA4B,CAA1C;AAEA,SAAOE,SAAS,CAACD,KAAD,EAAQ,CAAR,CAAhB;AACD,CAJD;;AAMA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,OAAD,EAAwB;AAAA,MAAdC,KAAc,uEAAN,CAAM;AACxC,mBAAU,CAACD,OAAO,GAAG,GAAX,EAAgBE,OAAhB,CAAwBD,KAAxB,CAAV;AACD,CAFD;;AAGA,IAAME,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,CAAD,EAAO;AAAA,MAC3BC,OAD2B,GACTD,CADS,CAC3BC,OAD2B;AAAA,MAClBC,KADkB,GACTF,CADS,CAClBE,KADkB;AAElC,MAAMT,KAAK,GAAGQ,OAAO,CAACE,MAAR,CAAe,UAACC,MAAD,EAASC,KAAT;AAAA,WAAoBD,MAAM,GAAGC,KAAK,CAACb,KAAnC;AAAA,GAAf,EAA0D,CAA1D,CAAd;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAyBU,KAAzB,sBAA0CT,KAA1C,OADF,EAEE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIQ,OAAO,CAACK,GAAR,CAAY,UAACD,KAAD,EAAQE,KAAR;AAAA,WACV;AAAI,MAAA,GAAG,iBAAUA,KAAV,CAAP;AAA0B,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAEH,KAAK,CAACG;AAAd,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACMH,KAAK,CAACI,IADZ,eACqBJ,KAAK,CAACb,KAD3B,cACoCD,UAAU,CAACc,KAAK,CAACb,KAAP,EAAcC,KAAd,CAD9C,OADU;AAAA,GAAZ,CAFJ,CAFF,CADF;AAcD,CAlBD;;AAmBA,IAAMiB,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SACvB,oBAAC,mBAAD;AAAqB,IAAA,KAAK,EAAC,MAA3B;AAAkC,IAAA,MAAM,EAAE,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAExB,IAAjB;AAAuB,IAAA,WAAW,EAAC,QAAnC;AACW,IAAA,MAAM,EAAE;AAACyB,MAAAA,GAAG,EAAE,EAAN;AAAUC,MAAAA,KAAK,EAAE,CAAjB;AAAoBC,MAAAA,IAAI,EAAE,CAAC,EAA3B;AAA+BC,MAAAA,MAAM,EAAE;AAAvC,KADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,aAAa,EAAEnB,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,aAAD;AAAe,IAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEI,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAC,GAA9B;AAAkC,IAAA,OAAO,EAAC,GAA1C;AAA8C,IAAA,MAAM,EAAC,SAArD;AAA+D,IAAA,IAAI,EAAC,SAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAC,GAA9B;AAAkC,IAAA,OAAO,EAAC,GAA1C;AAA8C,IAAA,MAAM,EAAC,SAArD;AAA+D,IAAA,IAAI,EAAC,SAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAC,GAA9B;AAAkC,IAAA,OAAO,EAAC,GAA1C;AAA8C,IAAA,MAAM,EAAC,SAArD;AAA+D,IAAA,IAAI,EAAC,SAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,CADuB;AAAA,CAAzB;;AAeA,eAAeW,gBAAf","sourcesContent":["import React from 'react';\r\nimport {Area, AreaChart, CartesianGrid, ResponsiveContainer, Tooltip, XAxis, YAxis} from 'recharts';\r\n\r\nconst data = [\r\n  {month: '2015.01', a: 4000, b: 2400, c: 2400},\r\n  {month: '2015.02', a: 3000, b: 1398, c: 2210},\r\n  {month: '2015.03', a: 2000, b: 9800, c: 2290},\r\n  {month: '2015.04', a: 2780, b: 3908, c: 2000},\r\n  {month: '2015.05', a: 1890, b: 4800, c: 2181},\r\n  {month: '2015.06', a: 2390, b: 3800, c: 2500},\r\n  {month: '2015.07', a: 3490, b: 4300, c: 2100},\r\n];\r\n\r\nconst getPercent = (value, total) => {\r\n  const ratio = total > 0 ? value / total : 0;\r\n\r\n  return toPercent(ratio, 2);\r\n};\r\n\r\nconst toPercent = (decimal, fixed = 0) => {\r\n  return `${(decimal * 100).toFixed(fixed)}%`;\r\n};\r\nconst renderTooltipContent = (o) => {\r\n  const {payload, label} = o;\r\n  const total = payload.reduce((result, entry) => (result + entry.value), 0);\r\n\r\n  return (\r\n    <div className=\"customized-tooltip-content\">\r\n      <p className=\"total\">{`${label} (Total: ${total})`}</p>\r\n      <ul className=\"list\">\r\n        {\r\n          payload.map((entry, index) => (\r\n            <li key={`item-${index}`} style={{color: entry.color}}>\r\n              {`${entry.name}: ${entry.value}(${getPercent(entry.value, total)})`}\r\n            </li>\r\n          ))\r\n        }\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nconst PercentAreaChart = () => (\r\n  <ResponsiveContainer width=\"100%\" height={200}>\r\n    <AreaChart data={data} stackOffset=\"expand\"\r\n               margin={{top: 10, right: 0, left: -25, bottom: 0}}>\r\n      <XAxis dataKey=\"month\"/>\r\n      <YAxis tickFormatter={toPercent}/>\r\n      <CartesianGrid strokeDasharray=\"3 3\"/>\r\n      <Tooltip content={renderTooltipContent}/>\r\n      <Area type='monotone' dataKey='a' stackId=\"1\" stroke='#3367d6' fill='#3367d6'/>\r\n      <Area type='monotone' dataKey='b' stackId=\"1\" stroke='#59AA2B' fill='#59AA2B'/>\r\n      <Area type='monotone' dataKey='c' stackId=\"1\" stroke='#ffc658' fill='#ffc658'/>\r\n    </AreaChart>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default PercentAreaChart;"]},"metadata":{},"sourceType":"module"}