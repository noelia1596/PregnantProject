{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\Plantillas\\\\source\\\\src\\\\containers\\\\SignIn.js\";\n\n/*import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {\r\n  hideMessage,\r\n  showAuthLoader,\r\n  userSignIn,\r\n} from 'actions/Auth';\r\n\r\nclass SignIn extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: 'noelia@noelia.com',\r\n      password: 'noelia'\r\n    }\r\n  }z\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.showMessage) {\r\n      setTimeout(() => {\r\n        this.props.hideMessage();\r\n      }, 100);\r\n    }\r\n    if (this.props.authUser !== null) {\r\n      this.props.history.push('/');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      email,\r\n      password\r\n    } = this.state;\r\n    const {showMessage, loader, alertMessage} = this.props;\r\n    return (\r\n      <div\r\n        className=\"app-login-container d-flex justify-content-center align-items-center animated slideInUpTiny animation-duration-3\">\r\n        <div className=\"app-login-main-content\">\r\n\r\n          <div className=\"app-logo-content d-flex align-items-center justify-content-center\">\r\n            <Link className=\"logo-lg\" to=\"/\">\r\n              <img src={require(\"assets/images/logo.png\")} alt=\"logo\" height=\"240rem\"/>\r\n            </Link>\r\n          </div>\r\n\r\n          <div className=\"app-login-content\">\r\n            <div className=\"app-login-header mb-4\">\r\n              <h1><IntlMessages id=\"appModule.email\"/></h1>\r\n            </div>\r\n\r\n            <div className=\"app-login-form\">\r\n              <form>\r\n                <fieldset>\r\n                  <TextField\r\n                    label={<IntlMessages id=\"appModule.email\"/>}\r\n                    fullWidth\r\n                    onChange={(event) => this.setState({email: event.target.value})}\r\n                    defaultValue={email}\r\n                    margin=\"normal\"\r\n                    className=\"mt-1 my-sm-3\"\r\n                  />\r\n                  <TextField\r\n                    type=\"password\"\r\n                    label={<IntlMessages id=\"appModule.password\"/>}\r\n                    fullWidth\r\n                    onChange={(event) => this.setState({password: event.target.value})}\r\n                    defaultValue={password}\r\n                    margin=\"normal\"\r\n                    className=\"mt-1 my-sm-3\"\r\n                  />\r\n\r\n                  <div className=\"mb-3 d-flex align-items-center justify-content-between\">\r\n                    <Button onClick={() => {\r\n                      this.props.showAuthLoader();\r\n                      this.props.userSignIn({email, password});\r\n                    }} variant=\"contained\" color=\"primary\">\r\n                      <IntlMessages id=\"appModule.signIn\"/>\r\n                    </Button>\r\n\r\n                    <Link to=\"/signup\">\r\n                      <IntlMessages id=\"signIn.signUp\"/>\r\n                    </Link>\r\n                  </div>\r\n                </fieldset>\r\n              </form>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        {\r\n          loader &&\r\n          <div className=\"loader-view\">\r\n            <CircularProgress/>\r\n          </div>\r\n        }\r\n        {showMessage && NotificationManager.error(alertMessage)}\r\n        <NotificationContainer/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({auth}) => {\r\n  const {loader, alertMessage, showMessage, authUser} = auth;\r\n  return {loader, alertMessage, showMessage, authUser}\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  userSignIn,\r\n  hideMessage,\r\n  showAuthLoader,\r\n})(SignIn);\r\n*/\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport IntlMessages from 'util/IntlMessages';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { hideMessage, showAuthLoader, userSignIn } from 'actions/Auth';\nimport signUp from './SignUp';\nimport request from 'request';\nimport { Redirect } from 'react-router-dom';\n\nvar SignIn =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SignIn, _React$Component);\n\n  function SignIn() {\n    var _this;\n\n    _classCallCheck(this, SignIn);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SignIn).call(this));\n    _this.state = {\n      email: 'demo@example.com',\n      password: 'demo#123'\n    };\n    return _this;\n  }\n\n  _createClass(SignIn, [{\n    key: \"signInDB\",\n    value: function signInDB(username, password) {\n      var self = this;\n      var url = \"http://localhost:3000/api-login\";\n      request.post(url, {\n        form: {\n          username: username,\n          password: password\n        }\n      }, function optionalCallback(err, httpResponse, body) {\n        if (err) {\n          return console.error('upload failed:', err);\n        } //console.log('Upload successful!  Server responded with:',httpResponse);\n\n\n        var result = JSON.parse(httpResponse.body);\n        self.setState({\n          userLogged: result.customer\n        });\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this2 = this;\n\n      if (this.props.showMessage) {\n        setTimeout(function () {\n          _this2.props.hideMessage();\n        }, 100);\n      }\n\n      if (this.props.authUser !== null) {\n        this.props.history.push('/');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.userLogged) {\n        console.log('token', this.state.userLogged);\n        return React.createElement(Redirect, {\n          to: {\n            pathname: '/app/sample-page',\n            userLogged: this.state.userLogged\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        });\n      }\n\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n      var _this$props = this.props,\n          showMessage = _this$props.showMessage,\n          loader = _this$props.loader,\n          alertMessage = _this$props.alertMessage;\n      return React.createElement(\"div\", {\n        className: \"app-login-container d-flex justify-content-center align-items-center animated slideInUpTiny animation-duration-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"app-login-main-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"app-logo-content d-flex align-items-center justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"logo-lg\",\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require(\"assets/images/logo.png\"),\n        alt: \"logo\",\n        height: \"240rem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"app-login-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"app-login-header mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"appModule.email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"app-login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: React.createElement(IntlMessages, {\n          id: \"appModule.email\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }),\n        fullWidth: true,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            email: event.target.value\n          });\n        },\n        defaultValue: email,\n        margin: \"normal\",\n        className: \"mt-1 my-sm-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        type: \"password\",\n        label: React.createElement(IntlMessages, {\n          id: \"appModule.password\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }),\n        fullWidth: true,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            password: event.target.value\n          });\n        },\n        defaultValue: password,\n        margin: \"normal\",\n        className: \"mt-1 my-sm-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"mb-3 d-flex align-items-center justify-content-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          //<signUp/>\n          //console.log('entro');\n          //this.props.showAuthLoader();\n          //this.props.userSignIn({email, password});\n          //this.props.payloa\n          _this3.signInDB(email, password);\n        },\n        variant: \"contained\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"appModule.signIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      })), React.createElement(Link, {\n        to: \"/signup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(IntlMessages, {\n        id: \"signIn.signUp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      })))))))), loader && React.createElement(\"div\", {\n        className: \"loader-view\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(CircularProgress, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      })), showMessage && NotificationManager.error(alertMessage), React.createElement(NotificationContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SignIn;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var auth = _ref.auth;\n  var loader = auth.loader,\n      alertMessage = auth.alertMessage,\n      showMessage = auth.showMessage,\n      authUser = auth.authUser;\n  return {\n    loader: loader,\n    alertMessage: alertMessage,\n    showMessage: showMessage,\n    authUser: authUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  userSignIn: userSignIn,\n  hideMessage: hideMessage,\n  showAuthLoader: showAuthLoader\n})(SignIn);","map":{"version":3,"sources":["C:\\Users\\Noelia\\Desktop\\Plantillas\\source\\src\\containers\\SignIn.js"],"names":["React","Link","connect","TextField","IconButton","Button","NotificationContainer","NotificationManager","IntlMessages","CircularProgress","hideMessage","showAuthLoader","userSignIn","signUp","request","Redirect","SignIn","state","email","password","username","self","url","post","form","optionalCallback","err","httpResponse","body","console","error","result","JSON","parse","setState","userLogged","customer","props","showMessage","setTimeout","authUser","history","push","log","pathname","loader","alertMessage","require","event","target","value","signInDB","Component","mapStateToProps","auth"],"mappings":"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","sourcesContent":["/*import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {\r\n  hideMessage,\r\n  showAuthLoader,\r\n  userSignIn,\r\n} from 'actions/Auth';\r\n\r\nclass SignIn extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: 'noelia@noelia.com',\r\n      password: 'noelia'\r\n    }\r\n  }z\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.showMessage) {\r\n      setTimeout(() => {\r\n        this.props.hideMessage();\r\n      }, 100);\r\n    }\r\n    if (this.props.authUser !== null) {\r\n      this.props.history.push('/');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      email,\r\n      password\r\n    } = this.state;\r\n    const {showMessage, loader, alertMessage} = this.props;\r\n    return (\r\n      <div\r\n        className=\"app-login-container d-flex justify-content-center align-items-center animated slideInUpTiny animation-duration-3\">\r\n        <div className=\"app-login-main-content\">\r\n\r\n          <div className=\"app-logo-content d-flex align-items-center justify-content-center\">\r\n            <Link className=\"logo-lg\" to=\"/\">\r\n              <img src={require(\"assets/images/logo.png\")} alt=\"logo\" height=\"240rem\"/>\r\n            </Link>\r\n          </div>\r\n\r\n          <div className=\"app-login-content\">\r\n            <div className=\"app-login-header mb-4\">\r\n              <h1><IntlMessages id=\"appModule.email\"/></h1>\r\n            </div>\r\n\r\n            <div className=\"app-login-form\">\r\n              <form>\r\n                <fieldset>\r\n                  <TextField\r\n                    label={<IntlMessages id=\"appModule.email\"/>}\r\n                    fullWidth\r\n                    onChange={(event) => this.setState({email: event.target.value})}\r\n                    defaultValue={email}\r\n                    margin=\"normal\"\r\n                    className=\"mt-1 my-sm-3\"\r\n                  />\r\n                  <TextField\r\n                    type=\"password\"\r\n                    label={<IntlMessages id=\"appModule.password\"/>}\r\n                    fullWidth\r\n                    onChange={(event) => this.setState({password: event.target.value})}\r\n                    defaultValue={password}\r\n                    margin=\"normal\"\r\n                    className=\"mt-1 my-sm-3\"\r\n                  />\r\n\r\n                  <div className=\"mb-3 d-flex align-items-center justify-content-between\">\r\n                    <Button onClick={() => {\r\n                      this.props.showAuthLoader();\r\n                      this.props.userSignIn({email, password});\r\n                    }} variant=\"contained\" color=\"primary\">\r\n                      <IntlMessages id=\"appModule.signIn\"/>\r\n                    </Button>\r\n\r\n                    <Link to=\"/signup\">\r\n                      <IntlMessages id=\"signIn.signUp\"/>\r\n                    </Link>\r\n                  </div>\r\n                </fieldset>\r\n              </form>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        {\r\n          loader &&\r\n          <div className=\"loader-view\">\r\n            <CircularProgress/>\r\n          </div>\r\n        }\r\n        {showMessage && NotificationManager.error(alertMessage)}\r\n        <NotificationContainer/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({auth}) => {\r\n  const {loader, alertMessage, showMessage, authUser} = auth;\r\n  return {loader, alertMessage, showMessage, authUser}\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  userSignIn,\r\n  hideMessage,\r\n  showAuthLoader,\r\n})(SignIn);\r\n*/\r\nimport React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport IntlMessages from 'util/IntlMessages';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {\r\n  hideMessage,\r\n  showAuthLoader,  \r\n  userSignIn,\r\n} from 'actions/Auth';\r\nimport signUp from './SignUp';\r\nimport request from 'request';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\n\r\nclass SignIn extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: 'demo@example.com',\r\n      password: 'demo#123'\r\n    }\r\n  }\r\n\r\n  signInDB(username, password){\r\n    const self = this;\r\n    const url = \"http://localhost:3000/api-login\";\r\n    request.post(url,{form:{username:username, password:password}},\r\n    function optionalCallback(err, httpResponse, body) {\r\n      if (err) {\r\n          return console.error('upload failed:', err);\r\n      }\r\n      //console.log('Upload successful!  Server responded with:',httpResponse);\r\n      let result=  JSON.parse(httpResponse.body);\r\n      \r\n      self.setState({\r\n        userLogged:result.customer\r\n      });\r\n  \r\n    } ); \r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.showMessage) {\r\n      setTimeout(() => {\r\n        this.props.hideMessage();\r\n      }, 100);\r\n    }\r\n    if (this.props.authUser !== null) {\r\n      this.props.history.push('/');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if(this.state.userLogged){\r\n      console.log('token',this.state.userLogged) \r\n      return <Redirect to={{pathname:'/app/sample-page', userLogged:this.state.userLogged}}/>\r\n\r\n    }\r\n    const {\r\n      email,\r\n      password\r\n    } = this.state;\r\n    const {showMessage, loader, alertMessage} = this.props;\r\n    return (\r\n      <div\r\n        className=\"app-login-container d-flex justify-content-center align-items-center animated slideInUpTiny animation-duration-3\">\r\n        <div className=\"app-login-main-content\">\r\n\r\n          <div className=\"app-logo-content d-flex align-items-center justify-content-center\">\r\n            <Link className=\"logo-lg\" to=\"/\">\r\n              <img src={require(\"assets/images/logo.png\")} alt=\"logo\" height=\"240rem\"/>\r\n            </Link>\r\n          </div>\r\n\r\n          <div className=\"app-login-content\">\r\n            <div className=\"app-login-header mb-4\">\r\n              <h1><IntlMessages id=\"appModule.email\"/></h1>\r\n            </div>\r\n\r\n            <div className=\"app-login-form\">\r\n              <form>\r\n                <fieldset>\r\n                  <TextField\r\n                    label={<IntlMessages id=\"appModule.email\"/>}\r\n                    fullWidth\r\n                    onChange={(event) => this.setState({email: event.target.value})}\r\n                    defaultValue={email}\r\n                    margin=\"normal\"\r\n                    className=\"mt-1 my-sm-3\"\r\n                  />\r\n                  <TextField\r\n                    type=\"password\"\r\n                    label={<IntlMessages id=\"appModule.password\"/>}\r\n                    fullWidth\r\n                    onChange={(event) => this.setState({password: event.target.value})}\r\n                    defaultValue={password}\r\n                    margin=\"normal\"\r\n                    className=\"mt-1 my-sm-3\"\r\n                  />\r\n\r\n                  <div className=\"mb-3 d-flex align-items-center justify-content-between\">\r\n                    <Button onClick={() => {\r\n                      //<signUp/>\r\n                      //console.log('entro');\r\n                      //this.props.showAuthLoader();\r\n                      //this.props.userSignIn({email, password});\r\n                      //this.props.payloa\r\n                      this.signInDB(email, password);\r\n                    }} variant=\"contained\" color=\"primary\">\r\n                      <IntlMessages id=\"appModule.signIn\"/>\r\n                    </Button>\r\n\r\n                    <Link to=\"/signup\">\r\n                      <IntlMessages id=\"signIn.signUp\"/>\r\n                    </Link>\r\n                  </div>\r\n                </fieldset>\r\n              </form>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        {\r\n          loader &&\r\n          <div className=\"loader-view\">\r\n            <CircularProgress/>\r\n          </div>\r\n        }\r\n        {showMessage && NotificationManager.error(alertMessage)}\r\n        <NotificationContainer/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({auth}) => {\r\n  const {loader, alertMessage, showMessage, authUser} = auth;\r\n  return {loader, alertMessage, showMessage, authUser}\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  userSignIn,\r\n  hideMessage,\r\n  showAuthLoader,\r\n})(SignIn);\r\n"]},"metadata":{},"sourceType":"module"}