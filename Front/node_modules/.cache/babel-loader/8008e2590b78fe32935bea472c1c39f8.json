{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Noelia\\\\Desktop\\\\compra\\\\source\\\\src\\\\components\\\\Weather\\\\WeatherList.js\";\nimport React, { Component } from 'react';\nimport Moment from 'moment';\n\nvar WeatherList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WeatherList, _Component);\n\n  function WeatherList() {\n    _classCallCheck(this, WeatherList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WeatherList).apply(this, arguments));\n  }\n\n  _createClass(WeatherList, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"text-muted mb-4 pb-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, this.props.weather.map(function (data, index) {\n        return React.createElement(DayWeather, {\n          dayData: data,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return WeatherList;\n}(Component);\n\nvar DayWeather = function DayWeather(_ref) {\n  var dayData = _ref.dayData;\n  var temp = dayData.main.temp;\n  var day = dayData.dt_txt;\n  var iconId = dayData.weather[0].id;\n  Moment.locale('en');\n  var bgColorClass = 'list-weather-widget '; // Set the background colour based on the temperature\n\n  if (temp >= 30) {\n    bgColorClass += 'very-warm';\n  } else if (temp > 20 && temp < 30) {\n    bgColorClass += 'warm';\n  } else if (temp > 10 && temp < 20) {\n    bgColorClass += 'normal';\n  } else if (temp > 0 && temp < 10) {\n    bgColorClass += 'cold';\n  } else if (temp <= 0) {\n    bgColorClass += 'very-cold';\n  }\n\n  return React.createElement(\"div\", {\n    className: bgColorClass + \" mb-4 mb-md-3 row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"jr-fs-15 mb-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, Moment(day).format('ddd d MMM'))), React.createElement(\"div\", {\n    className: \"col-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"text-black jr-fs-xl wi wi-owm-\" + iconId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"mb-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, temp.toFixed(1), \" \\xB0C\")));\n};\n\nexport default WeatherList;","map":{"version":3,"sources":["C:\\Users\\Noelia\\Desktop\\compra\\source\\src\\components\\Weather\\WeatherList.js"],"names":["React","Component","Moment","WeatherList","props","weather","map","data","index","DayWeather","dayData","temp","main","day","dt_txt","iconId","id","locale","bgColorClass","format","toFixed"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,QAAnB;;IAGMC,W;;;;;;;;;;;;;6BAGK;AACP,aACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAuB,UAACC,IAAD,EAAOC,KAAP;AAAA,eAAiB,oBAAC,UAAD;AAAY,UAAA,OAAO,EAAED,IAArB;AAA2B,UAAA,GAAG,EAAEC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAjB;AAAA,OAAvB,CAFJ,CADF;AAOD;;;;EAXuBP,S;;AAc1B,IAAMQ,UAAU,GAAG,SAAbA,UAAa,OAAe;AAAA,MAAbC,OAAa,QAAbA,OAAa;AAChC,MAAMC,IAAI,GAAGD,OAAO,CAACE,IAAR,CAAaD,IAA1B;AACA,MAAME,GAAG,GAAGH,OAAO,CAACI,MAApB;AACA,MAAMC,MAAM,GAAGL,OAAO,CAACL,OAAR,CAAgB,CAAhB,EAAmBW,EAAlC;AACAd,EAAAA,MAAM,CAACe,MAAP,CAAc,IAAd;AAEA,MAAIC,YAAY,GAAG,sBAAnB,CANgC,CAOhC;;AACA,MAAIP,IAAI,IAAI,EAAZ,EAAgB;AACdO,IAAAA,YAAY,IAAI,WAAhB;AACD,GAFD,MAGK,IAAIP,IAAI,GAAG,EAAP,IAAaA,IAAI,GAAG,EAAxB,EAA4B;AAC/BO,IAAAA,YAAY,IAAI,MAAhB;AACD,GAFI,MAGA,IAAIP,IAAI,GAAG,EAAP,IAAaA,IAAI,GAAG,EAAxB,EAA4B;AAC/BO,IAAAA,YAAY,IAAI,QAAhB;AACD,GAFI,MAGA,IAAIP,IAAI,GAAG,CAAP,IAAYA,IAAI,GAAG,EAAvB,EAA2B;AAC9BO,IAAAA,YAAY,IAAI,MAAhB;AACD,GAFI,MAGA,IAAIP,IAAI,IAAI,CAAZ,EAAe;AAClBO,IAAAA,YAAY,IAAI,WAAhB;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAEA,YAAY,GAAG,mBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BhB,MAAM,CAACW,GAAD,CAAN,CAAYM,MAAZ,CAAmB,WAAnB,CAA9B,CADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAE,mCAAmCJ,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,EAOE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBJ,IAAI,CAACS,OAAL,CAAa,CAAb,CAArB,WADF,CAPF,CADF;AAcD,CAtCD;;AAwCA,eAAejB,WAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport Moment from 'moment';\r\n\r\n\r\nclass WeatherList extends Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"text-muted mb-4 pb-1\">\r\n        {\r\n          this.props.weather.map((data, index) => <DayWeather dayData={data} key={index}/>)\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst DayWeather = ({dayData}) => {\r\n  const temp = dayData.main.temp;\r\n  const day = dayData.dt_txt;\r\n  const iconId = dayData.weather[0].id;\r\n  Moment.locale('en');\r\n\r\n  let bgColorClass = 'list-weather-widget ';\r\n  // Set the background colour based on the temperature\r\n  if (temp >= 30) {\r\n    bgColorClass += 'very-warm';\r\n  }\r\n  else if (temp > 20 && temp < 30) {\r\n    bgColorClass += 'warm';\r\n  }\r\n  else if (temp > 10 && temp < 20) {\r\n    bgColorClass += 'normal';\r\n  }\r\n  else if (temp > 0 && temp < 10) {\r\n    bgColorClass += 'cold';\r\n  }\r\n  else if (temp <= 0) {\r\n    bgColorClass += 'very-cold';\r\n  }\r\n\r\n  return (\r\n    <div className={bgColorClass + \" mb-4 mb-md-3 row\"}>\r\n      <div className=\"col-5\">\r\n        <p className=\"jr-fs-15 mb-0\">{Moment(day).format('ddd d MMM')}</p>\r\n      </div>\r\n      <div className=\"col-3\">\r\n        <i className={\"text-black jr-fs-xl wi wi-owm-\" + iconId}/>\r\n      </div>\r\n      <div className=\"col-4\">\r\n        <p className=\"mb-0\">{temp.toFixed(1)} Â°C</p>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default WeatherList\r\n"]},"metadata":{},"sourceType":"module"}